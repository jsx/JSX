/*
 * draft.idl - draft specs with vender prefix
 */

// http://www.w3.org/TR/animation-timing/

[InterfaceObject]
interface WindowAnimationTiming {
    long requestAnimationFrame(FrameRequestCallback callback);
    void cancelAnimationFrame(long handle);

    // vender's extension
    long webkitRequestAnimationFrame(FrameRequestCallback callback);
    void webkitCancelAnimationFrame(long handle);

    long mozRequestAnimationFrame(FrameRequestCallback callback);
    void mozCancelAnimationFrame(long handle);
};

Window implements WindowAnimationTiming;

callback FrameRequestCallback = void (DOMTimeStamp time);

// http://www.w3.org/TR/url/
interface webkitURL : URL {
};

// http://www.w3.org/TR/webaudio/
interface webkitAudioContext : AudioContext {
};

// http://www.w3.org/TR/web-intents/
interface webkitIntent : Intent {
};

// http://www.w3.org/TR/IndexedDB/
interface webkitIDBCursor : IDBCursor { };
interface webkitIDBDatabase : IDBDatabase { };
interface webkitIDBFactory : IDBFactory { };
interface webkitIDBIndex : IDBIndex { };
interface webkitIDBKeyRange : IDBKeyRange { };
interface webkitIDBObjectStore: IDBObjectStore { };
interface webkitIDBRequest: IDBRequest { };
interface webkitIDBTransaction: IDBTransaction { };

// http://www.w3.org/TR/webaudio/#deprecation-section
partial interface AudioBufferSourceNode {
    // deprecated
    void noteOn(double when, optional double offset, optional double duration);
    // deprecated
    void noteOff(double when);
};
partial interface AudioContext {
    // deprecated
    void createGainNode();
    // deprecated
    void createDelayNode();
    // deprecated
    void createJavaScriptNode();
};
partial interface OscillatorNode {
    // deprecated
    void noteOn(double when);
    // deprecated
    void noteOff(double when);
};

// http://dev.w3.org/geo/api/spec-source-orientation.html
// invalid WebIDL (missing semicolon at the end of interfaces)

[Constructor(DOMString type, optional DeviceOrientationEventInit eventInitDict)]
interface DeviceOrientationEvent : Event {
  readonly attribute double? alpha;
  readonly attribute double? beta;
  readonly attribute double? gamma;
  readonly attribute boolean absolute;
};

dictionary DeviceOrientationEventInit : EventInit {
  double? alpha;
  double? beta;
  double? gamma;
  boolean absolute;
};


[Callback, NoInterfaceObject]
interface DeviceAcceleration {
  readonly attribute double? x;
  readonly attribute double? y;
  readonly attribute double? z;
};

[Callback, NoInterfaceObject]
interface DeviceRotationRate {
  readonly attribute double? alpha;
  readonly attribute double? beta;
  readonly attribute double? gamma;
};

[Constructor(DOMString type, optional DeviceMotionEventInit eventInitDict)]
interface DeviceMotionEvent : Event {
  readonly attribute DeviceAcceleration? acceleration;
  readonly attribute DeviceAcceleration? accelerationIncludingGravity;
  readonly attribute DeviceRotationRate? rotationRate;
  readonly attribute double? interval;
};

dictionary DeviceMotionEventInit : EventInit {
  DeviceAcceleration? acceleration;
  DeviceAcceleration? accelerationIncludingGravity;
  DeviceRotationRate? rotationRate;
  double? interval;
};

// mentiond in http://www.w3.org/TR/webmessaging/ but no IDL is provided.
partial interface Window {
  void postMessage(any message, DOMString targetOrigin, optional sequence<Transferable> transfer);
};

// defined in http://www.w3.org/TR/SVG11/
interface SVGMatrix {
};

// for mobile safari
partial interface CSSStyleDeclaration {
	DOMString webkitOverflowScrolling;
};
