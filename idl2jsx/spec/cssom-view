<!DOCTYPE html><html lang="en-US"><head>
  <meta charset="utf-8">
  <title>CSSOM View Module</title>
  <style>
   .propdef { font:inherit; line-height:2.3 }
  </style>
  <link href="../default.css" rel="stylesheet">
  <link href="https://www.w3.org/StyleSheets/TR/W3C-ED" rel="stylesheet">
 </head>
 <body class="draft">
<div class="head">
 
<!--begin-logo-->
<p><a href="http://www.w3.org/"><img alt="W3C" height="48" src="https://www.w3.org/Icons/w3c_home" width="72"></a></p>
<!--end-logo-->

 <h1>CSSOM View Module</h1>

 <h2 class="no-num no-toc" id="w3c-doctype">Editor's Draft 6 September 2013</h2>

 <dl>

  <dt>This Version:</dt>
  <dd class="dontpublish"><a href="http://dev.w3.org/csswg/cssom-view/">http://dev.w3.org/csswg/cssom-view/</a></dd>
  

  <dt class="dontpublish">Participate:</dt>
  <dd class="dontpublish"><a href="mailto:www-style@w3.org?subject=%5Bcssom-view%5D%20">www-style@w3.org</a>
  (<a href="http://lists.w3.org/Archives/Public/www-style/">archives</a>)
  <dd class="dontpublish"><a href="https://www.w3.org/Bugs/Public/enter_bug.cgi?product=CSS&amp;component=CSSOM%20View">File a bug</a>
  (<a href="https://www.w3.org/Bugs/Public/buglist.cgi?component=CSSOM%20View&amp;product=CSS&amp;resolution=---">open bugs</a>)
  <script async="" src="https://w3c-test.org/resources.whatwg.org/file-bug.js"></script>
  <dd class="dontpublish"><a href="irc://irc.w3.org:6665/css">IRC: #css on W3C</a></dd>

  
  

  
  

  <dt class="dontpublish">Previous Versions:</dt>
  <dd class="dontpublish"><a href="http://www.w3.org/TR/2009/WD-cssom-view-20090804/">http://www.w3.org/TR/2009/WD-cssom-view-20090804/</a></dd>
  <dd class="dontpublish"><a href="http://www.w3.org/TR/2008/WD-cssom-view-20080222/">http://www.w3.org/TR/2008/WD-cssom-view-20080222/</a></dd>
  <dd class="dontpublish"><a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/">http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/</a></dd>

  <dt>Editors:</dt>
  <dd>Simon Pieters
  (<a href="http://www.opera.com/">Opera Software ASA</a>)
  &lt;<a href="mailto:simponp@opera.com">simonp@opera.com</a>&gt;</dd>
  <dd><a href="http://www.w3.org/wiki/User:Gadams">Glenn Adams</a>
  (<a href="http://www.cox.com/">Cox Communications, Inc.</a>)
  &lt;<a href="mailto:glenn.adams@cox.com">glenn.adams@cox.com</a>&gt;</dd>

  <dt>Previous Editor:</dt>
  <dd><a href="http://annevankesteren.nl/">Anne van Kesteren</a>
  (<a href="http://www.opera.com/">Opera Software ASA</a>)
  &lt;<a href="mailto:annevk@annevk.nl">annevk@annevk.nl</a>&gt;</dd>
 </dl>

 
<!--begin-copyright-->
<p class="copyright"><a href="http://www.w3.org/Consortium/Legal/ipr-notice#Copyright">Copyright</a> © 2013 <a href="http://www.w3.org/"><abbr title="World Wide Web Consortium">W3C</abbr></a><sup>®</sup> (<a href="http://www.csail.mit.edu/"><abbr title="Massachusetts Institute of Technology">MIT</abbr></a>, <a href="http://www.ercim.eu/"><abbr title="European Research Consortium for Informatics and Mathematics">ERCIM</abbr></a>, <a href="http://www.keio.ac.jp/">Keio</a>, <a href="http://ev.buaa.edu.cn/">Beihang</a>), All Rights Reserved. W3C <a href="http://www.w3.org/Consortium/Legal/ipr-notice#Legal_Disclaimer">liability</a>, <a href="http://www.w3.org/Consortium/Legal/ipr-notice#W3C_Trademarks">trademark</a> and <a href="http://www.w3.org/Consortium/Legal/copyright-documents">document use</a> rules apply.</p>
<!--end-copyright-->

</div>

<hr>

<h2 class="no-num no-toc" id="abstract">Abstract</h2>

<p>The APIs introduced by this specification provide authors with a way to
inspect and manipulate the visual view of a document. This includes
getting the position of element layout boxes, obtaining the width
of the viewport through script, and also scrolling an element.</p>



<h2 class="no-num no-toc" id="sotd">Status of This Document</h2>

<p><em>This section describes the status of this document at the time of
its publication. Other documents may supersede this document. A list of
current W3C publications and the latest revision of this technical report
can be found in the <a href="http://www.w3.org/TR/">W3C technical reports
index at http://www.w3.org/TR/.</a></em>

<p>This is the 6 September 2013 Editor's Draft of CSSOM View. Please send
comments to
<a href="mailto:www-style@w3.org?subject=%5Bcssom-view%5D%20">www-style@w3.org</a>
(<a href="http://lists.w3.org/Archives/Public/www-style/">archived</a>)
with <samp>[cssom-view]</samp> at the start of the subject line.

<p>This document was produced by the <a href="http://www.w3.org/Style/CSS/members">CSS Working Group</a> (part of
the <a href="http://www.w3.org/Style/">Style Activity</a>).

<p>This document was produced by a group operating under the <a href="http://www.w3.org/Consortium/Patent-Policy-20040205/">5 February
2004 W3C Patent Policy</a>. W3C maintains a <a href="http://www.w3.org/2004/01/pp-impl/32061/status" rel="disclosure">public list of any patent disclosures</a> made in
connection with the deliverables of the group; that page also includes
instructions for disclosing a patent. An individual who has actual
knowledge of a patent which the individual believes contains <a href="http://www.w3.org/Consortium/Patent-Policy-20040205/#def-essential">Essential
Claim(s)</a> must disclose the information in accordance with <a href="http://www.w3.org/Consortium/Patent-Policy-20040205/#sec-Disclosure">section
6 of the W3C Patent Policy</a>.</p>

<p>Publication as a Working Draft does not imply endorsement by the W3C
Membership. This is a draft document and may be updated, replaced or
obsoleted by other documents at any time. It is inappropriate to cite this
document as other than work in progress.


<h2 class="no-num no-toc" id="toc">Table of Contents</h2>


<!--begin-toc-->
<ul class="toc">
 <li><a href="#background"><span class="secno">1 </span>Background</a></li>
 <li><a href="#conformance"><span class="secno">2 </span>Conformance</a>
  <ul class="toc">
   <li><a href="#web-idl"><span class="secno">2.1 </span>Web IDL</a></ul></li>
 <li><a href="#terminology"><span class="secno">3 </span>Terminology</a>
  <ul class="toc">
   <li><a href="#css-pixels"><span class="secno">3.1 </span>CSS pixels</a></ul></li>
 <li><a href="#common-infrastructure"><span class="secno">4 </span>Common Infrastructure</a>
  <ul class="toc">
   <li><a href="#scrolling"><span class="secno">4.1 </span>Scrolling</a></ul></li>
 <li><a href="#extensions-to-the-window-interface"><span class="secno">5 </span>Extensions to the <code title="">Window</code> Interface</a>
  <ul class="toc">
   <li><a href="#the-mediaquerylist-interface"><span class="secno">5.1 </span>The <code title="">MediaQueryList</code> Interface</a></li>
   <li><a href="#the-screen-interface"><span class="secno">5.2 </span>The <code title="">Screen</code> Interface</a></ul></li>
 <li><a href="#extensions-to-the-document-interface"><span class="secno">6 </span>Extensions to the <code title="">Document</code> Interface</a>
  <ul class="toc">
   <li><a href="#the-caretposition-interface"><span class="secno">6.1 </span>The <code title="">CaretPosition</code> Interface</a></ul></li>
 <li><a href="#extensions-to-the-element-interface"><span class="secno">7 </span>Extensions to the <code title="">Element</code> Interface</a>
  <ul class="toc">
   <li><a href="#the-getclientrects()-and-getboundingclientrect()-methods"><span class="secno">7.1 </span>The <code title="">getClientRects()</code> and
<code title="">getBoundingClientRect()</code> methods</a></li>
   <li><a href="#element-scrolling-members"><span class="secno">7.2 </span><code title="">Element</code> Scrolling Members</a></ul></li>
 <li><a href="#extensions-to-the-htmlelement-interface"><span class="secno">8 </span>Extensions to the <code title="">HTMLElement</code> Interface</a></li>
 <li><a href="#extensions-to-the-range-interface"><span class="secno">9 </span>Extensions to the <code title="">Range</code> Interface</a></li>
 <li><a href="#extensions-to-the-mouseevent-interface"><span class="secno">10 </span>Extensions to the <code title="">MouseEvent</code> Interface</a></li>
 <li><a href="#rectangles"><span class="secno">11 </span>Rectangles</a>
  <ul class="toc">
   <li><a href="#the-clientrectlist-interface"><span class="secno">11.1 </span>The <code title="">ClientRectList</code> Interface</a></li>
   <li><a href="#the-clientrect-interface"><span class="secno">11.2 </span>The <code title="">ClientRect</code> Interface</a></ul></li>
 <li><a href="#events"><span class="secno">12 </span>Events</a>
  <ul class="toc">
   <li><a href="#resizing-viewports"><span class="secno">12.1 </span>Resizing viewports</a></li>
   <li><a href="#scrolling-0"><span class="secno">12.2 </span>Scrolling</a></ul></li>
 <li><a href="#css-properties"><span class="secno">13 </span>CSS properties</a>
  <ul class="toc">
   <li><a href="#smooth-scrolling:-the-'scroll-behavior'-property"><span class="secno">13.1 </span>Smooth Scrolling: The 'scroll-behavior' Property</a></ul></li>
 <li><a class="no-num" href="#references">References</a></li>
 <li><a class="no-num" href="#acknowledgments">Acknowledgments</a></ul>
<!--end-toc-->


<h2 id="background"><span class="secno">1 </span>Background</h2>

<p>Many of the features defined in this specification have been supported
by browsers for a long period of time. The goal of this specification is
to define these features in such a way that they can be implemented by all
browsers in an interoperable manner. The specification also defines a
couple of new features that will hopefully be useful to authors. (If they
are not you can bug us!)</p>


<h2 id="conformance"><span class="secno">2 </span>Conformance</h2>

<p>All diagrams, examples, and notes in this specification are
non-normative, as are all sections explicitly marked non-normative.
Everything else in this specification is normative.

<p>The key words "MUST", "MUST NOT", "REQUIRED", <!--"SHALL", "SHALL
NOT",--> "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
"OPTIONAL" in the normative parts of this document are to be
interpreted as described in RFC2119. For readability, these words do
not appear in all uppercase letters in this specification. <a href="#refsRFC2119">[RFC2119]</a>

<p>Requirements phrased in the imperative as part of algorithms
(such as "strip any leading space characters" or "return false and
terminate these steps") are to be interpreted with the meaning of the
key word ("must", "should", "may", etc) used in introducing the
algorithm.

<p>Conformance requirements phrased as algorithms or specific steps
may be implemented in any manner, so long as the end result is
equivalent. (In particular, the algorithms defined in this
specification are intended to be easy to follow, and not intended to
be performant.)

<p id="hardwareLimitations">User agents may impose
implementation-specific limits on otherwise unconstrained inputs,
e.g. to prevent denial of service attacks, to guard against running
out of memory, or to work around platform-specific limitations. <!--fingerprint-->

<p>When a method or an attribute is said to call another method or attribute, the user agent must invoke its internal API for that attribute or method so that
e.g. the author can't change the behavior by overriding attributes or methods with custom properties or functions in ECMAScript.

<p>Unless otherwise stated, string comparisons are done in a <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#case-sensitive">case-sensitive</a> manner.

<p>A conforming user agent implements all the requirements made by this
specification.</p>


<h3 id="web-idl"><span class="secno">2.1 </span>Web IDL</h3>

<p>The IDL fragments in this specification must be
interpreted as required for conforming IDL fragments, as described in the
Web IDL specification. <a href="#refsWEBIDL">[WEBIDL]</a>


<h2 id="terminology"><span class="secno">3 </span>Terminology</h2>

<p>Terminology used in this specification is from
DOM,
CSSOM and
HTML.
<a href="#refsDOM">[DOM]</a>
<a href="#refsCSSOM">[CSSOM]</a>
<a href="#refsHTML">[HTML]</a>

<p class="issue"><dfn id="mouseevent"><code>MouseEvent</code></dfn> and <dfn id="mouseeventinit"><code>MouseEventInit</code></dfn> are defined in …

<p><dfn id="the-html-body-element">The HTML <code title="">body</code> element</dfn> is the first
<code title="">body</code>
<a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#html-elements" title="HTML elements">HTML element</a> child of the root
<a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#html-elements" title="HTML elements">HTML element</a> <code title="">html</code>.</p>

<p><dfn id="content-edge">Content edge</dfn>,
<dfn id="padding-edge">padding edge</dfn>,
<dfn id="border-edge">border edge</dfn>,
<dfn id="margin-edge">margin edge</dfn> and
<dfn id="canvas">canvas</dfn> are defined by CSS.
<!--<span data-anolis-ref>CSS</span>-->

<p><dfn id="viewport">Viewport</dfn> and
<dfn id="initial-containing-block">initial containing block</dfn> are
defined by CSS 2.1 unless there is an ancestor <code title="">foreignObject</code>
element in the <code title="">http://www.w3.org/2000/svg</code> namespace that has an associated <a href="#svg-layout-box">SVG layout box</a> in which
case that element acts as viewport and initial containing block.
<!--<span data-anolis-ref>CSS</span>-->

<p><dfn id="block-flow-direction">Block flow direction</dfn> and <dfn id="inline-base-direction">inline base direction</dfn> are defined in CSS Writing Modes Module. <a href="#refsCSSWRITINGMODES">[CSSWRITINGMODES]</a>

<p>A scrolling box of a <a href="#viewport">viewport</a> or element has two <dfn id="overflow-directions">overflow directions</dfn>, depending on the <a href="#viewport">viewport</a>'s or element's
<a href="#block-flow-direction">block flow direction</a> and <a href="#inline-base-direction">inline base direction</a>, as follows:

<dl class="switch">
 <dt>If the <a href="#block-flow-direction">block flow direction</a> is top-to-bottom and the <a href="#inline-base-direction">inline base direction</a> is left-to-right
 <dt>If the <a href="#block-flow-direction">block flow direction</a> is left-to-right and the <a href="#inline-base-direction">inline base direction</a> is left-to-right
 <dd><p>Rightward and downward.
 <dt>If the <a href="#block-flow-direction">block flow direction</a> is top-to-bottom and the <a href="#inline-base-direction">inline base direction</a> is right-to-left
 <dt>If the <a href="#block-flow-direction">block flow direction</a> is right-to-left and the <a href="#inline-base-direction">inline base direction</a> is left-to-right
 <dd><p>Leftward and downward.
 <dt>If the <a href="#block-flow-direction">block flow direction</a> is right-to-left and the <a href="#inline-base-direction">inline base direction</a> is right-to-left
 <dd><p>Leftward and upward.
 <dt>If the <a href="#block-flow-direction">block flow direction</a> is left-to-right and the <a href="#inline-base-direction">inline base direction</a> is right-to-left
 <dd><p>Righward and upward.
</dl>

<p>The term <dfn id="scrolling-area">scrolling area</dfn> refers to a box of a <a href="#viewport">viewport</a> or an element that has the following edges, depending on the
<a href="#viewport">viewport</a>'s or element's scrolling box's <a href="#overflow-directions">overflow directions</a>.

<table class="complex data">
 <thead>
  <tr>
   <th>If the <a href="#overflow-directions">overflow directions</a> are…
   <th>For a <a href="#viewport">viewport</a>
   <th>For an element
 <tbody>
  <tr>
   <td>rightward and downward
   <td class="long">
    <dl>
     <dt>top edge
     <dd><p>The top edge of the <a href="#initial-containing-block">initial containing block</a>.
     <dt>right edge
     <dd><p>The right-most edge of the right edge of the <a href="#initial-containing-block">initial containing block</a> and the right <a href="#margin-edge">margin edge</a> of the
     <a href="#viewport">viewport</a>'s all descendant boxes.
     <dt>bottom edge
     <dd><p>The bottom-most edge of the bottom edge of the <a href="#initial-containing-block">initial containing block</a> and the bottom <a href="#margin-edge">margin edge</a> of the
     <a href="#viewport">viewport</a>'s all descendant boxes.
     <dt>left edge
     <dd><p>The left edge of the <a href="#initial-containing-block">initial containing block</a>.
    </dl>
   <td class="long">
    <dl>
     <dt>top edge
     <dd><p>The element's top <a href="#padding-edge">padding edge</a>.
     <dt>right edge
     <dd><p>The right-most edge of the element's right <a href="#padding-edge">padding edge</a> and the right <a href="#margin-edge">margin edge</a> of the element's all descendant boxes,
     excluding boxes that have an ancestor of the element as their containing block.
     <dt>bottom edge
     <dd><p>The bottom-most edge of the element's bottom <a href="#padding-edge">padding edge</a> and the bottom <a href="#margin-edge">margin edge</a> of the element's all descendant
     boxes, excluding boxes that have an ancestor of the element as their containing block.
     <dt>left edge
     <dd><p>The element's left <a href="#padding-edge">padding edge</a>.
    </dl>
  <tr>
   <td>leftward and downward
   <td class="long">
    <dl>
     <dt>top edge
     <dd><p>The top edge of the <a href="#initial-containing-block">initial containing block</a>.
     <dt>right edge
     <dd><p>The right edge of the <a href="#initial-containing-block">initial containing block</a>.
     <dt>bottom edge
     <dd><p>The bottom-most edge of the bottom edge of the <a href="#initial-containing-block">initial containing block</a> and the bottom <a href="#margin-edge">margin edge</a> of the
     <a href="#viewport">viewport</a>'s all descendant boxes.
     <dt>left edge
     <dd><p>The left-most edge of the left edge of the <a href="#initial-containing-block">initial containing block</a> and the left <a href="#margin-edge">margin edge</a> of the
     <a href="#viewport">viewport</a>'s all descendant boxes.
    </dl>
   <td class="long">
    <dl>
     <dt>top edge
     <dd><p>The element's top <a href="#padding-edge">padding edge</a>.
     <dt>right edge
     <dd><p>The element's right <a href="#padding-edge">padding edge</a>.
     <dt>bottom edge
     <dd><p>The bottom-most edge of the element's bottom <a href="#padding-edge">padding edge</a> and the bottom <a href="#margin-edge">margin edge</a> of the element's all descendant
     boxes, excluding boxes that have an ancestor of the element as their containing block.
     <dt>left edge
     <dd><p>The left-most edge of the element's left <a href="#padding-edge">padding edge</a> and the left <a href="#margin-edge">margin edge</a> of the element's all descendant boxes,
     excluding boxes that have an ancestor of the element as their containing block.
    </dl>
  <tr>
   <td>leftward and upward
   <td class="long">
    <dl>
     <dt>top edge
     <dd><p>The top-most edge of the top edge of the <a href="#initial-containing-block">initial containing block</a> and the top <a href="#margin-edge">margin edge</a> of the
     <a href="#viewport">viewport</a>'s all descendant boxes.
     <dt>right edge
     <dd><p>The right edge of the <a href="#initial-containing-block">initial containing block</a>.
     <dt>bottom edge
     <dd><p>The bottom edge of the <a href="#initial-containing-block">initial containing block</a>.
     <dt>left edge
     <dd><p>The left-most edge of the left edge of the <a href="#initial-containing-block">initial containing block</a> and the left <a href="#margin-edge">margin edge</a> of the
     <a href="#viewport">viewport</a>'s all descendant boxes.
    </dl>
   <td class="long">
    <dl>
     <dt>top edge
     <dd><p>The top-most edge of the element's top <a href="#padding-edge">padding edge</a> and the top <a href="#margin-edge">margin edge</a> of the element's all descendant boxes,
     excluding boxes that have an ancestor of the element as their containing block.
     <dt>right edge
     <dd><p>The element's right <a href="#padding-edge">padding edge</a>.
     <dt>bottom edge
     <dd><p>The element's bottom <a href="#padding-edge">padding edge</a>.
     <dt>left edge
     <dd><p>The left-most edge of the element's left <a href="#padding-edge">padding edge</a> and the left <a href="#margin-edge">margin edge</a> of the element's all descendant boxes,
     excluding boxes that have an ancestor of the element as their containing block.
    </dl>
  <tr>
   <td>rightward and upward
   <td class="long">
    <dl>
     <dt>top edge
     <dd><p>The top-most edge of the top edge of the <a href="#initial-containing-block">initial containing block</a> and the top <a href="#margin-edge">margin edge</a> of the
     <a href="#viewport">viewport</a>'s all descendant boxes.
     <dt>right edge
     <dd><p>The right-most edge of the right edge of the <a href="#initial-containing-block">initial containing block</a> and the right <a href="#margin-edge">margin edge</a> of the
     <a href="#viewport">viewport</a>'s all descendant boxes.
     <dt>bottom edge
     <dd><p>The bottom edge of the <a href="#initial-containing-block">initial containing block</a>.
     <dt>left edge
     <dd><p>The left edge of the <a href="#initial-containing-block">initial containing block</a>.
    </dl>
   <td class="long">
    <dl>
     <dt>top edge
     <dd><p>The top-most edge of the element's top <a href="#padding-edge">padding edge</a> and the top <a href="#margin-edge">margin edge</a> of the element's all descendant boxes,
     excluding boxes that have an ancestor of the element as their containing block.
     <dt>right edge
     <dd><p>The right-most edge of the element's right <a href="#padding-edge">padding edge</a> and the right <a href="#margin-edge">margin edge</a> of the element's all descendant boxes,
     excluding boxes that have an ancestor of the element as their containing block.
     <dt>bottom edge
     <dd><p>The element's bottom <a href="#padding-edge">padding edge</a>.
     <dt>left edge
     <dd><p>The element's left <a href="#padding-edge">padding edge</a>.
    </dl>
</table>

<p>The <dfn id="beginning-edges">beginning edges</dfn> of a particular set of edges of a box or element are the following edges:

<dl class="switch">
 <dt>If the <a href="#overflow-directions">overflow directions</a> are rightward and downward
 <dd><p>The top and left edges.
 <dt>If the <a href="#overflow-directions">overflow directions</a> are leftward and downward
 <dd><p>The top and right edges.
 <dt>If the <a href="#overflow-directions">overflow directions</a> are leftward and upward
 <dd><p>The bottom and right edges.
 <dt>If the <a href="#overflow-directions">overflow directions</a> are rightward and upward
 <dd><p>The bottom and left edges.
</dl>

<p>The <dfn id="ending-edges">ending edges</dfn> of a particular set of edges of a box or element are the following edges:

<dl class="switch">
 <dt>If the <a href="#overflow-directions">overflow directions</a> are rightward and downward
 <dd><p>The bottom and right edges.
 <dt>If the <a href="#overflow-directions">overflow directions</a> are leftward and downward
 <dd><p>The bottom and left edges.
 <dt>If the <a href="#overflow-directions">overflow directions</a> are leftward and upward
 <dd><p>The top and left edges.
 <dt>If the <a href="#overflow-directions">overflow directions</a> are rightward and upward
 <dd><p>The top and right edges.
</dl>

<p>The term <dfn id="css-layout-box">CSS layout box</dfn> refers to the same term in CSS. For the purpose
of the requirements in this specification, elements that have a computed value of the
'display' property that is 'table-column' or
'table-column-group' must be considered to have an associated <a href="#css-layout-box">CSS
layout box</a> (the column or column group, respectively).</p>

<p>The term <dfn id="svg-layout-box">SVG layout box</dfn> refers to the same term in SVG.

<p class="issue">The terms <a href="#css-layout-box">CSS layout box</a> and <a href="#svg-layout-box">SVG layout box</a> are not currently defined by CSS or SVG.

<p>The term <dfn id="layout-box">layout box</dfn> refers to either a <a href="#css-layout-box">CSS layout box</a> or an <a href="#svg-layout-box">SVG layout box</a>.

<h3 id="css-pixels"><span class="secno">3.1 </span>CSS pixels</h3>

<p>All coordinates and dimensions for the APIs defined in this
specification are in CSS pixels, unless otherwise specified. <!--<span data-anolis-ref>CSS</span>-->

<p class="note">This does not apply to e.g.
<code title="dom-Window-matchMedia"><a href="#dom-window-matchmedia">matchMedia()</a></code> as the units
are explicitly given there.</p>



<h2 id="common-infrastructure"><span class="secno">4 </span>Common Infrastructure</h2>

<h3 id="scrolling"><span class="secno">4.1 </span>Scrolling</h3>

<p>When a user agent is to <dfn id="perform-a-scroll">perform a scroll</dfn> of a scrolling box <var>box</var>, to a given position <var>position</var>, with a set of 
steps <var>task</var>, an associated element <var>element</var> and optionally a scroll behavior <var>behavior</var> (which is
<code title="">auto</code> if omitted), the following steps must be run:

<ol>
 <li><p><a href="#concept-smooth-scroll-aborted" title="concept-smooth-scroll-aborted">Abort</a> any ongoing <a href="#concept-smooth-scroll" title="concept-smooth-scroll">smooth scroll</a> for <var>box</var>.
 <li><p>If the user agent honors the '<a href="#scroll-behavior">scroll-behavior</a>' property and one of the following are true:
  <ul>
   <li><p><var>behavior</var> is <code title="">auto</code> and <var>element</var> is not null and its computed value of the
   '<a href="#scroll-behavior">scroll-behavior</a>' property is '<a href="#scroll-behavior-smooth" title="scroll-behavior-smooth">smooth</a>'
   <li><p><var>behavior</var> is <code title="">smooth</code>
  </ul>
  <p>...then follow these substeps:
  <ol>
   <li><p>Perform a <a href="#concept-smooth-scroll" title="concept-smooth-scroll">smooth scroll</a> of <var>box</var> to <var>position</var>.
   <li><p><a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task">Queue a task</a> to run <var>task</var>, unless a <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#concept-task" title="concept-task">task</a> to
   run <var>task</var> is in the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task" title="queue a task">queue</a>.
   <li><p>Repeat the previous step in a user-agent-defined interval while the <a href="#concept-smooth-scroll" title="concept-smooth-scroll">smooth scroll</a> is ongoing, as well as when
   the <a href="#concept-smooth-scroll" title="concept-smooth-scroll">smooth scroll</a> is <a href="#concept-smooth-scroll-completed" title="concept-smooth-scroll-completed">completed</a> (but not if it is
   <a href="#concept-smooth-scroll-aborted" title="concept-smooth-scroll-aborted">aborted</a>). <!--fingerprint-->
  </ol>
 <li><p>Otherwise, follow these substeps:
  <ol>
   <li><p>Perform an <a href="#concept-instant-scroll" title="concept-instant-scroll">instant scroll</a> of <var>box</var> to <var>position</var>.
   <li><p><a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task">Queue a task</a> to run <var>task</var>, unless a <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#concept-task" title="concept-task">task</a> to
   run <var>task</var> is in the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task" title="queue a task">queue</a>.
  </ol>
</ol>

<p>When a user agent is to perform a <dfn id="concept-smooth-scroll" title="concept-smooth-scroll">smooth scroll</dfn> of a scrolling box <var>box</var> to <var>position</var>,
it must update the scroll position of <var>box</var> in a user-agent-defined fashion over a user-agent-defined amount of time. When the scroll is
<dfn id="concept-smooth-scroll-completed" title="concept-smooth-scroll-completed">completed</dfn>, the scroll position of <var>box</var> must be <var>position</var>. The scroll can also
be <dfn id="concept-smooth-scroll-aborted" title="concept-smooth-scroll-aborted">aborted</dfn>, either by an algorithm or by the user. <!--fingerprint-->

<p>When a user agent is to perform an <dfn id="concept-instant-scroll" title="concept-instant-scroll">instant scroll</dfn> of a scrolling box <var>box</var> to
<var>position</var>, it must update the scroll position of <var>box</var> to <var>position</var>.

<p>To <dfn id="scroll-to-the-beginning-of-the-document">scroll to the beginning of the document</dfn> for a document <var>document</var>, follow these steps:

<ol>
 <li><p>Let <var>viewport</var> be the <a href="#viewport">viewport</a> that is associated with <var>document</var>. <!-- This assumes that there is a viewport, since
 it is only invoked when navigating -->
 <li><p>Let <var>position</var> be the the scroll position <var>viewport</var> would have by aligning the <a href="#beginning-edges">beginning edges</a> of the
 <a href="#scrolling-area">scrolling area</a> with the <a href="#beginning-edges">beginning edges</a> of <var>viewport</var>.
 <li><p>If <var>position</var> is the same as <var>viewport</var>'s current scroll position, and <var>viewport</var> does not have an ongoing
 <a href="#concept-smooth-scroll" title="concept-smooth-scroll">smooth scroll</a>, abort these steps.
 <li><p>Let <var>task</var> be these steps:
  <ol>
   <li><p><a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-event-fire" title="concept-event-fire">Fire an event</a> named <code title="">scroll</code> that bubbles at <var>document</var>.
  </ol>
 <li><p><a href="#perform-a-scroll">Perform a scroll</a> of <var>viewport</var> to <var>position</var>, with the set of steps <var>task</var>, and <var>document</var>'s root
 element as the associated element, if there is one, or null otherwise.
</ol>

<p class="note">This algorithm is used when navigating to the <code title="">#top</code> fragment identifier, as defined in HTML. <a href="#refsHTML">[HTML]</a>

<h2 id="extensions-to-the-window-interface"><span class="secno">5 </span>Extensions to the <code title="">Window</code> Interface</h2>

<pre class="idl">enum <dfn id="scrollbehavior">ScrollBehavior</dfn> { "auto", "instant", "smooth" };

dictionary <dfn id="scrolloptions">ScrollOptions</dfn> {
  <a href="#scrollbehavior">ScrollBehavior</a> behavior = "auto";
};

partial interface <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#window">Window</a> {
  <a href="#mediaquerylist">MediaQueryList</a> <a href="#dom-window-matchmedia" title="dom-Window-matchMedia">matchMedia</a>(DOMString query);
  [SameObject] readonly attribute <a href="#screen">Screen</a> <a href="#dom-window-screen" title="dom-Window-screen">screen</a>;

  // browsing context
  void <a href="#dom-window-moveto" title="dom-Window-moveTo">moveTo</a>(double x, double y);
  void <a href="#dom-window-moveby" title="dom-Window-moveBy">moveBy</a>(double x, double y);
  void <a href="#dom-window-resizeto" title="dom-Window-resizeTo">resizeTo</a>(double x, double y);
  void <a href="#dom-window-resizeby" title="dom-Window-resizeBy">resizeBy</a>(double x, double y);

  // viewport
  readonly attribute double <a href="#dom-window-innerwidth" title="dom-Window-innerWidth">innerWidth</a>;
  readonly attribute double <a href="#dom-window-innerheight" title="dom-Window-innerHeight">innerHeight</a>;

  // viewport scrolling
  readonly attribute double <a href="#dom-window-scrollx" title="dom-Window-scrollX">scrollX</a>;
  readonly attribute double <a href="#dom-window-pagexoffset" title="dom-Window-pageXOffset">pageXOffset</a>;
  readonly attribute double <a href="#dom-window-scrolly" title="dom-Window-scrollY">scrollY</a>;
  readonly attribute double <a href="#dom-window-pageyoffset" title="dom-Window-pageYOffset">pageYOffset</a>;
  void <a href="#dom-window-scroll" title="dom-Window-scroll">scroll</a>(double x, double y, optional <a href="#scrolloptions">ScrollOptions</a> options);
  void <a href="#dom-window-scrollto" title="dom-Window-scrollTo">scrollTo</a>(double x, double y, optional <a href="#scrolloptions">ScrollOptions</a> options);
  void <a href="#dom-window-scrollby" title="dom-Window-scrollBy">scrollBy</a>(double x, double y, optional <a href="#scrolloptions">ScrollOptions</a> options);

  // client
  readonly attribute double <a href="#dom-window-screenx" title="dom-Window-screenX">screenX</a>;
  readonly attribute double <a href="#dom-window-screeny" title="dom-Window-screenY">screenY</a>;
  readonly attribute double <a href="#dom-window-outerwidth" title="dom-Window-outerWidth">outerWidth</a>;
  readonly attribute double <a href="#dom-window-outerheight" title="dom-Window-outerHeight">outerHeight</a>;
};</pre>

<p>When the <dfn id="dom-window-matchmedia" title="dom-Window-matchMedia"><code>matchMedia(<var>query</var>)</code></dfn> method is invoked these steps must be run:</p>
<ol>
 <li><p>Let <var>parsed media query list</var> be the result of
 <a class="external" data-anolis-spec="cssom" href="http://dev.w3.org/csswg/cssom/#parse-a-media-query-list" title="parse a media query list">parsing</a>
 <var>query</var>.</li>
 <li><p>Return a <em>new</em> <code><a href="#mediaquerylist">MediaQueryList</a></code> object,
 associated with the <code class="external" data-anolis-spec="html"><a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#window">Window</a></code> object, with
 <var>parsed media query list</var> as its associated
 media query list.</li>
</ol>

<p>The <dfn id="dom-window-screen" title="dom-Window-screen"><code>screen</code></dfn> attribute must return the <code><a href="#screen">Screen</a></code> object
associated with the <code class="external" data-anolis-spec="html"><a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#window">Window</a></code> object.</p>
<p class="note">Accessing <code title="dom-Window-screen"><a href="#dom-window-screen">screen</a></code> through a <code class="external" data-anolis-spec="html"><a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#windowproxy">WindowProxy</a></code> object might yield different
results when the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is navigated.</p>

<p>The <dfn id="dom-window-moveto" title="dom-Window-moveTo">moveTo</dfn> method must follow these steps:

<ol>
 <li><p>Optionally, terminate these steps.
 <li><p>Let <var>target</var> be the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context">browsing context</a> of the <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#context-object">context
 object</a>.
 <li><p>Let <var>source</var> be the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context">browsing context</a> of the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#incumbent-script">incumbent script</a>.
 <li><p>If <var>source</var> is not <a href="#allowed-to-resize-and-move">allowed to resize and move</a> <var>target</var>, terminate these steps.
 <li><p>Optionally, clamp <var>x</var> and <var>y</var> in a user-agent-defined manner so that the window does not move outside the available space.
 <li><p>Move <var>target</var>'s window such that the window's top left corner is at coordinates (<var>x</var>, <var>y</var>) relative to the top left corner of
 the output device, measured in CSS pixels at 100% zoom. The positive axes are rightward and downward.
</ol>

<p>The <dfn id="dom-window-moveby" title="dom-Window-moveBy">moveBy</dfn> method must follow these steps:

<ol>
 <li><p>Optionally, terminate these steps.
 <li><p>Let <var>target</var> be the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context">browsing context</a> of the <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#context-object">context
 object</a>.
 <li><p>Let <var>source</var> be the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context">browsing context</a> of the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#incumbent-script">incumbent script</a>.
 <li><p>If <var>source</var> is not <a href="#allowed-to-resize-and-move">allowed to resize and move</a> <var>target</var>, terminate these steps.
 <li><p>Optionally, clamp <var>x</var> and <var>y</var> in a user-agent-defined manner so that the window does not move outside the available space.
 <li><p>Move <var>target</var>'s window <var>x</var> CSS pixels at 100% zoom righward and <var>y</var> CSS pixels at 100% zoom downward.
</ol>


<p>The <dfn id="dom-window-resizeto" title="dom-Window-resizeTo">resizeTo</dfn> method must follow these steps:

<ol>
 <li><p>Optionally, terminate these steps.
 <li><p>Let <var>target</var> be the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context">browsing context</a> of the <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#context-object">context
 object</a>.
 <li><p>Let <var>source</var> be the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context">browsing context</a> of the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#incumbent-script">incumbent script</a>.
 <li><p>If <var>source</var> is not <a href="#allowed-to-resize-and-move">allowed to resize and move</a> <var>target</var>, terminate these steps.
 <li><p>Optionally, clamp <var>x</var> and <var>y</var> in a user-agent-defined manner so that the window does not get too small or bigger than the available
 space. 
 <li><p>Resize <var>target</var>'s window by moving its right and bottom edges such that the distance between the left and right edges are <var>x</var> CSS
 pixels at 100% zoom and the distance between the top and bottom edges are <var>y</var> CSS pixels at 100% zoom.
 <li><p>Optionally, move <var>target</var>'s window in a user-agent-defined manner so that it does not grow outside the available space.
</ol>

<p>The <dfn id="dom-window-resizeby" title="dom-Window-resizeBy">resizeBy</dfn> method must follow these steps:

<ol>
 <li><p>Optionally, terminate these steps.
 <li><p>Let <var>target</var> be the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context">browsing context</a> of the <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#context-object">context
 object</a>.
 <li><p>Let <var>source</var> be the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context">browsing context</a> of the <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#incumbent-script">incumbent script</a>.
 <li><p>If <var>source</var> is not <a href="#allowed-to-resize-and-move">allowed to resize and move</a> <var>target</var>, terminate these steps.
 <li><p>Optionally, clamp <var>x</var> and <var>y</var> in a user-agent-defined manner so that the window does not get too small or bigger than the available
 space. 
 <li><p>Resize <var>target</var>'s window by moving its right edge <var>x</var> CSS pixels at 100% zoom righward and its bottom edge <var>y</var> CSS pixels at
 100% zoom downward.
 <li><p>Optionally, move <var>target</var>'s window in a user-agent-defined manner so that it does not grow outside the available space.
</ol>

<p>A <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context">browsing context</a> <var>A</var> is <dfn id="allowed-to-resize-and-move">allowed to resize and move</dfn> a <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context">browsing
context</a> <var>B</var> if all the following conditions are met:

<ul>
 <li><p><var>B</var> is an <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#auxiliary-browsing-context">auxiliary browsing context</a> that was created by a script (as opposed to by an action of the user).
 <li><p><var>A</var> is <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#familiar-with">familiar with</a> <var>B</var>.
</ul>

<p>The <dfn id="dom-window-innerwidth" title="dom-Window-innerWidth"><code>innerWidth</code></dfn> attribute must return the <a href="#viewport">viewport</a> width including the size of a rendered
scroll bar (if any), or zero if there is no <a href="#viewport">viewport</a>. <!--fingerprint--></p>
<div class="example">
 <p>The following snippet shows how to obtain the width of the viewport:</p>
 <pre>var viewportWidth = innerWidth</pre>
</div>


<p>The  <dfn id="dom-window-innerheight" title="dom-Window-innerHeight"><code>innerHeight</code></dfn> attribute must return the <a href="#viewport">viewport</a> height including the size of a rendered
scroll bar (if any), or zero if there is no <a href="#viewport">viewport</a>. <!--fingerprint--></p>


<p>The <dfn id="dom-window-scrollx" title="dom-Window-scrollX"><code>scrollX</code></dfn> attribute attribute must return the x-coordinate, relative to the <a href="#initial-containing-block">initial containing
block</a> origin, of the left of the <a href="#viewport">viewport</a>, or zero if there is no <a href="#viewport">viewport</a>. <!--fingerprint--></p>

<p>The <dfn id="dom-window-pagexoffset" title="dom-Window-pageXOffset"><code>pageXOffset</code></dfn> attribute must return the value returned by the
<code title="dom-Window-scrollX"><a href="#dom-window-scrollx">scrollX</a></code> attribute.</p>

<p>The <dfn id="dom-window-scrolly" title="dom-Window-scrollY"><code>scrollY</code></dfn> attribute attribute must return the y-coordinate, relative to the <a href="#initial-containing-block">initial containing
block</a> origin, of the top of the <a href="#viewport">viewport</a>, or zero if there is no <a href="#viewport">viewport</a>. <!--fingerprint--></p>

<p>The <dfn id="dom-window-pageyoffset" title="dom-Window-pageYOffset"><code>pageYOffset</code></dfn> attribute must return the value returned by the
<code title="dom-Window-scrollY"><a href="#dom-window-scrolly">scrollY</a></code> attribute.</p>

<p>When the <dfn id="dom-window-scroll" title="dom-Window-scroll"><code>scroll(<var>x</var>, <var>y</var>, <var>options</var>)</code></dfn> method is invoked these
steps must be run:</p>
<ol>
 <li><p>If there is no <a href="#viewport">viewport</a>, abort these steps.
 <li><p>Let <var>viewport width</var> be the width of the <a href="#viewport">viewport</a> excluding the width of the scroll bar, if any.
 <li><p>Let <var>viewport height</var> be the height of the <a href="#viewport">viewport</a> excluding the height of the scroll bar, if any.
 <li>
  <dl class="switch">
   <dt>If the <a href="#viewport">viewport</a> has rightward <a href="#overflow-directions" title="overflow directions">overflow direction</a>
   <dd><p>Let <var>x</var> be max(0, min(<var>x</var>,
   <a href="#viewport">viewport</a> <a href="#scrolling-area">scrolling area</a> width - <var>viewport width</var>)).</dd>
   <dt>If the <a href="#viewport">viewport</a> has leftward <a href="#overflow-directions" title="overflow directions">overflow direction</a>
   <dd><p>Let <var>x</var> be min(0, max(<var>x</var>,
   <var>viewport width</var> - <a href="#viewport">viewport</a> <a href="#scrolling-area">scrolling area</a>
   width)).</dd>
  </dl>
 <li>
  <dl class="switch">
   <dt>If the <a href="#viewport">viewport</a> has downward <a href="#overflow-directions" title="overflow directions">overflow direction</a>
   <dd><p>Let <var>y</var> be max(0, min(<var>y</var>,
   <a href="#viewport">viewport</a> <a href="#scrolling-area">scrolling area</a> height - <var>viewport height</var>)).</dd>
   <dt>If the <a href="#viewport">viewport</a> has upward <a href="#overflow-directions" title="overflow directions">overflow direction</a>
   <dd><p>Let <var>y</var> be min(0, max(<var>y</var>,
   <var>viewport height</var> - <a href="#viewport">viewport</a> <a href="#scrolling-area">scrolling area</a>
   height)).</dd>
  </dl>
 <li><p>Let <var>position</var> be the scroll position the <a href="#viewport">viewport</a> would have by aligning the x-coordinate <var>x</var> of the
 <a href="#viewport">viewport</a> <a href="#scrolling-area">scrolling area</a> with the left of the <a href="#viewport">viewport</a> and aligning the y-coordinate <var>y</var> of the
 <a href="#viewport">viewport</a> <a href="#scrolling-area">scrolling area</a> with the top of the <a href="#viewport">viewport</a>.
 <li><p>If <var>position</var> is the same as the <a href="#viewport">viewport</a>'s current scroll position, and the <a href="#viewport">viewport</a> does not have an ongoing
 <a href="#concept-smooth-scroll" title="concept-smooth-scroll">smooth scroll</a>, abort these steps.
 <li><p>Let <var>task</var> be these steps:
  <ol>
   <li><p><a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-event-fire" title="concept-event-fire">Fire an event</a> named <code title="">scroll</code> that bubbles at the
   <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> object.
  </ol>
 <li><p><a href="#perform-a-scroll">Perform a scroll</a> of the <a href="#viewport">viewport</a> to <var>position</var>, with the set of steps <var>task</var>, and the
 <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code>'s root element as the associated element, if there is one, or null otherwise, and the scroll behavior being the
 value of the <code title="">behavior</code> dictionary member of <var>options</var>.
</ol>

<p>When the <dfn id="dom-window-scrollto" title="dom-Window-scrollTo"><code>scrollTo(<var>x</var>, <var>y</var>, <var>options</var>)</code></dfn> method is invoked, the
user agent must act as if the <code title="dom-Window-scroll"><a href="#dom-window-scroll">scroll()</a></code> method was invoked with the same arguments.</p>

<p>When the <dfn id="dom-window-scrollby" title="dom-Window-scrollBy"><code>scrollBy(<var>x</var>, <var>y</var>, <var>options</var>)</code></dfn> method is invoked, the
user agent must act as if the <code title="dom-Window-scroll"><a href="#dom-window-scroll">scroll()</a></code> method was invoked with
<var>x</var> plus <code title="dom-Window-scrollX"><a href="#dom-window-scrollx">scrollX</a></code>
as first argument and <var>y</var> plus
<code title="dom-Window-scrollY"><a href="#dom-window-scrolly">scrollY</a></code> as second argument.</p>

<p>The <dfn id="dom-window-screenx" title="dom-Window-screenX"><code>screenX</code></dfn> attribute must return the x-coordinate,
relative to the origin of the screen of the output device, of the left of
the client window as number of pixels, or zero if there is no such
thing. <!--fingerprint--></p>

<p>The <dfn id="dom-window-screeny" title="dom-Window-screenY"><code>screenY</code></dfn> attribute must return the y-coordinate,
relative to the origin of the screen of the output device, of the top of
the client window as number of pixels, or zero if there is no such
thing. <!--fingerprint--></p>

<p>The <dfn id="dom-window-outerwidth" title="dom-Window-outerWidth"><code>outerWidth</code></dfn> attribute must return the width of the
client window. If there is no client window this
attribute must return zero. <!--fingerprint--></p>

<p>The <dfn id="dom-window-outerheight" title="dom-Window-outerHeight"><code>outerHeight</code></dfn> attribute must return the height of the
client window. If there is no client window this
attribute must return zero. <!--fingerprint--></p>


<h3 id="the-mediaquerylist-interface"><span class="secno">5.1 </span>The <code title="">MediaQueryList</code> Interface</h3>

<p>A <code><a href="#mediaquerylist">MediaQueryList</a></code> object has an associated media query list set on creation and an associated
<dfn id="list-of-media-query-list-listeners">list of media query list listeners</dfn>, which is initially empty.</p>
<p>If the associated media query list changes in evaluation then, for each
listener in the <a href="#list-of-media-query-list-listeners">list of media query list listeners</a> — in
appending order, <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task">queue a task</a> that invokes the listener,
passing as argument the <code><a href="#mediaquerylist">MediaQueryList</a></code> object.</p>
<div class="example">
<p>A simple piece of code that detects changes in the orientation of the viewport can be written as follows:</p>
<pre>function handleOrientationChange(mql) {
    if(mql.matches) // landscape
      …
    else
      …
  }
  var mql = matchMedia("(orientation:landscape)")
  mql.addListener(handleOrientationChange)</pre>
</div>

<pre class="idl">interface <dfn id="mediaquerylist">MediaQueryList</dfn> {
  readonly attribute DOMString <a href="#dom-mediaquerylist-media" title="dom-MediaQueryList-media">media</a>;
  readonly attribute boolean <a href="#dom-mediaquerylist-matches" title="dom-MediaQueryList-matches">matches</a>;
  void <a href="#dom-mediaquerylist-addlistener" title="dom-MediaQueryList-addListener">addListener</a>(<a href="#mediaquerylistlistener">MediaQueryListListener</a> listener);
  void <a href="#dom-mediaquerylist-removelistener" title="dom-MediaQueryList-removeListener">removeListener</a>(<a href="#mediaquerylistlistener">MediaQueryListListener</a> listener);
};

callback <dfn id="mediaquerylistlistener">MediaQueryListListener</dfn> = void (<a href="#mediaquerylist">MediaQueryList</a> list);</pre>

<p>The <dfn id="dom-mediaquerylist-media" title="dom-MediaQueryList-media"><code>media</code></dfn> attribute must return the
<a class="external" data-anolis-spec="cssom" href="http://dev.w3.org/csswg/cssom/#serialize-a-media-query-list" title="serialize a media query list">serialized</a> form of the associated media query list.</p>

<p>The <dfn id="dom-mediaquerylist-matches" title="dom-MediaQueryList-matches"><code>matches</code></dfn> attribute must return true if the associated media query list
matches the state of the rendered <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> and false if it does not. <!--fingerprint--></p>

<p>When the <dfn id="dom-mediaquerylist-addlistener" title="dom-MediaQueryList-addListener"><code>addListener(<var>listener</var>)</code></dfn> method is invoked <var>listener</var> must
be appended to the <a href="#list-of-media-query-list-listeners">list of media query list listeners</a>, unless
it is already in the <a href="#list-of-media-query-list-listeners">list of media query list listeners</a>.</p>

<p>When the <dfn id="dom-mediaquerylist-removelistener" title="dom-MediaQueryList-removeListener"><code>removeListener(<var>listener</var>)</code></dfn> method is invoked
<var>listener</var> must be removed from the <a href="#list-of-media-query-list-listeners">list of media query list listeners</a>.</p>

<h3 id="the-screen-interface"><span class="secno">5.2 </span>The <code title="">Screen</code> Interface</h3>

<p>As its name suggests, the <code><a href="#screen">Screen</a></code> interface represents information about the screen of the output device.</p>

<pre class="idl">interface <dfn id="screen">Screen</dfn> {
  readonly attribute double <a href="#dom-screen-availwidth" title="dom-Screen-availWidth">availWidth</a>;
  readonly attribute double <a href="#dom-screen-availheight" title="dom-Screen-availHeight">availHeight</a>;
  readonly attribute double <a href="#dom-screen-width" title="dom-Screen-width">width</a>;
  readonly attribute double <a href="#dom-screen-height" title="dom-Screen-height">height</a>;
  readonly attribute unsigned long <a href="#dom-screen-colordepth" title="dom-Screen-colorDepth">colorDepth</a>;
  readonly attribute unsigned long <a href="#dom-screen-pixeldepth" title="dom-Screen-pixelDepth">pixelDepth</a>;
};</pre>

<p>The <dfn id="dom-screen-availwidth" title="dom-Screen-availWidth"><code>availWidth</code></dfn> attribute must return the available width of the rendering surface of the output
device, in CSS pixels at 100% zoom. <!--fingerprint--></p>

<p>The <dfn id="dom-screen-availheight" title="dom-Screen-availHeight"><code>availHeight</code></dfn> attribute must return the available height of the rendering surface of the output
device, in CSS pixels at 100% zoom. <!--fingerprint--></p>

<p>The <dfn id="dom-screen-width" title="dom-Screen-width"><code>width</code></dfn> attribute must return the width of the output device, in CSS pixels at 100% zoom.
<!--fingerprint--></p>

<p>The <dfn id="dom-screen-height" title="dom-Screen-height"><code>height</code></dfn> attribute must return the height of the output device, in CSS pixels at 100% zoom.
<!--fingerprint--></p>

<p>The <dfn id="dom-screen-colordepth" title="dom-Screen-colorDepth"><code>colorDepth</code></dfn> attribute must return 24.</p>

<p>The <dfn id="dom-screen-pixeldepth" title="dom-Screen-pixelDepth"><code>pixelDepth</code></dfn> attribute must return 24.</p>

<p class="note">The <code title="dom-Screen-colorDepth"><a href="#dom-screen-colordepth">colorDepth</a></code> and <code title="dom-Screen-pixelDepth"><a href="#dom-screen-pixeldepth">pixelDepth</a></code> attributes are useless but are
included for compatibility.


<h2 id="extensions-to-the-document-interface"><span class="secno">6 </span>Extensions to the <code title="">Document</code> Interface</h2>

<pre class="idl">partial interface <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#document">Document</a> {
  <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#element">Element</a>? <a href="#dom-document-elementfrompoint" title="dom-Document-elementFromPoint">elementFromPoint</a>(double x, double y);
  sequence&lt;<a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#element">Element</a>&gt; <a href="#dom-document-elementsfrompoint" title="dom-Document-elementsFromPoint">elementsFromPoint</a>(double x, double y);
  <a href="#caretposition">CaretPosition</a>? <a href="#dom-document-caretpositionfrompoint" title="dom-Document-caretPositionFromPoint">caretPositionFromPoint</a>(double x, double y);
};</pre>

<p>The <dfn id="dom-document-elementfrompoint" title="dom-Document-elementFromPoint"><code>elementFromPoint(<var>x</var>, <var>y</var>)</code></dfn> method must follow these steps:

<ol>
 <li><p>If either argument is negative, <var>x</var> is greater than the <a href="#viewport">viewport</a> width excluding the size of a rendered scroll bar (if any), or
 <var>y</var> is greater than the <a href="#viewport">viewport</a> height excluding the size of a rendered scroll bar (if any), or there is no <a href="#viewport">viewport</a>
 associated with the document, return null and terminate these steps.
 <li><p>If there is a <a href="#layout-box">layout box</a> in the <a href="#viewport">viewport</a> that would be a target for hit testing at coordinates <var>x</var>,<var>y</var>,
 return the associated element and terminate these steps.
 <li><p>If the document has a root element, return the root element and terminate these steps.
 <li><p>Return null.
</ol>

<p class="note">The <code title="dom-Document-elementFromPoint"><a href="#dom-document-elementfrompoint">elementFromPoint()</a></code> method does not necessarily return the top-most painted element. For
instance, an element can be excluded from being a target for hit testing by using the 'pointer-events' CSS property.

<p class="atrisk">The <dfn id="dom-document-elementsfrompoint" title="dom-Document-elementsFromPoint"><code>elementsFromPoint(<var>x</var>, <var>y</var>)</code></dfn> method must follow these steps:

<ol>
 <li><p>Let <var>sequence</var> be a new empty sequence.
 <li><p>If either argument is negative, <var>x</var> is greater than the <a href="#viewport">viewport</a> width excluding the size of a rendered scroll bar (if any), or
 <var>y</var> is greater than the <a href="#viewport">viewport</a> height excluding the size of a rendered scroll bar (if any), or there is no <a href="#viewport">viewport</a>
 associated with the document, return <var>sequence</var> and terminate these steps.
 <li><p>For each <a href="#layout-box">layout box</a> in the <a href="#viewport">viewport</a>, in paint order, starting with the topmost box, that would be a target for hit testing at
 coordinates <var>x</var>,<var>y</var> even if nothing would be overlapping it, append the associated element to <var>sequence</var>.
 <li><p>If the document has a root element, and the last item in <var>sequence</var> is not the root element, append the root element to <var>sequence</var>.
 <li><p>Return <var>sequence</var>.
</ol>

<p>The <dfn id="dom-document-caretpositionfrompoint" title="dom-Document-caretPositionFromPoint"><code>caretPositionFromPoint(<var>x</var>, <var>y</var>)</code></dfn> method must return the
result of running these steps:</p>
<ol>
 <li><p>If there is no <a href="#viewport">viewport</a> associated with the document, return null.
 <li><p>If either argument is negative, <var>x</var> is greater
 than the <a href="#viewport">viewport</a> width excluding the size of a rendered
 scroll bar (if any), <var>y</var> is greather than the
 <a href="#viewport">viewport</a> height excluding the size of a rendered scroll bar
 (if any) return null.</li>
 <li><p>If at the coordinates <var>x</var>,<var>y</var>
 in the <a href="#viewport">viewport</a> no text insertion point indicator would have
 been inserted return null.</li>
 <li>
  <p>If at the coordinates <var>x</var>,<var>y</var>
  in the <a href="#viewport">viewport</a> a text insertion point indicator would have
  been inserted in a text entry widget which is also a replaced element
  return a <a href="#caret-position">caret position</a> with its properties set as
  follows:</p>
  <dl>
   <dt><a href="#caret-node">caret node</a></dt>
   <dd><p>The node corresponding to the text entry widget.</dd>
   <dt><a href="#caret-offset">caret offset</a></dt>
   <dd><p>The amount of 16-bit units to the left of where the
   text insertion point indicator would have inserted.</dd>
   <dt><a href="#caret-range">caret range</a></dt>
   <dd><p>null</dd>
  </dl>
 </li>
 <li>
  <p>Otherwise, return a <a href="#caret-position">caret position</a> where the
  <a href="#caret-range">caret range</a> is a collapsed
  <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#range">Range</a></code> object for the position
  where the text insertion point indicator would have been inserted and
  the other properties are set as follows:</p>
  <dl>
   <dt><a href="#caret-node">caret node</a></dt>
   <dd><p>The <code class="external" data-anolis-spec="dom" title="dom-Range-startContainer"><a href="http://dom.spec.whatwg.org/#dom-range-startcontainer">startContainer</a></code>
   of the <a href="#caret-range">caret range</a>.</dd>
   <dt><a href="#caret-offset">caret offset</a></dt>
   <dd><p>The <code class="external" data-anolis-spec="dom" title="dom-Range-startOffset"><a href="http://dom.spec.whatwg.org/#dom-range-startoffset">startOffset</a></code> of
   the <a href="#caret-range">caret range</a>.</p>
  </dl>
 </li>
</ol>
<p class="note">The specifics of hit testing are out of scope of this
specification and therefore the exact details of
<code title="dom-Document-elementFromPoint"><a href="#dom-document-elementfrompoint">elementFromPoint()</a></code> and
<code title="dom-Document-caretPositionFromPoint"><a href="#dom-document-caretpositionfrompoint">caretPositionFromPoint()</a></code>
are therefore too. Hit testing will hopefully be defined in a future
revision of CSS or HTML.</p>

<h3 id="the-caretposition-interface"><span class="secno">6.1 </span>The <code title="">CaretPosition</code> Interface</h3>

<p>A <dfn id="caret-position">caret position</dfn> gives the position of a text insertion point indicator. It always has an associated
<dfn id="caret-node">caret node</dfn>, <dfn id="caret-offset">caret offset</dfn>, and <dfn id="caret-range">caret range</dfn>. It is represented by a <code><a href="#caretposition">CaretPosition</a></code> object.</p>
  
<pre class="idl">interface <dfn id="caretposition">CaretPosition</dfn> {
  readonly attribute <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#node">Node</a> <a href="#dom-caretposition-offsetnode" title="dom-CaretPosition-offsetNode">offsetNode</a>;
  readonly attribute unsigned long <a href="#dom-caretposition-offset" title="dom-CaretPosition-offset">offset</a>;
  <a href="#clientrect">ClientRect</a>? <a href="#dom-caretposition-getclientrect" title="dom-CaretPosition-getClientRect">getClientRect</a>();
};</pre>

<p>The <dfn id="dom-caretposition-offsetnode" title="dom-CaretPosition-offsetNode"><code>offsetNode</code></dfn> attribute must return the <a href="#caret-node">caret node</a>.</p>

<p>The <dfn id="dom-caretposition-offset" title="dom-CaretPosition-offset"><code>offset</code></dfn> attribute must return the <a href="#caret-offset">caret offset</a>.</p>

<p>The <dfn id="dom-caretposition-getclientrect" title="dom-CaretPosition-getClientRect"><code>getClientRect()</code></dfn> method must follow these steps, aborting on the first step that
returns a value:</p>
<ol>
 <li>
  <p>If <a href="#caret-range">caret range</a> is not null:
  <ol>
   <li><p>Let <var>list</var> be the result of invoking the
   <code title="dom-Range-getClientRects"><a href="#dom-range-getclientrects">getClientRects()</a></code> method on the
   range.
   <li><p>If <var>list</var> is empty, return null.
   <li><p>Return the <code><a href="#clientrect">ClientRect</a></code> object in <var>list</var> at index 0.
  </ol>
 <li><p>If <a href="#caret-node">caret node</a> is a text entry widget that is a replaced element,
 and that is in the document, return a <code><a href="#clientrect">ClientRect</a></code> object for the caret
 in the widget as represented by the <a href="#caret-offset">caret offset</a> value.
 <li><p>Return null.
</ol>

<h2 id="extensions-to-the-element-interface"><span class="secno">7 </span>Extensions to the <code title="">Element</code> Interface</h2>

<pre class="idl">dictionary <dfn id="scrolloptionshorizontal">ScrollOptionsHorizontal</dfn> : <a href="#scrolloptions">ScrollOptions</a> {
  double x;
};
dictionary <dfn id="scrolloptionsvertical">ScrollOptionsVertical</dfn> : <a href="#scrolloptions">ScrollOptions</a>  {
  double y;
};

partial interface <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#element">Element</a> {
  <a href="#clientrectlist">ClientRectList</a> <a href="#dom-element-getclientrects" title="dom-Element-getClientRects">getClientRects</a>();
  <a href="#clientrect">ClientRect</a> <a href="#dom-element-getboundingclientrect" title="dom-Element-getBoundingClientRect">getBoundingClientRect</a>();
  void <a href="#dom-element-scrollintoview" title="dom-Element-scrollIntoView">scrollIntoView</a>(optional boolean top = true, optional <a href="#scrolloptions">ScrollOptions</a> options);
  attribute (double or <a href="#scrolloptionsvertical">ScrollOptionsVertical</a>) <a href="#dom-element-scrolltop" title="dom-Element-scrollTop">scrollTop</a>;
  attribute (double or <a href="#scrolloptionshorizontal">ScrollOptionsHorizontal</a>) <a href="#dom-element-scrollleft" title="dom-Element-scrollLeft">scrollLeft</a>;
  readonly attribute double <a href="#dom-element-scrollwidth" title="dom-Element-scrollWidth">scrollWidth</a>;
  readonly attribute double <a href="#dom-element-scrollheight" title="dom-Element-scrollHeight">scrollHeight</a>;
  readonly attribute double <a href="#dom-element-clienttop" title="dom-Element-clientTop">clientTop</a>;
  readonly attribute double <a href="#dom-element-clientleft" title="dom-Element-clientLeft">clientLeft</a>;
  readonly attribute double <a href="#dom-element-clientwidth" title="dom-Element-clientWidth">clientWidth</a>;
  readonly attribute double <a href="#dom-element-clientheight" title="dom-Element-clientHeight">clientHeight</a>;
};</pre>

<p>The <dfn id="dom-element-getclientrects" title="dom-Element-getClientRects"><code>getClientRects()</code></dfn> method, when invoked, must return the result of the following algorithm:</p>
<ol>
 <li><p>If the element on which it was invoked does not have an associated
 <a href="#layout-box">layout box</a> return an empty <code><a href="#clientrectlist">ClientRectList</a></code> object and stop
 this algorithm.</li>
 <li><p>If the element has an associated <a href="#svg-layout-box">SVG layout box</a> return a
 <code><a href="#clientrectlist">ClientRectList</a></code> object containing a single
 <code><a href="#clientrect">ClientRect</a></code> object that describes the bounding box of the
 element as defined by the SVG specification.
 <a href="#refsSVG">[SVG]</a></li>
 <li>
  <p>Return a <code><a href="#clientrectlist">ClientRectList</a></code> object containing a list of
  <code><a href="#clientrect">ClientRect</a></code> objects in content order describing the border
  boxes (including those with a height or width of zero) with the
  following constraints:</p>
  <ul>
   <li><p>If the element on which the method was invoked has a computed
   value for the 'display' property of 'table' or
   'inline-table' include both the table box and the caption
   box, if any, but not the anonymous container box.</li>
   <li><p>Replace each
   <a href="http://www.w3.org/TR/CSS21/visuren.html#anonymous-block-level">anonymous
   block box</a> with its child box(es) and repeat this until no anonymous
   block boxes are left in the final list.</li>
  </ul>
 </li>
</ol>

<p>The <dfn id="dom-element-getboundingclientrect" title="dom-Element-getBoundingClientRect"><code>getBoundingClientRect()</code></dfn> method, when invoked, must return the result of the following
algorithm:</p>
<ol>
 <li><p>Let <var>list</var> be the result of invoking
 <code title="dom-Element-getClientRects"><a href="#dom-element-getclientrects">getClientRects()</a></code> on the
 same element this method was invoked on.</li>
 <li><p>If the <var>list</var> is empty return a <code><a href="#clientrect">ClientRect</a></code>
 object whose <code title="dom-ClientRect-top"><a href="#dom-clientrect-top">top</a></code>,
 <code title="dom-ClientRect-right"><a href="#dom-clientrect-right">right</a></code>,
 <code title="dom-ClientRect-bottom"><a href="#dom-clientrect-bottom">bottom</a></code> and
 <code title="dom-ClientRect-left"><a href="#dom-clientrect-left">left</a></code> members are zero.</li>
 <li><p>Otherwise, return a <code><a href="#clientrect">ClientRect</a></code> object describing the
 smallest rectangle that includes the first rectangle in <var>list</var>
 and all of the remaining rectangles of which the height or width is not
 zero.</li>
</ol>
<div class="example">
 <p>The following snippet gets the dimensions of the first
 <code title="">div</code> element in a document:</p>
 <pre>var example = document.getElementsByTagName("div")[0].getBoundingClientRect();
var exampleWidth = example.width;
var exampleHeight = example.height;</pre>
</div>

<p>The <dfn id="dom-element-scrollintoview" title="dom-Element-scrollIntoView"><code>scrollIntoView(<var>top</var>, <var>options</var>)</code></dfn> method must run these steps:</p>
<ol>
 <li><p>If the element does not have any associated <a href="#layout-box">layout box</a> terminate these steps.</li>
 <li><p><a href="#scroll-an-element-into-view" title="scroll an element into view">Scroll the element into view</a> with the
 <i>align to top flag</i> set if <var>top</var> is true, and the scroll behavior being the value of the <code title="">behavior</code>
 dictionary member of <var>options</var>.</li>
 <li><p>Optionally perform some other action that brings the element to the user's attention.
</ol>

<p>The <dfn id="dom-element-scrolltop" title="dom-Element-scrollTop"><code>scrollTop</code></dfn> attribute must return the result of running these steps:</p>
<ol>
 <li><p>If the element does not have any associated <a href="#css-layout-box">CSS layout box</a> or the
 element is the root element and the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is in
 <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a> return zero and terminate these steps.</li>
 <li><p>If the element is the root element return the value of
 <code title="dom-Window-scrollY"><a href="#dom-window-scrolly">scrollY</a></code>.</li>
 <li><p>If the element is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a>,
 the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is in <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>, and the element
 does not have any overflow, return the value of
 <code title="dom-Window-scrollY"><a href="#dom-window-scrolly">scrollY</a></code>.</li>
 <li><p>Return the y-coordinate of the <a href="#scrolling-area">scrolling area</a> at the
 alignment point with the top of the <a href="#padding-edge">padding edge</a> of the
 element.</li>
</ol>
<p>When setting the <code title="dom-Element-scrollTop"><a href="#dom-element-scrolltop">scrollTop</a></code> attribute these steps must be run:</p>
<ol>
 <li><p>If the given value is a <code><a href="#scrolloptionsvertical">ScrollOptionsVertical</a></code> object, and the <code title="">y</code> dictionary member is not present, abort these steps.
 <li><p>If the given value is a <code><a href="#scrolloptionsvertical">ScrollOptionsVertical</a></code> object, let <var>y</var> be the value of the <code title="">y</code> dictionary member.
 Otherwise, let <var>y</var> be the given value.</li>
 <li><p>If the element does not have any associated <a href="#css-layout-box">CSS layout box</a>, the
 element is the root element and the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is in
 <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>, or the element has no associated scrolling box, or the element has no overflow,
 terminate these steps.</li>
 <li><p>If the element is the root element invoke
 <code title="dom-Window-scroll"><a href="#dom-window-scroll">scroll()</a></code> with zero as first
 argument and <var>y</var> as second, and, if the given value is a <code><a href="#scrolloptionsvertical">ScrollOptionsVertical</a></code> object, the given value as the third argument.</li>
 <li><p>If the element is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a>,
 the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is in <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>, and the element
 does not have any vertical overflow, invoke
 <code title="dom-Window-scroll"><a href="#dom-window-scroll">scroll()</a></code> with
 <code title="dom-Window-scrollX"><a href="#dom-window-scrollx">scrollX</a></code> as first
 argument and <var>y</var> as second, and, if the given value is a <code><a href="#scrolloptionsvertical">ScrollOptionsVertical</a></code> object, the given value as the third argument.</li>
 <li><p><a href="#scroll-an-element" title="scroll an element">Scroll the element</a> to
 <code title="dom-Element-scrollLeft"><a href="#dom-element-scrollleft">scrollLeft</a></code>,<var>y</var>, with the scroll behavior being the value of the <code title="">behavior</code> dictionary
 member if the given value is a <code><a href="#scrolloptionsvertical">ScrollOptionsVertical</a></code> object, or <code title="">auto</code> otherwise.
</ol>

<p>The <dfn id="dom-element-scrollleft" title="dom-Element-scrollLeft"><code>scrollLeft</code></dfn> attribute must return the result of running these steps:</p>
<ol>
 <li><p>If the element does not have any associated <a href="#css-layout-box">CSS layout box</a> or the
 element is the root element and the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is in
 <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a> return zero and terminate these steps.</li>
 <li><p>If the element is the root element return the value of
 <code title="dom-Window-scrollX"><a href="#dom-window-scrollx">scrollX</a></code>.</li>
 <li><p>If the element is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a>,
 the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is in <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>, and the element
 does not have any overflow, return the value of
 <code title="dom-Window-scrollX"><a href="#dom-window-scrollx">scrollX</a></code>.</li>
 <li><p>Return the x-coordinate of the <a href="#scrolling-area">scrolling area</a> at the
 alignment point with the left of the <a href="#padding-edge">padding edge</a> of the
 element.</li>
</ol>
<p>When setting the <code title="dom-Element-scrollLeft"><a href="#dom-element-scrollleft">scrollLeft</a></code> attribute these steps must be run:</p>
<ol>
 <li><p>If the given value is a <code><a href="#scrolloptionshorizontal">ScrollOptionsHorizontal</a></code> object, and the <code title="">x</code> dictionary member is not present, abort these steps.
 <li><p>If the given value is a <code><a href="#scrolloptionshorizontal">ScrollOptionsHorizontal</a></code> object, let <var>x</var> be the value of the <code title="">x</code> dictionary member.
 Otherwise, let <var>x</var> be the given value.</li>
 <li><p>If the element does not have any associated <a href="#css-layout-box">CSS layout box</a>, the
 element is the root element and the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is in
 <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>, or the element has no associated scrolling box, or the element has no overflow,
 terminate these steps.</li>
 <li><p>If the element is the root element invoke
 <code title="dom-Window-scroll"><a href="#dom-window-scroll">scroll()</a></code> with
 <var>x</var> as first argument and zero as second, and, if the given value is a <code><a href="#scrolloptionshorizontal">ScrollOptionsHorizontal</a></code> object, the given value as the third
 argument.</li>
 <li><p>If the element is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a>,
 the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is in <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>, and the element
 does not have any vertical overflow, invoke
 <code title="dom-Window-scroll"><a href="#dom-window-scroll">scroll()</a></code> with
 <var>x</var> as first argument and
 <code title="dom-Window-scrollY"><a href="#dom-window-scrolly">scrollY</a></code> as second, and, if the given value is a <code><a href="#scrolloptionshorizontal">ScrollOptionsHorizontal</a></code> object, the given value as the third
 argument.</li>
 <li><p><a href="#scroll-an-element" title="Scroll an element">Scroll the element</a> to
 <var>x</var>,<code title="dom-Element-scrollTop"><a href="#dom-element-scrolltop">scrollTop</a></code>, with the scroll behavior being the value of the <code title="">behavior</code> dictionary
 member if the given value is a <code><a href="#scrolloptionshorizontal">ScrollOptionsHorizontal</a></code> object, or <code title="">auto</code> otherwise.
</ol>

<p>The <dfn id="dom-element-scrollwidth" title="dom-Element-scrollWidth"><code>scrollWidth</code></dfn> attribute must return the result of running these steps:</p>
<ol>
 <li><p>If the element does not have any associated <a href="#css-layout-box">CSS layout box</a> return
 zero and terminate these steps.</li>
 <li><p>Let <var>viewport width</var> be the width of the <a href="#viewport">viewport</a> excluding the width of the scroll bar, if any, or zero if there is no
 <a href="#viewport">viewport</a>.
 <li><p>If the element is the root element and the
 <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is not in
 <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>
 return max(<a href="#viewport">viewport</a> <a href="#scrolling-area">scrolling area</a> width, <var>viewport width</var>).</li>
 <li><p>If the element is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a>
 and the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is in
 <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>
 return max(<a href="#viewport">viewport</a> <a href="#scrolling-area">scrolling area</a> width, <var>viewport width</var>).</li>
 <li><p>Return the width of the element's <a href="#scrolling-area">scrolling area</a>.</li>
</ol>

<p>The <dfn id="dom-element-scrollheight" title="dom-Element-scrollHeight"><code>scrollHeight</code></dfn> attribute must return the result of running these steps:</p>
<ol>
 <li><p>If the element does not have any associated <a href="#css-layout-box">CSS layout box</a> return
 zero and terminate these steps.</li>
 <li><p>Let <var>viewport height</var> be the height of the <a href="#viewport">viewport</a> excluding the height of the scroll bar, if any, or zero if there is no
 <a href="#viewport">viewport</a>.
 <li><p>If the element is the root element and the
 <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is not in
 <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>
 return max(<a href="#viewport">viewport</a> <a href="#scrolling-area">scrolling area</a> height, <var>viewport height</var>).</li>
 <li><p>If the element is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a>
 and the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> is in
 <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>
 return max(<a href="#viewport">viewport</a> <a href="#scrolling-area">scrolling area</a> height, <var>viewport height</var>).</li>
 <li><p>Return the height of the element's <a href="#scrolling-area">scrolling area</a>.</li>
</ol>

<p>The <dfn id="dom-element-clienttop" title="dom-Element-clientTop"><code>clientTop</code></dfn> attribute must run these steps:
<ol>
 <li><p>If the element has no associated <a href="#css-layout-box">CSS layout box</a> or if the <a href="#css-layout-box">CSS layout box</a> is inline, return zero.
 <li><p>Return the computed value of the 'border-top-width' property plus the height of any scrollbar rendered between the top <a href="#padding-edge">padding
 edge</a> and the top <a href="#border-edge">border edge</a>.
</ol>
    
<p>The <dfn id="dom-element-clientleft" title="dom-Element-clientLeft"><code>clientLeft</code></dfn> attribute must run these steps:
<ol>
 <li><p>If the element has no associated <a href="#css-layout-box">CSS layout box</a> or if the <a href="#css-layout-box">CSS layout box</a> is inline, return zero.
 <li><p>Return the computed value of the 'border-left-width' property plus the width of any scrollbar rendered between the left <a href="#padding-edge">padding
 edge</a> and the left <a href="#border-edge">border edge</a>.
</ol>

<p>The <dfn id="dom-element-clientwidth" title="dom-Element-clientWidth"><code>clientWidth</code></dfn> attribute must run these steps:
<ol>
 <li><p>If the element has no associated <a href="#css-layout-box">CSS layout box</a> or if the <a href="#css-layout-box">CSS layout box</a> is inline, return zero.
 <li><p>If the element is the root element and the element's document is not in <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>, or
 if the element is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a> and the element's document <em>is</em> in
 <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>, return the <a href="#viewport">viewport</a> width excluding the size of a rendered scroll bar
 (if any).
 <li><p>Return the width of the <a href="#padding-edge">padding edge</a> excluding the width of any rendered scrollbar between the <a href="#padding-edge">padding edge</a> and the
 <a href="#border-edge">border edge</a>.
</ol>

<p>The <dfn id="dom-element-clientheight" title="dom-Element-clientHeight"><code>clientHeight</code></dfn> attribute must run these steps:
<ol>
 <li><p>If the element has no associated <a href="#css-layout-box">CSS layout box</a> or if the <a href="#css-layout-box">CSS layout box</a> is inline, return zero.
 <li><p>If the element is the root element and the element's document is not in <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>, or
 if the element is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a> and the element's document <em>is</em> in
 <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-document-quirks" title="concept-document-quirks">quirks mode</a>, return the <a href="#viewport">viewport</a> height excluding the size of a rendered scroll
 bar (if any).
 <li><p>Return the height of the <a href="#padding-edge">padding edge</a> excluding the height of any rendered scrollbar between the <a href="#padding-edge">padding edge</a> and the
 <a href="#border-edge">border edge</a>.
</ol>

<h3 id="the-getclientrects()-and-getboundingclientrect()-methods"><span class="secno">7.1 </span>The <code title="">getClientRects()</code> and
<code title="">getBoundingClientRect()</code> methods</h3>

<p>The <code title="dom-Element-getClientRects"><a href="#dom-element-getclientrects">getClientRects()</a></code> and <code title="dom-Element-getBoundingClientRect"><a href="#dom-element-getboundingclientrect">getBoundingClientRect()</a></code>
methods provide information about the position of the border box edges of
an element relative to the viewport. The objects these methods return
must be static. That is, changes to the underlying
document are not reflected in the objects.</p>

<h3 id="element-scrolling-members"><span class="secno">7.2 </span><code title="">Element</code> Scrolling Members</h3>

<p>To <dfn id="scroll-an-element-into-view">scroll an element into view</dfn> <var>element</var>, optionally with an <i>align to top flag</i> set, and optionally with a scroll behavior
<var>behavior</var> (which is <code title="">auto</code> if omitted), means to run these steps for each ancestor element or <a href="#viewport">viewport</a> that establishes
a scrolling box <var>scrolling box</var>, in order of innermost to outermost scrolling box:</p>

<ol>
 <li><p>If the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> associated
 with <var>element</var> is not <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/origin-0.html#same-origin">same origin</a> with the
 <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> associated with the element or
 <a href="#viewport">viewport</a> associated with <var>box</var>, terminate these
 steps.</li>
 
 <li><p>Let <var>element bounding border box</var> be the box that the return value of invoking
 <code title="dom-Element-getBoundingClientRect"><a href="#dom-element-getboundingclientrect">getBoundingClientRect()</a></code> on <var>element</var> represents.
 
 <li><p>Let <var>scrolling box edge A</var> be the <a href="#beginning-edges" title="beginning edges">beginning edge</a> in the <a href="#block-flow-direction">block flow direction</a> of
 <var>scrolling box</var>, and let <var>element edge A</var> be <var>element bounding border box</var>'s edge on the same physical side as that of
 <var>scrolling box edge A</var>.
 
 <li><p>Let <var>scrolling box edge B</var> be the <a href="#ending-edges" title="ending edges">ending edge</a> in the <a href="#block-flow-direction">block flow direction</a> of <var>scrolling
 box</var>, and let <var>element edge B</var> be <var>element bounding border box</var>'s edge on the same physical side as that of <var>scrolling box edge
 B</var>.

 <li><p>Let <var>scrolling box edge C</var> be the <a href="#beginning-edges" title="beginning edges">beginning edge</a> in the <a href="#inline-base-direction">inline base direction</a> of
 <var>scrolling box</var>, and let <var>element edge C</var> be <var>element bounding border box</var>'s edge on the same physical side as that of
 <var>scrolling box edge C</var>.

 <li><p>Let <var>scrolling box edge D</var> be the <a href="#ending-edges" title="ending edges">ending edge</a> in the <a href="#inline-base-direction">inline base direction</a> of <var>scrolling
 box</var>, and let <var>element edge D</var> be <var>element bounding border box</var>'s edge on the same physical side as that of <var>box edge D</var>.

 <li><p>Let <var>element width</var> be the distance between <var>element edge C</var> and <var>element edge D</var>.
 
 <li><p>Let <var>scrolling box width</var> be the distance between <var>scrolling box edge C</var> and <var>scrolling box edge D</var>.

 <li><p>Let <var>position</var> be the scroll position <var>scrolling box</var> would have by following these steps:

  <ol>
   <li><p>If the <i>align to top flag</i> is set align <var>element edge A</var> with <var>scrolling box edge A</var>.</li>

   <li><p>Otherwise, the <i>align to top flag</i> is not set; align <var>element edge B</var> with <var>scrolling box edge B</var>.</li>
   
   <li>
    <dl class="switch">
     <dt>If <var>element edge C</var> and <var>element edge D</var> are both outside <var>scrolling box edge C</var> and <var>scrolling box edge D</var>
     <dd><p>Do nothing.
     
     <dt>If <var>element edge C</var> is outside <var>scrolling box edge C</var> and <var>element width</var> is less than <var>scrolling box width</var>
     <dt>If <var>element edge D</var> is outside <var>scrolling box edge D</var> and <var>element width</var> is greater than <var>scrolling box width</var>
     <dd><p>Align <var>element edge C</var> with <var>scrolling box edge C</var>.

     <dt>If <var>element edge C</var> is outside <var>scrolling box edge C</var> and <var>element width</var> is greater than <var>scrolling box width</var>
     <dt>If <var>element edge D</var> is outside <var>scrolling box edge D</var> and <var>element width</var> is less than <var>scrolling box width</var>
     <dd><p>Align <var>element edge D</var> with <var>scrolling box edge D</var>.
    </dl>
  </ol>

 <li><p>If <var>position</var> is the same as <var>scrolling box</var>'s current scroll position, and <var>scrolling box</var> does not have an ongoing
 <a href="#concept-smooth-scroll" title="concept-smooth-scroll">smooth scroll</a>, abort these steps.

 <li>
  <dl class="switch">
   <dt>If <var>scrolling box</var> is associated with an element</dt>
   <dd>
    <p>Let <var>associated element</var> be the element.
    <p>Let <var>task</var> be these steps:
    <ol>
     <li><p><a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-event-fire" title="concept-event-fire">Fire an event</a>
     named <code title="">scroll</code> at <var>associated element</var>.</p>
    </ol>
   </dd>

   <dt>If <var>scrolling box</var> is associated with a <a href="#viewport">viewport</a></dt>
   <dd>
    <p>Let <var>associated element</var> be the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code>'s root element, if there is one, or null otherwise.
    <p>Let <var>task</var> be these steps:
    <ol>
     <li><p><a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-event-fire" title="concept-event-fire">Fire an event</a>
     named <code title="">scroll</code> that bubbles at the
     <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> object associated with the <a href="#viewport">viewport</a>.</p>
    </ol>
   </dd>
  </dl>
 </li>
 <li><p><a href="#perform-a-scroll">Perform a scroll</a> of <var>scrolling box</var> to <var>position</var>, with the set of steps <var>task</var>,
 <var>associated element</var> as the associated element and <var>behavior</var> as the scroll behavior.

</ol>

<p>To <dfn id="scroll-an-element">scroll an element</dfn> <var>element</var> to <var>x</var>,<var>y</var> optionally with a scroll behavior <var>behavior</var> (which is
<code title="">auto</code> if omitted) means to:</p>

<ol>
 <li><p>Let <var>box</var> be <var>element</var>'s associated scrolling box.
 <li>
  <dl class="switch">
   <dt>If <var>box</var> has rightward <a href="#overflow-directions" title="overflow directions">overflow direction</a></dt>

   <dd><p>Let <var>x</var> be max(0, min(<var>x</var>,
   <var>element</var> <a href="#scrolling-area">scrolling area</a> width -
   <var>element</var> <a href="#padding-edge">padding edge</a> width)).</dd>

   <dt>If <var>box</var> has leftward <a href="#overflow-directions" title="overflow directions">overflow direction</a></dt>

   <dd><p>Let <var>x</var> be min(0, max(<var>x</var>,
   <var>element</var> <a href="#padding-edge">padding edge</a> width -
   <var>element</var> <a href="#scrolling-area">scrolling area</a> width)).</dd>
  </dl>

 <li>
  <dl class="switch">
   <dt>If <var>box</var> has downward <a href="#overflow-directions" title="overflow directions">overflow direction</a></dt>

   <dd><p>Let <var>y</var> be max(0, min(<var>y</var>,
   <var>element</var> <a href="#scrolling-area">scrolling area</a> height -
   <var>element</var> <a href="#padding-edge">padding edge</a> height)).</dd>

   <dt>If <var>box</var> has upward <a href="#overflow-directions" title="overflow directions">overflow direction</a></dt>

   <dd><p>Let <var>y</var> be min(0, max(<var>y</var>,
   <var>element</var> <a href="#padding-edge">padding edge</a> height -
   <var>element</var> <a href="#scrolling-area">scrolling area</a> height)).</dd>
  </dl>
  
 <li><p>Let <var>position</var> be the scroll position <var>box</var> would have by aligning <a href="#scrolling-area">scrolling area</a> x-coordinate
 <var>x</var> with the left of <var>box</var> and aligning <a href="#scrolling-area">scrolling area</a> y-coordinate <var>y</var> with
 the top of <var>box</var>.

 <li><p>If <var>position</var> is the same as <var>box</var>'s current scroll position, and <var>box</var> does not have an ongoing
 <a href="#concept-smooth-scroll" title="concept-smooth-scroll">smooth scroll</a>, abort these steps.

 <li><p>Let <var>task</var> be these steps:
  <ol>
   <li><p><a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-event-fire" title="concept-event-fire">Fire an event</a> named
   <code title="">scroll</code> at the element.</li>
  </ol>

 <li><p><a href="#perform-a-scroll">Perform a scroll</a> of <var>box</var> to <var>position</var>, with the set of steps <var>task</var>,
 <var>element</var> as the associated element and <var>behavior</var> as the scroll behavior.

</ol>


<h2 id="extensions-to-the-htmlelement-interface"><span class="secno">8 </span>Extensions to the <code title="">HTMLElement</code> Interface</h2>

<pre class="idl">partial interface <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#htmlelement">HTMLElement</a> {
  readonly attribute <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#element">Element</a>? <a href="#dom-htmlelement-offsetparent" title="dom-HTMLElement-offsetParent">offsetParent</a>;
  readonly attribute double <a href="#dom-htmlelement-offsettop" title="dom-HTMLElement-offsetTop">offsetTop</a>;
  readonly attribute double <a href="#dom-htmlelement-offsetleft" title="dom-HTMLElement-offsetLeft">offsetLeft</a>;
  readonly attribute double <a href="#dom-htmlelement-offsetwidth" title="dom-HTMLElement-offsetWidth">offsetWidth</a>;
  readonly attribute double <a href="#dom-htmlelement-offsetheight" title="dom-HTMLElement-offsetHeight">offsetHeight</a>;
};</pre>

<p>The <dfn id="dom-htmlelement-offsetparent" title="dom-HTMLElement-offsetParent"><code>offsetParent</code></dfn> attribute must return the result of running these steps:</p>
<ol>
 <li>
  <p>If any of the following holds true return null and terminate this
  algorithm:</p>
  <ul>
   <li>The element does not have an associated <a href="#css-layout-box">CSS layout box</a>.</li>
   <li>The element is the root element.</li>
   <li>The element is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a>.</li>
   <li>The element's computed value of the 'position' property is 'fixed'.</li>
  </ul>
 </li>
 <li>
  <p>Return the nearest ancestor element of the element for which at least
  one of the following is true and terminate this algorithm if such an
  ancestor is found:</p>
  <ul>
   <li>The computed value of the 'position' property is not 'static'.</li>
   <li>It is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a>.</li>
   <li>The computed value of the 'position' property of
   the element is 'static' and the ancestor is one of the
   following <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#html-elements" title="HTML elements">HTML elements</a>:
   <code title="">td</code>, <code title="">th</code>, or <code title="">table</code>.</li>
  </ul>
 </li>
 <li><p>Return null.</li>
</ol>

<p>The <dfn id="dom-htmlelement-offsettop" title="dom-HTMLElement-offsetTop"><code>offsetTop</code></dfn> attribute must return the result of running these steps:</p>
<ol>
 <li><p>If the element is <a href="#the-html-body-element">the HTML <code title="">body</code> element</a>
 or does not have any associated <a href="#css-layout-box">CSS layout box</a> return zero and terminate
 this algorithm.</li>
 <li><p>If the <code title="dom-HTMLElement-offsetParent"><a href="#dom-htmlelement-offsetparent">offsetParent</a></code> of the element is null return the
 y-coordinate of the top <a href="#border-edge">border edge</a> of the first
 <a href="#css-layout-box">CSS layout box</a> associated with the element, relative to the
 <a href="#initial-containing-block">initial containing block</a> origin, and terminate this
 algorithm.</li>
 <li>
  <p>Return the result of subtracting the y-coordinate of the top
  <a href="#padding-edge">padding edge</a> of the first <a href="#css-layout-box">CSS layout box</a> associated with
  the <code title="dom-HTMLElement-offsetParent"><a href="#dom-htmlelement-offsetparent">offsetParent</a></code> of the element from the y-coordinate of
  the top <a href="#border-edge">border edge</a> of the first <a href="#css-layout-box">CSS layout box</a> associated
  with the element, relative to the <a href="#initial-containing-block">initial containing block</a>
  origin.</p>
  <p class="note">An inline element that consists of multiple line boxes
  will only have its first <a href="#css-layout-box">CSS layout box</a> considered.</p>
 </li>
</ol>

<p>The <dfn id="dom-htmlelement-offsetleft" title="dom-HTMLElement-offsetLeft"><code>offsetLeft</code></dfn> attribute must return the result of running these steps:</p>
<ol>
 <li><p>If the element is <a href="#the-html-body-element">the HTML <code title="">body</code>
 element</a> or does not have any associated <a href="#css-layout-box">CSS layout box</a> return zero
 and terminate this algorithm.</li>
 <li><p>If the <code title="dom-HTMLElement-offsetParent"><a href="#dom-htmlelement-offsetparent">offsetParent</a></code> of the element is null return the
 x-coordinate of the left <a href="#border-edge">border edge</a> of the first
 <a href="#css-layout-box">CSS layout box</a> associated with the element, relative to the
 <a href="#initial-containing-block">initial containing block</a> origin, and terminate this
 algorithm.</li>
 <li>
  <p>Return the result of subtracting the x-coordinate of the left
  <a href="#padding-edge">padding edge</a> of the first <a href="#css-layout-box">CSS layout box</a> associated with
  the <code title="dom-HTMLElement-offsetParent"><a href="#dom-htmlelement-offsetparent">offsetParent</a></code> of the element from the x-coordinate of
  the left <a href="#border-edge">border edge</a> of the first <a href="#css-layout-box">CSS layout box</a> associated
  with the element, relative to the <a href="#initial-containing-block">initial containing block</a>
  origin.</p>
 </li>
</ol>

<p>The <dfn id="dom-htmlelement-offsetwidth" title="dom-HTMLElement-offsetWidth"><code>offsetWidth</code></dfn> attribute must return the result of running these steps:</p>
<ol>
 <li><p>If the element does not have any associated <a href="#css-layout-box">CSS layout box</a> return zero and terminate this algorithm.</li>
 <li><p>Return the <a href="#border-edge">border edge</a> width of the first <a href="#css-layout-box">CSS layout box</a> associated with the element.</li>
</ol>

<p>The <dfn id="dom-htmlelement-offsetheight" title="dom-HTMLElement-offsetHeight"><code>offsetHeight</code></dfn> attribute must return the result of running these steps:</p>
<ol>
 <li><p>If the element does not have any associated <a href="#css-layout-box">CSS layout box</a> return zero and terminate this algorithm.</li>
 <li><p>Return the <a href="#border-edge">border edge</a> height of the first <a href="#css-layout-box">CSS layout box</a> associated with the element.</li>
</ol>

<h2 id="extensions-to-the-range-interface"><span class="secno">9 </span>Extensions to the <code title="">Range</code> Interface</h2>

<p>The objects the methods described below return must
be static.</p>

<pre class="idl">partial interface <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#range">Range</a> {
  <a href="#clientrectlist">ClientRectList</a> <a href="#dom-range-getclientrects" title="dom-Range-getClientRects">getClientRects</a>();
  <a href="#clientrect">ClientRect</a> <a href="#dom-range-getboundingclientrect" title="dom-Range-getBoundingClientRect">getBoundingClientRect</a>();
};</pre>

<p>The <dfn id="dom-range-getclientrects" title="dom-Range-getClientRects"><code>getClientRects()</code></dfn> method, when invoked, must return an empty
<code><a href="#clientrectlist">ClientRectList</a></code> object if the range is not in the document and
otherwise a <code><a href="#clientrectlist">ClientRectList</a></code> object containing a list of
<code><a href="#clientrect">ClientRect</a></code> objects in content order that matches the
following constraints:</p>
<ul>
 <li>For each element selected by the range, whose parent is not selected
 by the range, include the border boxes returned by invoking
 <code title="dom-Element-getClientRects"><a href="#dom-element-getclientrects">getClientRects()</a></code> on the
 element.</li>
 <li>For each <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#text">Text</a></code> node selected or partially selected by the
 range (including when the boundary-points are identical), include a
 <code><a href="#clientrect">ClientRect</a></code> object (for the part that is selected, not the
 whole line box). The bounds of these <code><a href="#clientrect">ClientRect</a></code> objects are
 computed using font metrics; thus, for horizontal writing, the vertical
 dimension of each box is determined by the font ascent and descent, and
 the horizontal dimension by the text advance width.</li>
</ul>

<p>The <dfn id="dom-range-getboundingclientrect" title="dom-Range-getBoundingClientRect"><code>getBoundingClientRect()</code></dfn> method, when invoked, must return the result of the following
algorithm:</p>
<ol>
 <li><p>Let <var>list</var> be the result of invoking
 <code title="dom-Range-getClientRects"><a href="#dom-range-getclientrects">getClientRects()</a></code> on the
 same range this method was invoked on.</li>
 <li><p>If <var>list</var> is empty return a
 <code><a href="#clientrect">ClientRect</a></code> object whose
 <code title="dom-ClientRect-top"><a href="#dom-clientrect-top">top</a></code>,
 <code title="dom-ClientRect-right"><a href="#dom-clientrect-right">right</a></code>,
 <code title="dom-ClientRect-bottom"><a href="#dom-clientrect-bottom">bottom</a></code> and
 <code title="dom-ClientRect-left"><a href="#dom-clientrect-left">left</a></code> members are zero.</li>
 <li><p>Otherwise, return a <code><a href="#clientrect">ClientRect</a></code> object describing the
 smallest rectangle that includes the first rectangle in <var>list</var>
 and all of the remaining rectangles of which the height or width is not
 zero.</li>
</ol>

<h2 id="extensions-to-the-mouseevent-interface"><span class="secno">10 </span>Extensions to the <code title="">MouseEvent</code> Interface</h2>

<p class="issue">The object IDL fragment redefines some members. Can we
resolve this somehow?</p>

<!-- x/y do not match IE in the position:relative case but do match other
browsers -->

<pre class="idl">partial interface <a href="#mouseevent">MouseEvent</a> {
  readonly attribute double <a href="#dom-mouseevent-screenx" title="dom-MouseEvent-screenX">screenX</a>;
  readonly attribute double <a href="#dom-mouseevent-screeny" title="dom-MouseEvent-screenY">screenY</a>;
  readonly attribute double <a href="#dom-mouseevent-pagex" title="dom-MouseEvent-pageX">pageX</a>;
  readonly attribute double <a href="#dom-mouseevent-pagey" title="dom-MouseEvent-pageY">pageY</a>;
  readonly attribute double <a href="#dom-mouseevent-clientx" title="dom-MouseEvent-clientX">clientX</a>;
  readonly attribute double <a href="#dom-mouseevent-clienty" title="dom-MouseEvent-clientY">clientY</a>;
  readonly attribute double <a href="#dom-mouseevent-x" title="dom-MouseEvent-x">x</a>;
  readonly attribute double <a href="#dom-mouseevent-y" title="dom-MouseEvent-y">y</a>;
  readonly attribute double <a href="#dom-mouseevent-offsetx" title="dom-MouseEvent-offsetX">offsetX</a>;
  readonly attribute double <a href="#dom-mouseevent-offsety" title="dom-MouseEvent-offsetY">offsetY</a>;
};

partial dictionary <a href="#mouseeventinit">MouseEventInit</a> {
  double screenX = 0.0;
  double screenY = 0.0;
  double clientX = 0.0;
  double clientY = 0.0;
};</pre>

<p>The <dfn id="dom-mouseevent-screenx" title="dom-MouseEvent-screenX"><code>screenX</code></dfn> attribute must return the x-coordinate of
the position where the event occurred relative to the origin of the
screen.</p>

<p>The <dfn id="dom-mouseevent-screeny" title="dom-MouseEvent-screenY"><code>screenY</code></dfn> attribute must return the y-coordinate of
the position where the event occurred relative to the origin of the
screen.</p>

<p>The <dfn id="dom-mouseevent-pagex" title="dom-MouseEvent-pageX"><code>pageX</code></dfn> attribute must follow these steps:

<ol>
 <li><p>If the event's <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#dispatch-flag">dispatch flag</a> is set, return the horizontal coordinate of the position where the event occurred
 relative to the origin of the <a href="#initial-containing-block">initial containing block</a> and terminate these steps.
 <li><p>Let <var>offset</var> be the value of the <code title="dom-Window-scrollX"><a href="#dom-window-scrollx">scrollX</a></code> attribute of the event's associated
 <code class="external" data-anolis-spec="html"><a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#window">Window</a></code> object, if there is one, or zero otherwise.
 <li><p>Return the sum of <var>offset</var> and the value of the event's <code title="dom-MouseEvent-clientX"><a href="#dom-mouseevent-clientx">clientX</a></code> attribute.
</ol>

<p>The <dfn id="dom-mouseevent-pagey" title="dom-MouseEvent-pageY"><code>pageY</code></dfn> attribute must follow these steps:

<ol>
 <li><p>If the event's <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#dispatch-flag">dispatch flag</a> is set, return the vertical coordinate of the position where the event occurred
 relative to the origin of the <a href="#initial-containing-block">initial containing block</a> and terminate these steps.
 <li><p>Let <var>offset</var> be the value of the <code title="dom-Window-scrollX"><a href="#dom-window-scrollx">scrollX</a></code> attribute of the event's associated
 <code class="external" data-anolis-spec="html"><a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#window">Window</a></code> object, if there is one, or zero otherwise.
 <li><p>Return the sum of <var>offset</var> and the value of the event's <code title="dom-MouseEvent-clientY"><a href="#dom-mouseevent-clienty">clientY</a></code> attribute.
</ol>

<p>The <dfn id="dom-mouseevent-clientx" title="dom-MouseEvent-clientX"><code>clientX</code></dfn> attribute must return the x-coordinate of
the position where the event occurred relative to the origin of the
<a href="#viewport">viewport</a>.</p>

<p>The <dfn id="dom-mouseevent-clienty" title="dom-MouseEvent-clientY"><code>clientY</code></dfn> attribute must return the y-coordinate of
the position where the event occurred relative to the origin of the
<a href="#viewport">viewport</a>.</p>

<p>The <dfn id="dom-mouseevent-x" title="dom-MouseEvent-x"><code>x</code></dfn> attribute must return the value of <code title="dom-MouseEvent-clientX"><a href="#dom-mouseevent-clientx">clientX</a></code>.</p>

<p>The <dfn id="dom-mouseevent-y" title="dom-MouseEvent-y"><code>y</code></dfn> attribute must return the value of <code title="dom-MouseEvent-clientY"><a href="#dom-mouseevent-clienty">clientY</a></code>.</p>

<p>The <dfn id="dom-mouseevent-offsetx" title="dom-MouseEvent-offsetX"><code>offsetX</code></dfn> attribute must follow these steps:

<ol>
 <li><p>If the event's <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#dispatch-flag">dispatch flag</a> is set, return the x-coordinate of the position where the event occurred relative to the
 origin of the <a href="#padding-edge">padding edge</a> of the target node and terminate these steps.
 <li><p>Return the value of the event's <code title="dom-MouseEvent-pageX"><a href="#dom-mouseevent-pagex">pageX</a></code> attribute.
</ol>

<p>The <dfn id="dom-mouseevent-offsety" title="dom-MouseEvent-offsetY"><code>offsetY</code></dfn> attribute must follow these steps:

<ol>
 <li><p>If the event's <a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#dispatch-flag">dispatch flag</a> is set, return the y-coordinate of the position where the event occurred relative to the
 origin of the <a href="#padding-edge">padding edge</a> of the target node and terminate these steps.
 <li><p>Return the value of the event's <code title="dom-MouseEvent-pageY"><a href="#dom-mouseevent-pagey">pageY</a></code> attribute.
</ol>


<h2 id="rectangles"><span class="secno">11 </span>Rectangles</h2>


<h3 id="the-clientrectlist-interface"><span class="secno">11.1 </span>The <code title="">ClientRectList</code> Interface</h3>

<p>The <code><a href="#clientrectlist">ClientRectList</a></code> interface consists of an ordered list of <code><a href="#clientrect">ClientRect</a></code> objects.</p>

<pre class="idl">interface <dfn id="clientrectlist">ClientRectList</dfn> {
  readonly attribute unsigned long <a href="#dom-clientrectlist-length" title="dom-ClientRectList-length">length</a>;
  getter <a href="#clientrect">ClientRect</a> <a href="#dom-clientrectlist-item" title="dom-ClientRectList-item">item</a>(unsigned long index);
};</pre>

<p>The <dfn id="dom-clientrectlist-length" title="dom-ClientRectList-length"><code>length</code></dfn> attribute must return the total number of <code><a href="#clientrect">ClientRect</a></code> objects associated with
the object.</p>

<p>The <dfn id="dom-clientrectlist-item" title="dom-ClientRectList-item"><code>item(<var>index</var>)</code></dfn> method, when invoked, must throw an
<code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#indexsizeerror">IndexSizeError</a></code> exception when <var>index</var> is
greater than the number of <code><a href="#clientrect">ClientRect</a></code> objects associated with the object. Otherwise, the <code><a href="#clientrect">ClientRect</a></code> object at
<var>index</var> must be returned.</p>

<h3 id="the-clientrect-interface"><span class="secno">11.2 </span>The <code title="">ClientRect</code> Interface</h3>

<p>Objects implementing the <code><a href="#clientrect">ClientRect</a></code> interface represent a rectangular box. The type of box is specified by the method that returns a
<code><a href="#clientrect">ClientRect</a></code> object.</p>

<pre class="idl">interface <dfn id="clientrect">ClientRect</dfn> {
  readonly attribute double <a href="#dom-clientrect-top" title="dom-ClientRect-top">top</a>;
  readonly attribute double <a href="#dom-clientrect-top" title="dom-ClientRect-top">right</a>;
  readonly attribute double <a href="#dom-clientrect-top" title="dom-ClientRect-top">bottom</a>;
  readonly attribute double <a href="#dom-clientrect-top" title="dom-ClientRect-top">left</a>;
  readonly attribute double <a href="#dom-clientrect-top" title="dom-ClientRect-top">width</a>;
  readonly attribute double <a href="#dom-clientrect-top" title="dom-ClientRect-top">height</a>;
};</pre>

<p>The <dfn id="dom-clientrect-top" title="dom-ClientRect-top"><code>top</code></dfn> attribute must return the y-coordinate, relative to the <a href="#viewport">viewport</a> origin, of the top of
the rectangle box.</p>

<p>The <dfn id="dom-clientrect-right" title="dom-ClientRect-right"><code>right</code></dfn> attribute must return the x-coordinate, relative to the <a href="#viewport">viewport</a> origin, of the
right of the rectangle box.</p>

<p>The <dfn id="dom-clientrect-bottom" title="dom-ClientRect-bottom"><code>bottom</code></dfn> attribute must return the y-coordinate, relative to the <a href="#viewport">viewport</a> origin, of the
bottom of the rectangle box.</p>

<p>The <dfn id="dom-clientrect-left" title="dom-ClientRect-left"><code>left</code></dfn> attribute must return the x-coordinate, relative to the <a href="#viewport">viewport</a> origin, of the left
of the rectangle box.</p>

<p>The <dfn id="dom-clientrect-width" title="dom-ClientRect-width"><code>width</code></dfn> attribute must return the width of the rectangle box.</p>
<p class="note">This is identical to <code title="dom-ClientRect-right"><a href="#dom-clientrect-right">right</a></code> minus <code title="dom-ClientRect-left"><a href="#dom-clientrect-left">left</a></code>.</p>

<p>The <dfn id="dom-clientrect-height" title="dom-ClientRect-height"><code>height</code></dfn> attribute must return the height of the rectangle box.</p>
<p class="note">This is identical to <code title="dom-ClientRect-bottom"><a href="#dom-clientrect-bottom">bottom</a></code> minus <code title="dom-ClientRect-top"><a href="#dom-clientrect-top">top</a></code>.</p>

  
<h2 id="events"><span class="secno">12 </span>Events</h2>

<h3 id="resizing-viewports"><span class="secno">12.1 </span>Resizing viewports</h3>

<p>Whenever a <a href="#viewport">viewport</a> has its width or height changed (e.g. as a result of the user resizing the browser window, or zooming in, or an
<code title="">iframe</code> element's dimensions are changed), the user agent must <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task">queue a task</a> to
<a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-event-fire" title="concept-event-fire">fire an event</a> event named
<code title="">resize</code> at the <code class="external" data-anolis-spec="html"><a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#window">Window</a></code> object associated with that
<a href="#viewport">viewport</a>. If such a resize is ongoing over a period of time, the user agent must <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task" title="queue a task">queue</a> that
task at a user-agent-defined interval while the resize is ongoing. <!--fingerprint--> <!-- e.g. if you change the width of an iframe with a transition -->

<h3 id="scrolling-0"><span class="secno">12.2 </span>Scrolling</h3>

<p>Whenever a <a href="#viewport">viewport</a> gets scrolled in response to user interaction, the user agent must <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task">queue a task</a> to
<a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#concept-event-fire" title="concept-event-fire">fire an event</a> named
<code title="">scroll</code> that bubbles at the <code class="external" data-anolis-spec="dom"><a href="http://dom.spec.whatwg.org/#document">Document</a></code> object associated with that <a href="#viewport">viewport</a>. If such a scroll is
ongoing over a period of time, the user agent must <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task" title="queue a task">queue</a> that task at a user-agent-defined interval
while the scroll is ongoing. <!--fingerprint-->

<p>Whenever an element gets scrolled in response to user interaction, the user agent must <a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task">queue a task</a> to
<a class="external" data-anolis-spec="dom" href="http://dom.spec.whatwg.org/#concept-event-fire" title="concept-event-fire">fire an event</a> named
<code title="">scroll</code> at the element. If such a scroll is ongoing over a period of time, the user agent must
<a class="external" data-anolis-spec="html" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#queue-a-task" title="queue a task">queue</a> that task at a user-agent-defined interval while the scroll is ongoing. <!--fingerprint-->


<h2 id="css-properties"><span class="secno">13 </span>CSS properties</h2>

<p class="issue">The features in this section should be moved to some other specification.

<h3 id="smooth-scrolling:-the-'scroll-behavior'-property"><span class="secno">13.1 </span>Smooth Scrolling: The 'scroll-behavior' Property</h3>

<pre class="propdef">Name: <dfn id="scroll-behavior">scroll-behavior</dfn>
Value: instant | smooth
Initial: instant
Applies to: scrolling boxes
Inherited: no
Computed value:	specified value 
Media: visual
Animatable: no
Canonical Order: per grammar
</pre>

<p>The '<a href="#scroll-behavior">scroll-behavior</a>' property specifies the scrolling behavior for a scrolling box, when scrolling happens due to navigation or CSSOM scrolling
APIs. Scrolls that are performed by the user are not affected by this property. When this property is specified on the root element, it applies to the
<a href="#viewport">viewport</a> instead.

<p class="note">The '<a href="#scroll-behavior">scroll-behavior</a>' property of the HTML <code title="">body</code> element is <em>not</em> propagated to the viewport.

<dl>
 <dt>'<dfn id="scroll-behavior-instant" title="scroll-behavior-instant">instant</dfn>'
 <dd><p>The scrolling box is scrolled in an instant fashion.

 <dt>'<dfn id="scroll-behavior-smooth" title="scroll-behavior-smooth">smooth</dfn>'
 <dd><p>The scrolling box is scrolled in a smooth fashion using a user-agent-defined timing function over a user-agent-defined period of time. User agents
 should follow platform convensions, if any. <!--fingerprint-->
</dl>

<p>User agents may ignore this property. <!--fingerprint-->

<h2 class="no-num" id="references">References</h2>
<div id="anolis-references"><dl><dt id="refsCSSOM">[CSSOM]
<dd><cite><a href="http://dev.w3.org/csswg/cssom/">CSS Object Model (CSSOM)</a></cite>, Simon Pieters and Glenn Adams. W3C.

<dt id="refsCSSWRITINGMODES">[CSSWRITINGMODES]
<dd><cite><a href="http://dev.w3.org/csswg/css-writing-modes/">CSS Writing Modes Module</a></cite>, Elika J. Etemad and Koji Ishii. W3C.

<dt id="refsDOM">[DOM]
<dd><cite><a href="http://dom.spec.whatwg.org/">DOM</a></cite>, Anne van Kesteren, Aryeh Gregor and Ms2ger. WHATWG.

<dt id="refsHTML">[HTML]
<dd><cite><a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/">HTML</a></cite>, Ian Hickson. WHATWG.

<dt id="refsRFC2119">[RFC2119]
<dd><cite><a href="http://tools.ietf.org/html/rfc2119">Key words for use in RFCs to Indicate Requirement Levels</a></cite>, Scott Bradner. IETF.

<dt id="refsSVG">[SVG]
<dd><cite><a href="http://www.w3.org/TR/SVG/">Scalable Vector Graphics (SVG)</a></cite>, O. Andersson, R. Berjon, E. Dahlström et al.. W3C.

<dt id="refsWEBIDL">[WEBIDL]
<dd><cite><a href="http://dev.w3.org/2006/webapi/WebIDL/">Web IDL</a></cite>, Cameron McCormack. W3C.

</dl></div>

<h2 class="no-num" id="acknowledgments">Acknowledgments</h2>

<p>The editors would like to thank

Alan Stearns,
Alexey Feldgendler,
Björn Höhrmann,
Dan Bates,
David Vest,
Elliott Sprehn,
Garrett Smith,
Hallvord R. M. Steen,
Kang-Hao Lu,
Leif Arne Storset,
Luiz Agostini,
Maciej Stachowiak,
Michael Dyck,
Mike Wilson,
Morten Stenshorne,
Olli Pettay,
Pavel Curtis,
Peter-Paul Koch,
Rachel Kmetz,
Robert O'Callahan,
Sam Weinig,
Scott Johnson,
Sebastian Zartner,
Sylvain Galineau,
Tab Atkins,
Tarquin Wilton-Jones,
Thomas Moore, and
Xiaomei Ji<!-- should actually use real name here -->

for their contributions to this document.</p>

<p>Special thanks to the Microsoft employees who first implemented many of
the features specified in this draft, which were first widely deployed by
the Windows Internet Explorer browser.</p>
 

