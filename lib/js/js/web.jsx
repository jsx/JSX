// THIS FILE IS AUTOMATICALLY GENERATED.
/**

Web Browser Interface

*/
import "js.jsx";

/**

Document Object Model in Web Browsers

*/
final class dom {
	static const window = js.global["window"] as __noconvert__ Window;


	/** alias to <code>dom.window.document.getElementById(id) as HTMLElement</code> */
	static function id(id : string) : HTMLElement {
		return dom.window.document.getElementById(id) as HTMLElement;
	}
	/** alias to <code>dom.window.document.getElementById(id) as HTMLElement</code> */
	static function getElementById(id : string) : HTMLElement {
		return dom.window.document.getElementById(id) as HTMLElement;
	}


	/** alias to <code>dom.window.document.createElement(id) as HTMLElement</code> */
	static function createElement(tag : string) : HTMLElement {
		return dom.window.document.createElement(tag) as __noconvert__ HTMLElement;
	}

}

/*
automatically generated from:
	http://www.w3.org/TR/dom/
	http://www.w3.org/TR/DOM-Level-2-Views/idl/views.idl
	http://www.w3.org/TR/DOM-Level-3-Events/
	idl2jsx/extra/events.idl
	http://www.w3.org/TR/XMLHttpRequest/
	http://dev.w3.org/csswg/cssom/
	http://dev.w3.org/csswg/cssom-view/
	idl2jsx/extra/chrome.idl
	idl2jsx/extra/firefox.idl
	http://www.w3.org/TR/html5/single-page.html
	http://www.w3.org/TR/FileAPI/
	idl2jsx/extra/file.idl
	http://www.w3.org/TR/touch-events/
	http://www.w3.org/TR/websockets/
	http://dev.w3.org/geo/api/spec-source.html
	http://dev.w3.org/html5/webstorage/
	http://www.w3.org/TR/selectors-api/
	http://www.w3.org/TR/webmessaging/
	http://www.w3.org/TR/workers/
	http://www.w3.org/TR/eventsource/
	http://html5.org/specs/dom-parsing.html
	https://www.khronos.org/registry/typedarray/specs/latest/typedarray.idl
	http://dev.w3.org/html5/2dcontext/
	https://www.khronos.org/registry/webgl/specs/latest/webgl.idl
	idl2jsx/extra/timers.idl
	idl2jsx/extra/animation-timing.idl
	idl2jsx/extra/legacy.idl
*/
// alias MutationCallback = function(mutations:MutationRecord[],observer:MutationObserver):void

native final class DOMException {

	static __readonly__ var INDEX_SIZE_ERR : int/*unsigned short*/;
	       __readonly__ var INDEX_SIZE_ERR : int/*unsigned short*/;
	static __readonly__ var DOMSTRING_SIZE_ERR : int/*unsigned short*/;
	       __readonly__ var DOMSTRING_SIZE_ERR : int/*unsigned short*/;
	// historical
	static __readonly__ var HIERARCHY_REQUEST_ERR : int/*unsigned short*/;
	       __readonly__ var HIERARCHY_REQUEST_ERR : int/*unsigned short*/;
	static __readonly__ var WRONG_DOCUMENT_ERR : int/*unsigned short*/;
	       __readonly__ var WRONG_DOCUMENT_ERR : int/*unsigned short*/;
	static __readonly__ var INVALID_CHARACTER_ERR : int/*unsigned short*/;
	       __readonly__ var INVALID_CHARACTER_ERR : int/*unsigned short*/;
	static __readonly__ var NO_DATA_ALLOWED_ERR : int/*unsigned short*/;
	       __readonly__ var NO_DATA_ALLOWED_ERR : int/*unsigned short*/;
	// historical
	static __readonly__ var NO_MODIFICATION_ALLOWED_ERR : int/*unsigned short*/;
	       __readonly__ var NO_MODIFICATION_ALLOWED_ERR : int/*unsigned short*/;
	static __readonly__ var NOT_FOUND_ERR : int/*unsigned short*/;
	       __readonly__ var NOT_FOUND_ERR : int/*unsigned short*/;
	static __readonly__ var NOT_SUPPORTED_ERR : int/*unsigned short*/;
	       __readonly__ var NOT_SUPPORTED_ERR : int/*unsigned short*/;
	static __readonly__ var INUSE_ATTRIBUTE_ERR : int/*unsigned short*/;
	       __readonly__ var INUSE_ATTRIBUTE_ERR : int/*unsigned short*/;
	// historical
	static __readonly__ var INVALID_STATE_ERR : int/*unsigned short*/;
	       __readonly__ var INVALID_STATE_ERR : int/*unsigned short*/;
	static __readonly__ var SYNTAX_ERR : int/*unsigned short*/;
	       __readonly__ var SYNTAX_ERR : int/*unsigned short*/;
	static __readonly__ var INVALID_MODIFICATION_ERR : int/*unsigned short*/;
	       __readonly__ var INVALID_MODIFICATION_ERR : int/*unsigned short*/;
	static __readonly__ var NAMESPACE_ERR : int/*unsigned short*/;
	       __readonly__ var NAMESPACE_ERR : int/*unsigned short*/;
	static __readonly__ var INVALID_ACCESS_ERR : int/*unsigned short*/;
	       __readonly__ var INVALID_ACCESS_ERR : int/*unsigned short*/;
	static __readonly__ var VALIDATION_ERR : int/*unsigned short*/;
	       __readonly__ var VALIDATION_ERR : int/*unsigned short*/;
	// historical
	static __readonly__ var TYPE_MISMATCH_ERR : int/*unsigned short*/;
	       __readonly__ var TYPE_MISMATCH_ERR : int/*unsigned short*/;
	static __readonly__ var SECURITY_ERR : int/*unsigned short*/;
	       __readonly__ var SECURITY_ERR : int/*unsigned short*/;
	static __readonly__ var NETWORK_ERR : int/*unsigned short*/;
	       __readonly__ var NETWORK_ERR : int/*unsigned short*/;
	static __readonly__ var ABORT_ERR : int/*unsigned short*/;
	       __readonly__ var ABORT_ERR : int/*unsigned short*/;
	static __readonly__ var URL_MISMATCH_ERR : int/*unsigned short*/;
	       __readonly__ var URL_MISMATCH_ERR : int/*unsigned short*/;
	static __readonly__ var QUOTA_EXCEEDED_ERR : int/*unsigned short*/;
	       __readonly__ var QUOTA_EXCEEDED_ERR : int/*unsigned short*/;
	static __readonly__ var TIMEOUT_ERR : int/*unsigned short*/;
	       __readonly__ var TIMEOUT_ERR : int/*unsigned short*/;
	static __readonly__ var INVALID_NODE_TYPE_ERR : int/*unsigned short*/;
	       __readonly__ var INVALID_NODE_TYPE_ERR : int/*unsigned short*/;
	static __readonly__ var DATA_CLONE_ERR : int/*unsigned short*/;
	       __readonly__ var DATA_CLONE_ERR : int/*unsigned short*/;
	var code : int/*unsigned short*/;

} // end of DOMException

native final class DOMError {

	__readonly__ var name : string/*DOMString*/;

} // end of DOMError

native class Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : EventInit
	);

	__readonly__ var type : string/*DOMString*/;
	__readonly__ var target : EventTarget;
	__readonly__ var currentTarget : EventTarget;
	static __readonly__ var CAPTURING_PHASE : int/*unsigned short*/;
	       __readonly__ var CAPTURING_PHASE : int/*unsigned short*/;
	static __readonly__ var AT_TARGET : int/*unsigned short*/;
	       __readonly__ var AT_TARGET : int/*unsigned short*/;
	static __readonly__ var BUBBLING_PHASE : int/*unsigned short*/;
	       __readonly__ var BUBBLING_PHASE : int/*unsigned short*/;
	__readonly__ var eventPhase : int/*unsigned short*/;
	function stopPropagation() : void;
	function stopImmediatePropagation() : void;
	__readonly__ var bubbles : boolean;
	__readonly__ var cancelable : boolean;
	function preventDefault() : void;
	__readonly__ var defaultPrevented : boolean;
	__readonly__ var isTrusted : boolean;
	__readonly__ var timeStamp : number/*DOMTimeStamp*/;
	function initEvent(
		type : string/*DOMString*/,
		bubbles : boolean,
		cancelable : boolean
	) : void;

	// PhaseType
	static __readonly__ var NONE : int/*unsigned short*/;
	       __readonly__ var NONE : int/*unsigned short*/;
	// Introduced in DOM Level 3:

} // end of Event

native class EventInit {

	var bubbles : boolean;
	var cancelable : boolean;


} // end of EventInit

native final class CustomEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : CustomEventInit
	);

	__readonly__ var detail : variant/*any*/;


	// Originally introduced (and deprecated) in DOM Level 3:
	function initCustomEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		detailArg : variant/*any*/
	) : void;

} // end of CustomEvent

native final class CustomEventInit extends EventInit {

	var detail : variant/*any*/;

	// Attributes from Event:
	// inherits var bubbles : boolean;
	// inherits var cancelable : boolean;
	// Attributes for CustomEvent:

} // end of CustomEventInit

native __fake__ class EventTarget {

	function addEventListener(
		type : string/*DOMString*/,
		callback : function(:Event):void/*EventListener?*/
	) : void;
	function addEventListener(
		type : string/*DOMString*/,
		callback : function(:Event):void/*EventListener?*/,
		capture : boolean
	) : void;
	function removeEventListener(
		type : string/*DOMString*/,
		callback : function(:Event):void/*EventListener?*/
	) : void;
	function removeEventListener(
		type : string/*DOMString*/,
		callback : function(:Event):void/*EventListener?*/,
		capture : boolean
	) : void;
	function dispatchEvent(event : Event) : boolean;

	// Modified in DOM Level 3:

} // end of EventTarget

native final class MutationObserver {

	function constructor(
		callback : function(mutations:MutationRecord[],
		observer:MutationObserver):void/*MutationCallback*/
	);

	function observe(
		target : Node,
		options : MutationObserverInit
	) : void;
	function disconnect() : void;

} // end of MutationObserver

native final class MutationObserverInit {

	var childList : boolean;
	var attributes : boolean;
	var characterData : boolean;
	var subtree : boolean;
	var attributeOldValue : boolean;
	var characterDataOldValue : boolean;
	var attributeFilter : string[]/*DOMString[]*/;

} // end of MutationObserverInit

native final class MutationRecord {

	__readonly__ var type : string/*DOMString*/;
	__readonly__ var target : Node;
	__readonly__ var addedNodes : NodeList;
	__readonly__ var removedNodes : NodeList;
	__readonly__ var previousSibling : Node;
	__readonly__ var nextSibling : Node;
	__readonly__ var attributeName : Nullable.<string>/*DOMString?*/;
	__readonly__ var attributeNamespace : Nullable.<string>/*DOMString?*/;
	__readonly__ var oldValue : Nullable.<string>/*DOMString?*/;

} // end of MutationRecord

native class Node extends EventTarget {

	static __readonly__ var ELEMENT_NODE : int/*unsigned short*/;
	       __readonly__ var ELEMENT_NODE : int/*unsigned short*/;
	static __readonly__ var ATTRIBUTE_NODE : int/*unsigned short*/;
	       __readonly__ var ATTRIBUTE_NODE : int/*unsigned short*/;
	// historical
	static __readonly__ var TEXT_NODE : int/*unsigned short*/;
	       __readonly__ var TEXT_NODE : int/*unsigned short*/;
	static __readonly__ var CDATA_SECTION_NODE : int/*unsigned short*/;
	       __readonly__ var CDATA_SECTION_NODE : int/*unsigned short*/;
	// historical
	static __readonly__ var ENTITY_REFERENCE_NODE : int/*unsigned short*/;
	       __readonly__ var ENTITY_REFERENCE_NODE : int/*unsigned short*/;
	// historical
	static __readonly__ var ENTITY_NODE : int/*unsigned short*/;
	       __readonly__ var ENTITY_NODE : int/*unsigned short*/;
	// historical
	static __readonly__ var PROCESSING_INSTRUCTION_NODE : int/*unsigned short*/;
	       __readonly__ var PROCESSING_INSTRUCTION_NODE : int/*unsigned short*/;
	static __readonly__ var COMMENT_NODE : int/*unsigned short*/;
	       __readonly__ var COMMENT_NODE : int/*unsigned short*/;
	static __readonly__ var DOCUMENT_NODE : int/*unsigned short*/;
	       __readonly__ var DOCUMENT_NODE : int/*unsigned short*/;
	static __readonly__ var DOCUMENT_TYPE_NODE : int/*unsigned short*/;
	       __readonly__ var DOCUMENT_TYPE_NODE : int/*unsigned short*/;
	static __readonly__ var DOCUMENT_FRAGMENT_NODE : int/*unsigned short*/;
	       __readonly__ var DOCUMENT_FRAGMENT_NODE : int/*unsigned short*/;
	static __readonly__ var NOTATION_NODE : int/*unsigned short*/;
	       __readonly__ var NOTATION_NODE : int/*unsigned short*/;
	// historical
	__readonly__ var nodeType : int/*unsigned short*/;
	__readonly__ var nodeName : string/*DOMString*/;
	__readonly__ var baseURI : Nullable.<string>/*DOMString?*/;
	__readonly__ var ownerDocument : Document;
	__readonly__ var parentNode : Node;
	__readonly__ var parentElement : Element;
	function hasChildNodes() : boolean;
	__readonly__ var childNodes : NodeList;
	__readonly__ var firstChild : Node;
	__readonly__ var lastChild : Node;
	__readonly__ var previousSibling : Node;
	__readonly__ var nextSibling : Node;
	static __readonly__ var DOCUMENT_POSITION_DISCONNECTED : int/*unsigned short*/;
	       __readonly__ var DOCUMENT_POSITION_DISCONNECTED : int/*unsigned short*/;
	static __readonly__ var DOCUMENT_POSITION_PRECEDING : int/*unsigned short*/;
	       __readonly__ var DOCUMENT_POSITION_PRECEDING : int/*unsigned short*/;
	static __readonly__ var DOCUMENT_POSITION_FOLLOWING : int/*unsigned short*/;
	       __readonly__ var DOCUMENT_POSITION_FOLLOWING : int/*unsigned short*/;
	static __readonly__ var DOCUMENT_POSITION_CONTAINS : int/*unsigned short*/;
	       __readonly__ var DOCUMENT_POSITION_CONTAINS : int/*unsigned short*/;
	static __readonly__ var DOCUMENT_POSITION_CONTAINED_BY : int/*unsigned short*/;
	       __readonly__ var DOCUMENT_POSITION_CONTAINED_BY : int/*unsigned short*/;
	static __readonly__ var DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC : int/*unsigned short*/;
	       __readonly__ var DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC : int/*unsigned short*/;
	// historical
	function compareDocumentPosition(
		other : Node
	) : int/*unsigned short*/;
	function contains(other : Node) : boolean;
	var nodeValue : Nullable.<string>/*DOMString?*/;
	var textContent : Nullable.<string>/*DOMString?*/;
	function insertBefore(node : Node, child : Node) : Node;
	function appendChild(node : Node) : Node;
	function replaceChild(node : Node, child : Node) : Node;
	function removeChild(child : Node) : Node;
	function normalize() : void;
	function cloneNode() : Node;
	function cloneNode(deep : boolean) : Node;
	function isEqualNode(node : Node) : boolean;
	function lookupPrefix(
		namespace : Nullable.<string>/*DOMString?*/
	) : string/*DOMString*/;
	function lookupNamespaceURI(
		prefix : Nullable.<string>/*DOMString?*/
	) : string/*DOMString*/;
	function isDefaultNamespace(
		namespace : Nullable.<string>/*DOMString?*/
	) : boolean;

} // end of Node

native class Document extends Node {

	__readonly__ var implementation : DOMImplementation;
	__readonly__ var URL : string/*DOMString*/;
	__readonly__ var documentURI : string/*DOMString*/;
	__readonly__ var compatMode : string/*DOMString*/;
	__readonly__ var characterSet : string/*DOMString*/;
	__readonly__ var contentType : string/*DOMString*/;
	__readonly__ var doctype : DocumentType;
	__readonly__ var documentElement : Element;
	function getElementsByTagName(
		localName : string/*DOMString*/
	) : HTMLCollection;
	function getElementsByTagNameNS(
		namespace : Nullable.<string>/*DOMString?*/,
		localName : string/*DOMString*/
	) : HTMLCollection;
	function getElementsByClassName(
		classNames : string/*DOMString*/
	) : HTMLCollection;
	function getElementById(elementId : string/*DOMString*/) : Element;
	function createElement(localName : string/*DOMString*/) : Element;
	function createElementNS(
		namespace : Nullable.<string>/*DOMString?*/,
		qualifiedName : string/*DOMString*/
	) : Element;
	function createDocumentFragment() : DocumentFragment;
	function createTextNode(data : string/*DOMString*/) : Text;
	function createComment(data : string/*DOMString*/) : Comment;
	function createProcessingInstruction(
		target : string/*DOMString*/,
		data : string/*DOMString*/
	) : ProcessingInstruction;
	function importNode(node : Node) : Node;
	function importNode(node : Node, deep : boolean) : Node;
	function adoptNode(node : Node) : Node;
	function createEvent(
		eventInterfaceName : string/*DOMString*/
	) : Event;
	function createRange() : Range;
	function createNodeIterator(root : Node) : NodeIterator;
	function createNodeIterator(
		root : Node,
		whatToShow : int/*unsigned long*/
	) : NodeIterator;
	function createNodeIterator(
		root : Node,
		whatToShow : int/*unsigned long*/,
		filter : NodeFilter
	) : NodeIterator;
	function createTreeWalker(root : Node) : TreeWalker;
	function createTreeWalker(
		root : Node,
		whatToShow : int/*unsigned long*/
	) : TreeWalker;
	function createTreeWalker(
		root : Node,
		whatToShow : int/*unsigned long*/,
		filter : NodeFilter
	) : TreeWalker;
	// NEW
	function prepend(...nodes : Node) : void;
	function prepend(...nodes : string/*DOMString*/) : void;
	function append(...nodes : Node) : void;
	function append(...nodes : string/*DOMString*/) : void;

	// implements DocumentEvent

	// Modified in DOM Level 3:

	__readonly__ var styleSheets : StyleSheet[]/*StyleSheetList*/;
	var selectedStyleSheetSet : Nullable.<string>/*DOMString?*/;
	__readonly__ var lastStyleSheetSet : Nullable.<string>/*DOMString?*/;
	__readonly__ var preferredStyleSheetSet : Nullable.<string>/*DOMString?*/;
	__readonly__ var styleSheetSets : DOMStringList;
	function enableStyleSheetsForSet(
		name : Nullable.<string>/*DOMString?*/
	) : void;

	function elementFromPoint(
		x : number/*float*/,
		y : number/*float*/
	) : Element;
	function caretPositionFromPoint(
		x : number/*float*/,
		y : number/*float*/
	) : CaretPosition;

	function createTouch(
		view : AbstractView,
		target : EventTarget,
		identifier : int/*long*/,
		pageX : int/*long*/,
		pageY : int/*long*/,
		screenX : int/*long*/,
		screenY : int/*long*/
	) : Touch;
	function createTouchList(touches : Touch[]) : TouchList;
	function createTouchList(touch : Touch) : TouchList;

	// implements NodeSelector

	function querySelector(selectors : string/*DOMString*/) : Element;
	function querySelectorAll(
		selectors : string/*DOMString*/
	) : NodeList;

} // end of Document

native final class XMLDocument extends Document {

	function load(url : string/*DOMString*/) : boolean;

} // end of XMLDocument

native final class DOMImplementation {

	function createDocumentType(
		qualifiedName : string/*DOMString*/,
		publicId : string/*DOMString*/,
		systemId : string/*DOMString*/
	) : DocumentType;
	function createDocument(
		namespace : Nullable.<string>/*DOMString?*/,
		qualifiedName : string/*DOMString*/,
		doctype : DocumentType
	) : XMLDocument;
	function createHTMLDocument(title : string/*DOMString*/) : Document;
	function hasFeature(
		feature : string/*DOMString*/,
		version : string/*DOMString*/
	) : boolean;

} // end of DOMImplementation

native final class DocumentFragment extends Node {

	// NEW
	function prepend(...nodes : Node) : void;
	function prepend(...nodes : string/*DOMString*/) : void;
	function append(...nodes : Node) : void;
	function append(...nodes : string/*DOMString*/) : void;

	// implements NodeSelector

	function querySelector(selectors : string/*DOMString*/) : Element;
	function querySelectorAll(
		selectors : string/*DOMString*/
	) : NodeList;

} // end of DocumentFragment

native final class DocumentType extends Node {

	__readonly__ var name : string/*DOMString*/;
	__readonly__ var publicId : string/*DOMString*/;
	__readonly__ var systemId : string/*DOMString*/;
	// NEW
	function before(...nodes : Node) : void;
	function before(...nodes : string/*DOMString*/) : void;
	function after(...nodes : Node) : void;
	function after(...nodes : string/*DOMString*/) : void;
	function replace(...nodes : Node) : void;
	function replace(...nodes : string/*DOMString*/) : void;
	function remove() : void;

} // end of DocumentType

native class Element extends Node {

	__readonly__ var namespaceURI : Nullable.<string>/*DOMString?*/;
	__readonly__ var prefix : Nullable.<string>/*DOMString?*/;
	__readonly__ var localName : string/*DOMString*/;
	__readonly__ var tagName : string/*DOMString*/;
	var id : string/*DOMString*/;
	var className : string/*DOMString*/;
	__readonly__ var classList : DOMTokenList;
	__readonly__ var attributes : Attr[];
	function getAttribute(
		name : string/*DOMString*/
	) : Nullable.<string>/*DOMString?*/;
	function getAttributeNS(
		namespace : Nullable.<string>/*DOMString?*/,
		localName : string/*DOMString*/
	) : Nullable.<string>/*DOMString?*/;
	function setAttribute(
		name : string/*DOMString*/,
		value : string/*DOMString*/
	) : void;
	function setAttributeNS(
		namespace : Nullable.<string>/*DOMString?*/,
		name : string/*DOMString*/,
		value : string/*DOMString*/
	) : void;
	function removeAttribute(name : string/*DOMString*/) : void;
	function removeAttributeNS(
		namespace : Nullable.<string>/*DOMString?*/,
		localName : string/*DOMString*/
	) : void;
	function hasAttribute(name : string/*DOMString*/) : boolean;
	function hasAttributeNS(
		namespace : Nullable.<string>/*DOMString?*/,
		localName : string/*DOMString*/
	) : boolean;
	function getElementsByTagName(
		localName : string/*DOMString*/
	) : HTMLCollection;
	function getElementsByTagNameNS(
		namespace : Nullable.<string>/*DOMString?*/,
		localName : string/*DOMString*/
	) : HTMLCollection;
	function getElementsByClassName(
		classNames : string/*DOMString*/
	) : HTMLCollection;
	__readonly__ var children : HTMLCollection;
	__readonly__ var firstElementChild : Element;
	__readonly__ var lastElementChild : Element;
	__readonly__ var previousElementSibling : Element;
	__readonly__ var nextElementSibling : Element;
	__readonly__ var childElementCount : int/*unsigned long*/;
	// NEW
	function prepend(...nodes : Node) : void;
	function prepend(...nodes : string/*DOMString*/) : void;
	function append(...nodes : Node) : void;
	function append(...nodes : string/*DOMString*/) : void;
	function before(...nodes : Node) : void;
	function before(...nodes : string/*DOMString*/) : void;
	function after(...nodes : Node) : void;
	function after(...nodes : string/*DOMString*/) : void;
	function replace(...nodes : Node) : void;
	function replace(...nodes : string/*DOMString*/) : void;
	function remove() : void;

	function getClientRects() : ClientRectList;
	function getBoundingClientRect() : ClientRect;
	// scrolling
	function scrollIntoView() : void;
	function scrollIntoView(top : boolean) : void;
	var scrollTop : int/*long*/;
	// scroll on setting
	var scrollLeft : int/*long*/;
	// scroll on setting
	__readonly__ var scrollWidth : int/*long*/;
	__readonly__ var scrollHeight : int/*long*/;
	__readonly__ var clientTop : int/*long*/;
	__readonly__ var clientLeft : int/*long*/;
	__readonly__ var clientWidth : int/*long*/;
	__readonly__ var clientHeight : int/*long*/;

	// implements NodeSelector

	function querySelector(selectors : string/*DOMString*/) : Element;
	function querySelectorAll(
		selectors : string/*DOMString*/
	) : NodeList;

	var innerHTML : string/*DOMString*/;
	var outerHTML : string/*DOMString*/;
	function insertAdjacentHTML(
		position : string/*insertAdjacentHTMLPosition*/,
		text : string/*DOMString*/
	) : void;

} // end of Element

native final class Attr {

	__readonly__ var name : string/*DOMString*/;
	var value : string/*DOMString*/;
	__readonly__ var namespaceURI : Nullable.<string>/*DOMString?*/;
	__readonly__ var prefix : Nullable.<string>/*DOMString?*/;
	__readonly__ var localName : string/*DOMString*/;

} // end of Attr

native class CharacterData extends Node {

	var data : string/*DOMString*/;
	__readonly__ var length : int/*unsigned long*/;
	function substringData(
		offset : int/*unsigned long*/,
		count : int/*unsigned long*/
	) : string/*DOMString*/;
	function appendData(data : string/*DOMString*/) : void;
	function insertData(
		offset : int/*unsigned long*/,
		data : string/*DOMString*/
	) : void;
	function deleteData(
		offset : int/*unsigned long*/,
		count : int/*unsigned long*/
	) : void;
	function replaceData(
		offset : int/*unsigned long*/,
		count : int/*unsigned long*/,
		data : string/*DOMString*/
	) : void;
	// NEW
	function before(...nodes : Node) : void;
	function before(...nodes : string/*DOMString*/) : void;
	function after(...nodes : Node) : void;
	function after(...nodes : string/*DOMString*/) : void;
	function replace(...nodes : Node) : void;
	function replace(...nodes : string/*DOMString*/) : void;
	function remove() : void;

} // end of CharacterData

native final class Text extends CharacterData {

	function splitText(offset : int/*unsigned long*/) : Text;
	__readonly__ var wholeText : string/*DOMString*/;

	var serializeAsCDATA : boolean;

} // end of Text

native final class ProcessingInstruction extends CharacterData {

	__readonly__ var target : string/*DOMString*/;

	// implements LinkStyle

	__readonly__ var sheet : StyleSheet;

} // end of ProcessingInstruction

native final class Comment extends CharacterData {
}

native final class Range {

	__readonly__ var startContainer : Node;
	__readonly__ var startOffset : int/*unsigned long*/;
	__readonly__ var endContainer : Node;
	__readonly__ var endOffset : int/*unsigned long*/;
	__readonly__ var collapsed : boolean;
	__readonly__ var commonAncestorContainer : Node;
	function setStart(
		refNode : Node,
		offset : int/*unsigned long*/
	) : void;
	function setEnd(
		refNode : Node,
		offset : int/*unsigned long*/
	) : void;
	function setStartBefore(refNode : Node) : void;
	function setStartAfter(refNode : Node) : void;
	function setEndBefore(refNode : Node) : void;
	function setEndAfter(refNode : Node) : void;
	function collapse(toStart : boolean) : void;
	function selectNode(refNode : Node) : void;
	function selectNodeContents(refNode : Node) : void;
	static __readonly__ var START_TO_START : int/*unsigned short*/;
	       __readonly__ var START_TO_START : int/*unsigned short*/;
	static __readonly__ var START_TO_END : int/*unsigned short*/;
	       __readonly__ var START_TO_END : int/*unsigned short*/;
	static __readonly__ var END_TO_END : int/*unsigned short*/;
	       __readonly__ var END_TO_END : int/*unsigned short*/;
	static __readonly__ var END_TO_START : int/*unsigned short*/;
	       __readonly__ var END_TO_START : int/*unsigned short*/;
	function compareBoundaryPoints(
		how : int/*unsigned short*/,
		sourceRange : Range
	) : int/*short*/;
	function deleteContents() : void;
	function extractContents() : DocumentFragment;
	function cloneContents() : DocumentFragment;
	function insertNode(node : Node) : void;
	function surroundContents(newParent : Node) : void;
	function cloneRange() : Range;
	function detach() : void;
	function isPointInRange(
		node : Node,
		offset : int/*unsigned long*/
	) : boolean;
	function comparePoint(
		node : Node,
		offset : int/*unsigned long*/
	) : int/*short*/;
	function intersectsNode(node : Node) : boolean;

	function getClientRects() : ClientRectList;
	function getBoundingClientRect() : ClientRect;

	function createContextualFragment(
		fragment : string/*DOMString*/
	) : DocumentFragment;

} // end of Range

native final class NodeIterator {

	__readonly__ var root : Node;
	__readonly__ var referenceNode : Node;
	__readonly__ var pointerBeforeReferenceNode : boolean;
	__readonly__ var whatToShow : int/*unsigned long*/;
	__readonly__ var filter : NodeFilter;
	function nextNode() : Node;
	function previousNode() : Node;
	function detach() : void;

} // end of NodeIterator

native final class TreeWalker {

	__readonly__ var root : Node;
	__readonly__ var whatToShow : int/*unsigned long*/;
	__readonly__ var filter : NodeFilter;
	var currentNode : Node;
	function parentNode() : Node;
	function firstChild() : Node;
	function lastChild() : Node;
	function previousSibling() : Node;
	function nextSibling() : Node;
	function previousNode() : Node;
	function nextNode() : Node;

} // end of TreeWalker

native final class NodeFilter {

	// Constants for acceptNode()
	static __readonly__ var FILTER_ACCEPT : int/*unsigned short*/;
	       __readonly__ var FILTER_ACCEPT : int/*unsigned short*/;
	static __readonly__ var FILTER_REJECT : int/*unsigned short*/;
	       __readonly__ var FILTER_REJECT : int/*unsigned short*/;
	static __readonly__ var FILTER_SKIP : int/*unsigned short*/;
	       __readonly__ var FILTER_SKIP : int/*unsigned short*/;
	// Constants for whatToShow
	static __readonly__ var SHOW_ALL : int/*unsigned long*/;
	       __readonly__ var SHOW_ALL : int/*unsigned long*/;
	static __readonly__ var SHOW_ELEMENT : int/*unsigned long*/;
	       __readonly__ var SHOW_ELEMENT : int/*unsigned long*/;
	static __readonly__ var SHOW_ATTRIBUTE : int/*unsigned long*/;
	       __readonly__ var SHOW_ATTRIBUTE : int/*unsigned long*/;
	// historical
	static __readonly__ var SHOW_TEXT : int/*unsigned long*/;
	       __readonly__ var SHOW_TEXT : int/*unsigned long*/;
	static __readonly__ var SHOW_CDATA_SECTION : int/*unsigned long*/;
	       __readonly__ var SHOW_CDATA_SECTION : int/*unsigned long*/;
	// historical
	static __readonly__ var SHOW_ENTITY_REFERENCE : int/*unsigned long*/;
	       __readonly__ var SHOW_ENTITY_REFERENCE : int/*unsigned long*/;
	// historical
	static __readonly__ var SHOW_ENTITY : int/*unsigned long*/;
	       __readonly__ var SHOW_ENTITY : int/*unsigned long*/;
	// historical
	static __readonly__ var SHOW_PROCESSING_INSTRUCTION : int/*unsigned long*/;
	       __readonly__ var SHOW_PROCESSING_INSTRUCTION : int/*unsigned long*/;
	static __readonly__ var SHOW_COMMENT : int/*unsigned long*/;
	       __readonly__ var SHOW_COMMENT : int/*unsigned long*/;
	static __readonly__ var SHOW_DOCUMENT : int/*unsigned long*/;
	       __readonly__ var SHOW_DOCUMENT : int/*unsigned long*/;
	static __readonly__ var SHOW_DOCUMENT_TYPE : int/*unsigned long*/;
	       __readonly__ var SHOW_DOCUMENT_TYPE : int/*unsigned long*/;
	static __readonly__ var SHOW_DOCUMENT_FRAGMENT : int/*unsigned long*/;
	       __readonly__ var SHOW_DOCUMENT_FRAGMENT : int/*unsigned long*/;
	static __readonly__ var SHOW_NOTATION : int/*unsigned long*/;
	       __readonly__ var SHOW_NOTATION : int/*unsigned long*/;
	// historical

	function acceptNode(node : Node) : int/*unsigned short*/;

} // end of NodeFilter

native class NodeList {

	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Node;
	/* getter */
	function item(index : int/*unsigned long*/) : Node;
	__readonly__ var length : int/*unsigned long*/;

} // end of NodeList

native class HTMLCollection {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Element;
	/* getter */
	function item(index : int/*unsigned long*/) : Element;
	function __native_index_operator__(
		name : string/*DOMString*/
	) : Object/*object?*/;
	/* getter */
	function namedItem(name : string/*DOMString*/) : Object/*object?*/;
	// only returns Element

} // end of HTMLCollection

native final __fake__ class DOMStringList {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<string>/*DOMString?*/;
	/* getter */
	function item(
		index : int/*unsigned long*/
	) : Nullable.<string>/*DOMString?*/;
	function contains(string : string/*DOMString*/) : boolean;

} // end of DOMStringList

native class DOMTokenList {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<string>/*DOMString?*/;
	/* getter */
	function item(
		index : int/*unsigned long*/
	) : Nullable.<string>/*DOMString?*/;
	function contains(token : string/*DOMString*/) : boolean;
	function add(token : string/*DOMString*/) : void;
	function remove(token : string/*DOMString*/) : void;
	function toggle(token : string/*DOMString*/) : boolean;

} // end of DOMTokenList

native final class DOMSettableTokenList extends DOMTokenList {

	var value : string/*DOMString*/;

} // end of DOMSettableTokenList

native final __fake__ class AbstractView {

	__readonly__ var document : DocumentView;

} // end of AbstractView

native final __fake__ class DocumentView {

	__readonly__ var defaultView : AbstractView;

} // end of DocumentView

native __fake__ class DocumentEvent {

	// Modified in DOM Level 3:
	function createEvent(eventInterface : string/*DOMString*/) : Event;

} // end of DocumentEvent

native class UIEvent extends Event {

	__readonly__ var view : AbstractView;
	__readonly__ var detail : int/*long*/;
	// Deprecated in DOM Level 3:
	function initUIEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		detailArg : int/*long*/
	) : void;
	function constructor(typeArg : string/*DOMString*/);
	function constructor(
		typeArg : string/*DOMString*/,
		dictUIEventInit : UIEventInit
	);

} // end of UIEvent

native final class FocusEvent extends UIEvent {

	__readonly__ var relatedTarget : EventTarget;
	function constructor(typeArg : string/*DOMString*/);
	function constructor(
		typeArg : string/*DOMString*/,
		focusEventInitDict : FocusEventInit
	);

	// Originally introduced (and deprecated) in DOM Level 3:
	function initFocusEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		detailArg : int/*long*/,
		relatedTargetArg : EventTarget
	) : void;

} // end of FocusEvent

native class MouseEvent extends UIEvent {

	__readonly__ var screenX : int/*long*/;
	__readonly__ var screenY : int/*long*/;
	__readonly__ var clientX : int/*long*/;
	__readonly__ var clientY : int/*long*/;
	__readonly__ var ctrlKey : boolean;
	__readonly__ var shiftKey : boolean;
	__readonly__ var altKey : boolean;
	__readonly__ var metaKey : boolean;
	__readonly__ var button : int/*unsigned short*/;
	__readonly__ var buttons : int/*unsigned short*/;
	__readonly__ var relatedTarget : EventTarget;
	// Deprecated in DOM Level 3:
	function initMouseEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		detailArg : int/*long*/,
		screenXArg : int/*long*/,
		screenYArg : int/*long*/,
		clientXArg : int/*long*/,
		clientYArg : int/*long*/,
		ctrlKeyArg : boolean,
		altKeyArg : boolean,
		shiftKeyArg : boolean,
		metaKeyArg : boolean,
		buttonArg : int/*unsigned short*/,
		relatedTargetArg : EventTarget
	) : void;
	// Introduced in DOM Level 3:
	function getModifierState(keyArg : string/*DOMString*/) : boolean;
	function constructor(typeArg : string/*DOMString*/);
	function constructor(
		typeArg : string/*DOMString*/,
		mouseEventInitDict : MouseEventInit
	);


	__readonly__ var pageX : int/*long*/;
	__readonly__ var pageY : int/*long*/;
	__readonly__ var x : int/*long*/;
	__readonly__ var y : int/*long*/;
	__readonly__ var offsetX : int/*long*/;
	__readonly__ var offsetY : int/*long*/;
	__readonly__ var layerX : int/*long*/;
	__readonly__ var layerY : int/*long*/;

} // end of MouseEvent

native final class WheelEvent extends MouseEvent {

	// DeltaModeCode
	static __readonly__ var DOM_DELTA_PIXEL : int/*unsigned long*/;
	       __readonly__ var DOM_DELTA_PIXEL : int/*unsigned long*/;
	static __readonly__ var DOM_DELTA_LINE : int/*unsigned long*/;
	       __readonly__ var DOM_DELTA_LINE : int/*unsigned long*/;
	static __readonly__ var DOM_DELTA_PAGE : int/*unsigned long*/;
	       __readonly__ var DOM_DELTA_PAGE : int/*unsigned long*/;
	__readonly__ var deltaX : number/*float*/;
	__readonly__ var deltaY : number/*float*/;
	__readonly__ var deltaZ : number/*float*/;
	__readonly__ var deltaMode : int/*unsigned long*/;
	function constructor(typeArg : string/*DOMString*/);
	function constructor(
		typeArg : string/*DOMString*/,
		wheelEventInitDict : WheelEventInit
	);

	// Originally introduced (and deprecated) in DOM Level 3:
	function initWheelEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		detailArg : int/*long*/,
		screenXArg : int/*long*/,
		screenYArg : int/*long*/,
		clientXArg : int/*long*/,
		clientYArg : int/*long*/,
		buttonArg : int/*unsigned short*/,
		relatedTargetArg : EventTarget,
		modifiersListArg : string/*DOMString*/,
		deltaXArg : number/*float*/,
		deltaYArg : number/*float*/,
		deltaZArg : number/*float*/,
		deltaMode : int/*unsigned long*/
	) : void;

} // end of WheelEvent

native final class KeyboardEvent extends UIEvent {

	// KeyLocationCode
	static __readonly__ var DOM_KEY_LOCATION_STANDARD : int/*unsigned long*/;
	       __readonly__ var DOM_KEY_LOCATION_STANDARD : int/*unsigned long*/;
	static __readonly__ var DOM_KEY_LOCATION_LEFT : int/*unsigned long*/;
	       __readonly__ var DOM_KEY_LOCATION_LEFT : int/*unsigned long*/;
	static __readonly__ var DOM_KEY_LOCATION_RIGHT : int/*unsigned long*/;
	       __readonly__ var DOM_KEY_LOCATION_RIGHT : int/*unsigned long*/;
	static __readonly__ var DOM_KEY_LOCATION_NUMPAD : int/*unsigned long*/;
	       __readonly__ var DOM_KEY_LOCATION_NUMPAD : int/*unsigned long*/;
	static __readonly__ var DOM_KEY_LOCATION_MOBILE : int/*unsigned long*/;
	       __readonly__ var DOM_KEY_LOCATION_MOBILE : int/*unsigned long*/;
	static __readonly__ var DOM_KEY_LOCATION_JOYSTICK : int/*unsigned long*/;
	       __readonly__ var DOM_KEY_LOCATION_JOYSTICK : int/*unsigned long*/;
	__readonly__ var char : string/*DOMString*/;
	__readonly__ var key : string/*DOMString*/;
	__readonly__ var location : int/*unsigned long*/;
	__readonly__ var ctrlKey : boolean;
	__readonly__ var shiftKey : boolean;
	__readonly__ var altKey : boolean;
	__readonly__ var metaKey : boolean;
	__readonly__ var repeat : boolean;
	__readonly__ var locale : string/*DOMString*/;
	function getModifierState(keyArg : string/*DOMString*/) : boolean;
	function constructor(typeArg : string/*DOMString*/);
	function constructor(
		typeArg : string/*DOMString*/,
		keyboardEventInitDict : KeyboardEventInit
	);

	// Originally introduced (and deprecated) in DOM Level 3:
	function initKeyboardEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		charArg : string/*DOMString*/,
		keyArg : string/*DOMString*/,
		locationArg : int/*unsigned long*/,
		modifiersListArg : string/*DOMString*/,
		repeat : boolean,
		localeArg : string/*DOMString*/
	) : void;

	// The following support legacy user agents:
	__readonly__ var charCode : int/*unsigned long*/;
	__readonly__ var keyCode : int/*unsigned long*/;
	__readonly__ var which : int/*unsigned long*/;

} // end of KeyboardEvent

native final class CompositionEvent extends UIEvent {

	__readonly__ var data : Nullable.<string>/*DOMString?*/;
	__readonly__ var locale : string/*DOMString*/;
	function constructor(typeArg : string/*DOMString*/);
	function constructor(
		typeArg : string/*DOMString*/,
		compositionEventInitDict : CompositionEventInit
	);

	// Originally introduced (and deprecated) in DOM Level 3:
	function initCompositionEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		dataArg : Nullable.<string>/*DOMString?*/,
		localeArg : string/*DOMString*/
	) : void;

} // end of CompositionEvent

native final class MutationEvent extends Event {

	// attrChangeType
	static __readonly__ var MODIFICATION : int/*unsigned short*/;
	       __readonly__ var MODIFICATION : int/*unsigned short*/;
	static __readonly__ var ADDITION : int/*unsigned short*/;
	       __readonly__ var ADDITION : int/*unsigned short*/;
	static __readonly__ var REMOVAL : int/*unsigned short*/;
	       __readonly__ var REMOVAL : int/*unsigned short*/;
	__readonly__ var relatedNode : Node;
	__readonly__ var prevValue : string/*DOMString*/;
	__readonly__ var newValue : string/*DOMString*/;
	__readonly__ var attrName : string/*DOMString*/;
	__readonly__ var attrChange : int/*unsigned short*/;
	function initMutationEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		relatedNodeArg : Node,
		prevValueArg : string/*DOMString*/,
		newValueArg : string/*DOMString*/,
		attrNameArg : string/*DOMString*/,
		attrChangeArg : int/*unsigned short*/
	) : void;

} // end of MutationEvent

native class UIEventInit extends EventInit {

	// Attributes from Event:
	// inherits var bubbles : boolean;
	// inherits var cancelable : boolean;
	// Attributes for UIEvent:
	var view : AbstractView;
	var detail : int/*long*/;

} // end of UIEventInit

native final class FocusEventInit {

	// Attributes from Event:
	var bubbles : boolean;
	var cancelable : boolean;
	// Attributes from UIEvent:
	var view : AbstractView;
	var detail : int/*long*/;
	// Attributes for FocusEvent:
	var relatedTarget : EventTarget;

} // end of FocusEventInit

native class MouseEventInit extends UIEventInit {

	// Attributes from Event:
	// inherits var bubbles : boolean;
	// inherits var cancelable : boolean;
	// Attributes from UIEvent:
	// inherits var view : AbstractView;
	// inherits var detail : int/*long*/;
	// Attributes for MouseEvent:
	var screenX : int/*long*/;
	var screenY : int/*long*/;
	var clientX : int/*long*/;
	var clientY : int/*long*/;
	var ctrlKey : boolean;
	var shiftKey : boolean;
	var altKey : boolean;
	var metaKey : boolean;
	var button : int/*unsigned short*/;
	// Note: "buttons" was not previously initializable through initMouseEvent!
	var buttons : int/*unsigned short*/;
	var relatedTarget : EventTarget;

} // end of MouseEventInit

native final class WheelEventInit {

	// Attributes from Event:
	var bubbles : boolean;
	var cancelable : boolean;
	// Attributes from UIEvent:
	var view : AbstractView;
	var detail : int/*long*/;
	// Attributes from MouseEvent:
	var screenX : int/*long*/;
	var screenY : int/*long*/;
	var clientX : int/*long*/;
	var clientY : int/*long*/;
	var ctrlKey : boolean;
	var shiftKey : boolean;
	var altKey : boolean;
	var metaKey : boolean;
	var button : int/*unsigned short*/;
	// Note: "buttons" was not previously initializable through initMouseEvent!
	var buttons : int/*unsigned short*/;
	var relatedTarget : EventTarget;
	// Attributes for WheelEvent:
	var deltaX : number/*float*/;
	var deltaY : number/*float*/;
	var deltaZ : number/*float*/;
	var deltaMode : int/*unsigned long*/;

} // end of WheelEventInit

native final class KeyboardEventInit {

	// Attributes from Event:
	var bubbles : boolean;
	var cancelable : boolean;
	// Attributes from UIEvent:
	var view : AbstractView;
	var detail : int/*long*/;
	// Attributes for KeyboardEvent:
	var char : string/*DOMString*/;
	var key : string/*DOMString*/;
	var location : int/*unsigned long*/;
	var ctrlKey : boolean;
	var shiftKey : boolean;
	var altKey : boolean;
	var metaKey : boolean;
	var repeat : boolean;
	var locale : string/*DOMString*/;
	// (Legacy) key attributes for KeyboardEvent:
	var charCode : int/*unsigned long*/;
	var keyCode : int/*unsigned long*/;
	var which : int/*unsigned long*/;

} // end of KeyboardEventInit

native final class CompositionEventInit {

	// Attributes from Event:
	var bubbles : boolean;
	var cancelable : boolean;
	// Attributes from UIEvent:
	var view : AbstractView;
	var detail : int/*long*/;
	// Attributes for CompositionEvent:
	var data : Nullable.<string>/*DOMString?*/;
	var locale : string/*DOMString*/;

} // end of CompositionEventInit

native __fake__ class XMLHttpRequestEventTarget extends EventTarget {

	// event handlers
	var onloadstart : function(:Event):void/*Function?*/;
	var onprogress : function(:Event):void/*Function?*/;
	var onabort : function(:Event):void/*Function?*/;
	var onerror : function(:Event):void/*Function?*/;
	var onload : function(:Event):void/*Function?*/;
	var ontimeout : function(:Event):void/*Function?*/;
	var onloadend : function(:Event):void/*Function?*/;

} // end of XMLHttpRequestEventTarget

native final class XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
}

native class XMLHttpRequest extends XMLHttpRequestEventTarget {

	function constructor();

	// event handler
	var onreadystatechange : function(:Event):void/*Function?*/;
	// states
	static __readonly__ var UNSENT : int/*unsigned short*/;
	       __readonly__ var UNSENT : int/*unsigned short*/;
	static __readonly__ var OPENED : int/*unsigned short*/;
	       __readonly__ var OPENED : int/*unsigned short*/;
	static __readonly__ var HEADERS_RECEIVED : int/*unsigned short*/;
	       __readonly__ var HEADERS_RECEIVED : int/*unsigned short*/;
	static __readonly__ var LOADING : int/*unsigned short*/;
	       __readonly__ var LOADING : int/*unsigned short*/;
	static __readonly__ var DONE : int/*unsigned short*/;
	       __readonly__ var DONE : int/*unsigned short*/;
	__readonly__ var readyState : int/*unsigned short*/;
	// request
	function open(
		method : string/*DOMString*/,
		url : string/*DOMString*/
	) : void;
	function open(
		method : string/*DOMString*/,
		url : string/*DOMString*/,
		async : boolean
	) : void;
	function open(
		method : string/*DOMString*/,
		url : string/*DOMString*/,
		async : boolean,
		user : Nullable.<string>/*DOMString?*/
	) : void;
	function open(
		method : string/*DOMString*/,
		url : string/*DOMString*/,
		async : boolean,
		user : Nullable.<string>/*DOMString?*/,
		password : Nullable.<string>/*DOMString?*/
	) : void;
	function setRequestHeader(
		header : string/*DOMString*/,
		value : string/*DOMString*/
	) : void;
	var timeout : int/*unsigned long*/;
	var withCredentials : boolean;
	__readonly__ var upload : XMLHttpRequestUpload;
	function send() : void;
	function send(data : ArrayBuffer) : void;
	function send(data : Blob) : void;
	function send(data : Document) : void;
	function send(data : Nullable.<string>/*DOMString?*/) : void;
	function send(data : FormData) : void;
	function abort() : void;
	// response
	__readonly__ var status : int/*unsigned short*/;
	__readonly__ var statusText : string/*DOMString*/;
	function getResponseHeader(
		header : string/*DOMString*/
	) : string/*DOMString*/;
	function getAllResponseHeaders() : string/*DOMString*/;
	function overrideMimeType(mime : string/*DOMString*/) : void;
	var responseType : string/*XMLHttpRequestResponseType*/;
	__readonly__ var response : variant/*any*/;
	__readonly__ var responseText : string/*DOMString*/;
	__readonly__ var responseXML : Document;

} // end of XMLHttpRequest

native final class AnonXMLHttpRequest extends XMLHttpRequest {

	function constructor();

} // end of AnonXMLHttpRequest

native final class FormData {

	function constructor();
	function constructor(form : HTMLFormElement);

	function append(name : string/*DOMString*/, value : Blob) : void;
	function append(
		name : string/*DOMString*/,
		value : Blob,
		filename : string/*DOMString*/
	) : void;
	function append(
		name : string/*DOMString*/,
		value : string/*DOMString*/
	) : void;

} // end of FormData

native final class MediaList {

	var mediaText : string/*DOMString*/;
	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<string>/*DOMString*/;
	/* getter */
	function item(
		index : int/*unsigned long*/
	) : Nullable.<string>/*DOMString*/;
	function appendMedium(medium : string/*DOMString*/) : void;
	function deleteMedium(medium : string/*DOMString*/) : void;

} // end of MediaList

native class StyleSheet {

	__readonly__ var type : string/*DOMString*/;
	__readonly__ var href : string/*DOMString*/;
	__readonly__ var ownerNode : Node;
	__readonly__ var parentStyleSheet : StyleSheet;
	__readonly__ var title : string/*DOMString*/;
	__readonly__ var media : MediaList;
	var disabled : boolean;

} // end of StyleSheet

native final class CSSStyleSheet extends StyleSheet {

	__readonly__ var ownerRule : CSSRule;
	__readonly__ var cssRules : CSSRule[]/*CSSRuleList*/;
	function insertRule(
		rule : string/*DOMString*/,
		index : int/*unsigned long*/
	) : int/*unsigned long*/;
	function deleteRule(index : int/*unsigned long*/) : void;

} // end of CSSStyleSheet

native __fake__ class LinkStyle {

	__readonly__ var sheet : StyleSheet;

} // end of LinkStyle

native class CSSRule {

	// Types
	static __readonly__ var STYLE_RULE : int/*unsigned short*/;
	       __readonly__ var STYLE_RULE : int/*unsigned short*/;
	static __readonly__ var IMPORT_RULE : int/*unsigned short*/;
	       __readonly__ var IMPORT_RULE : int/*unsigned short*/;
	static __readonly__ var MEDIA_RULE : int/*unsigned short*/;
	       __readonly__ var MEDIA_RULE : int/*unsigned short*/;
	static __readonly__ var FONT_FACE_RULE : int/*unsigned short*/;
	       __readonly__ var FONT_FACE_RULE : int/*unsigned short*/;
	static __readonly__ var PAGE_RULE : int/*unsigned short*/;
	       __readonly__ var PAGE_RULE : int/*unsigned short*/;
	static __readonly__ var NAMESPACE_RULE : int/*unsigned short*/;
	       __readonly__ var NAMESPACE_RULE : int/*unsigned short*/;
	__readonly__ var type : int/*unsigned short*/;
	// Parsing and serialization
	var cssText : string/*DOMString*/;
	// Context
	__readonly__ var parentRule : CSSRule;
	__readonly__ var parentStyleSheet : CSSStyleSheet;

} // end of CSSRule

native final class CSSStyleRule extends CSSRule {

	var selectorText : string/*DOMString*/;
	__readonly__ var style : CSSStyleDeclaration;

} // end of CSSStyleRule

native final class CSSImportRule extends CSSRule {

	__readonly__ var href : string/*DOMString*/;
	__readonly__ var media : MediaList;
	__readonly__ var styleSheet : CSSStyleSheet;

} // end of CSSImportRule

native final class CSSMediaRule extends CSSRule {

	__readonly__ var media : MediaList;
	__readonly__ var cssRules : CSSRule[]/*CSSRuleList*/;
	function insertRule(
		rule : string/*DOMString*/,
		index : int/*unsigned long*/
	) : int/*unsigned long*/;
	function deleteRule(index : int/*unsigned long*/) : void;

} // end of CSSMediaRule

native final class CSSFontFaceRule extends CSSRule {

	__readonly__ var style : CSSStyleDeclaration;

} // end of CSSFontFaceRule

native final class CSSPageRule extends CSSRule {

	var selectorText : string/*DOMString*/;
	__readonly__ var style : CSSStyleDeclaration;

} // end of CSSPageRule

native final class CSSNamespaceRule extends CSSRule {

	__readonly__ var namespaceURI : string/*DOMString*/;
	__readonly__ var prefix : Nullable.<string>/*DOMString?*/;

} // end of CSSNamespaceRule

native final class CSSStyleDeclaration {

	var cssText : string/*DOMString*/;
	__readonly__ var length : int/*unsigned long*/;
	function item(index : int/*unsigned long*/) : string/*DOMString*/;
	function getPropertyValue(
		property : string/*DOMString*/
	) : string/*DOMString*/;
	function getPropertyPriority(
		property : string/*DOMString*/
	) : string/*DOMString*/;
	function setProperty(
		property : string/*DOMString*/,
		value : string/*DOMString*/
	) : void;
	function setProperty(
		property : string/*DOMString*/,
		value : string/*DOMString*/,
		priority : string/*DOMString*/
	) : void;
	function removeProperty(
		property : string/*DOMString*/
	) : string/*DOMString*/;
	__readonly__ var parentRule : CSSRule;
	// CSS Properties
	var azimuth : string/*DOMString*/;
	var background : string/*DOMString*/;
	var backgroundAttachment : string/*DOMString*/;
	var backgroundColor : string/*DOMString*/;
	var backgroundImage : string/*DOMString*/;
	var backgroundPosition : string/*DOMString*/;
	var backgroundRepeat : string/*DOMString*/;
	var border : string/*DOMString*/;
	var borderCollapse : string/*DOMString*/;
	var borderColor : string/*DOMString*/;
	var borderSpacing : string/*DOMString*/;
	var borderStyle : string/*DOMString*/;
	var borderTop : string/*DOMString*/;
	var borderRight : string/*DOMString*/;
	var borderBottom : string/*DOMString*/;
	var borderLeft : string/*DOMString*/;
	var borderTopColor : string/*DOMString*/;
	var borderRightColor : string/*DOMString*/;
	var borderBottomColor : string/*DOMString*/;
	var borderLeftColor : string/*DOMString*/;
	var borderTopStyle : string/*DOMString*/;
	var borderRightStyle : string/*DOMString*/;
	var borderBottomStyle : string/*DOMString*/;
	var borderLeftStyle : string/*DOMString*/;
	var borderTopWidth : string/*DOMString*/;
	var borderRightWidth : string/*DOMString*/;
	var borderBottomWidth : string/*DOMString*/;
	var borderLeftWidth : string/*DOMString*/;
	var borderWidth : string/*DOMString*/;
	var bottom : string/*DOMString*/;
	var captionSide : string/*DOMString*/;
	var clear : string/*DOMString*/;
	var clip : string/*DOMString*/;
	var color : string/*DOMString*/;
	var content : string/*DOMString*/;
	var counterIncrement : string/*DOMString*/;
	var counterReset : string/*DOMString*/;
	var cue : string/*DOMString*/;
	var cueAfter : string/*DOMString*/;
	var cueBefore : string/*DOMString*/;
	var cursor : string/*DOMString*/;
	var direction : string/*DOMString*/;
	var display : string/*DOMString*/;
	var elevation : string/*DOMString*/;
	var emptyCells : string/*DOMString*/;
	var cssFloat : string/*DOMString*/;
	var font : string/*DOMString*/;
	var fontFamily : string/*DOMString*/;
	var fontSize : string/*DOMString*/;
	var fontSizeAdjust : string/*DOMString*/;
	var fontStretch : string/*DOMString*/;
	var fontStyle : string/*DOMString*/;
	var fontVariant : string/*DOMString*/;
	var fontWeight : string/*DOMString*/;
	var height : string/*DOMString*/;
	var left : string/*DOMString*/;
	var letterSpacing : string/*DOMString*/;
	var lineHeight : string/*DOMString*/;
	var listStyle : string/*DOMString*/;
	var listStyleImage : string/*DOMString*/;
	var listStylePosition : string/*DOMString*/;
	var listStyleType : string/*DOMString*/;
	var margin : string/*DOMString*/;
	var marginTop : string/*DOMString*/;
	var marginRight : string/*DOMString*/;
	var marginBottom : string/*DOMString*/;
	var marginLeft : string/*DOMString*/;
	var markerOffset : string/*DOMString*/;
	var marks : string/*DOMString*/;
	var maxHeight : string/*DOMString*/;
	var maxWidth : string/*DOMString*/;
	var minHeight : string/*DOMString*/;
	var minWidth : string/*DOMString*/;
	var orphans : string/*DOMString*/;
	var outline : string/*DOMString*/;
	var outlineColor : string/*DOMString*/;
	var outlineStyle : string/*DOMString*/;
	var outlineWidth : string/*DOMString*/;
	var overflow : string/*DOMString*/;
	var padding : string/*DOMString*/;
	var paddingTop : string/*DOMString*/;
	var paddingRight : string/*DOMString*/;
	var paddingBottom : string/*DOMString*/;
	var paddingLeft : string/*DOMString*/;
	var page : string/*DOMString*/;
	var pageBreakAfter : string/*DOMString*/;
	var pageBreakBefore : string/*DOMString*/;
	var pageBreakInside : string/*DOMString*/;
	var pause : string/*DOMString*/;
	var pauseAfter : string/*DOMString*/;
	var pauseBefore : string/*DOMString*/;
	var pitch : string/*DOMString*/;
	var pitchRange : string/*DOMString*/;
	var playDuring : string/*DOMString*/;
	var position : string/*DOMString*/;
	var quotes : string/*DOMString*/;
	var richness : string/*DOMString*/;
	var right : string/*DOMString*/;
	var size : string/*DOMString*/;
	var speak : string/*DOMString*/;
	var speakHeader : string/*DOMString*/;
	var speakNumeral : string/*DOMString*/;
	var speakPunctuation : string/*DOMString*/;
	var speechRate : string/*DOMString*/;
	var stress : string/*DOMString*/;
	var tableLayout : string/*DOMString*/;
	var textAlign : string/*DOMString*/;
	var textDecoration : string/*DOMString*/;
	var textIndent : string/*DOMString*/;
	var textShadow : string/*DOMString*/;
	var textTransform : string/*DOMString*/;
	var top : string/*DOMString*/;
	var unicodeBidi : string/*DOMString*/;
	var verticalAlign : string/*DOMString*/;
	var visibility : string/*DOMString*/;
	var voiceFamily : string/*DOMString*/;
	var volume : string/*DOMString*/;
	var whiteSpace : string/*DOMString*/;
	var widows : string/*DOMString*/;
	var width : string/*DOMString*/;
	var wordSpacing : string/*DOMString*/;
	var zIndex : string/*DOMString*/;

	var alignmentBaseline : Nullable.<string>;
	var backgroundClip : Nullable.<string>;
	var backgroundOrigin : Nullable.<string>;
	var backgroundPositionX : Nullable.<string>;
	var backgroundPositionY : Nullable.<string>;
	var backgroundRepeatX : Nullable.<string>;
	var backgroundRepeatY : Nullable.<string>;
	var backgroundSize : Nullable.<string>;
	var baselineShift : Nullable.<string>;
	var borderBottomLeftRadius : Nullable.<string>;
	var borderBottomRightRadius : Nullable.<string>;
	var borderImage : Nullable.<string>;
	var borderImageOutset : Nullable.<string>;
	var borderImageRepeat : Nullable.<string>;
	var borderImageSlice : Nullable.<string>;
	var borderImageSource : Nullable.<string>;
	var borderImageWidth : Nullable.<string>;
	var borderRadius : Nullable.<string>;
	var borderTopLeftRadius : Nullable.<string>;
	var borderTopRightRadius : Nullable.<string>;
	var boxShadow : Nullable.<string>;
	var boxSizing : Nullable.<string>;
	var clipPath : Nullable.<string>;
	var clipRule : Nullable.<string>;
	var colorInterpolation : Nullable.<string>;
	var colorInterpolationFilters : Nullable.<string>;
	var colorProfile : Nullable.<string>;
	var colorRendering : Nullable.<string>;
	var dominantBaseline : Nullable.<string>;
	var enableBackground : Nullable.<string>;
	var fill : Nullable.<string>;
	var fillOpacity : Nullable.<string>;
	var fillRule : Nullable.<string>;
	var filter : Nullable.<string>;
	var float : Nullable.<string>;
	var floodColor : Nullable.<string>;
	var floodOpacity : Nullable.<string>;
	var glyphOrientationHorizontal : Nullable.<string>;
	var glyphOrientationVertical : Nullable.<string>;
	var imageRendering : Nullable.<string>;
	var kerning : Nullable.<string>;
	var lightingColor : Nullable.<string>;
	var marker : Nullable.<string>;
	var markerEnd : Nullable.<string>;
	var markerMid : Nullable.<string>;
	var markerStart : Nullable.<string>;
	var mask : Nullable.<string>;
	var opacity : Nullable.<string>;
	var outlineOffset : Nullable.<string>;
	var overflowX : Nullable.<string>;
	var overflowY : Nullable.<string>;
	var pointerEvents : Nullable.<string>;
	var resize : Nullable.<string>;
	var shapeRendering : Nullable.<string>;
	var src : Nullable.<string>;
	var stopColor : Nullable.<string>;
	var stopOpacity : Nullable.<string>;
	var stroke : Nullable.<string>;
	var strokeDasharray : Nullable.<string>;
	var strokeDashoffset : Nullable.<string>;
	var strokeLinecap : Nullable.<string>;
	var strokeLinejoin : Nullable.<string>;
	var strokeMiterlimit : Nullable.<string>;
	var strokeOpacity : Nullable.<string>;
	var strokeWidth : Nullable.<string>;
	var textAnchor : Nullable.<string>;
	var textLineThrough : Nullable.<string>;
	var textLineThroughColor : Nullable.<string>;
	var textLineThroughMode : Nullable.<string>;
	var textLineThroughStyle : Nullable.<string>;
	var textLineThroughWidth : Nullable.<string>;
	var textOverflow : Nullable.<string>;
	var textOverline : Nullable.<string>;
	var textOverlineColor : Nullable.<string>;
	var textOverlineMode : Nullable.<string>;
	var textOverlineStyle : Nullable.<string>;
	var textOverlineWidth : Nullable.<string>;
	var textRendering : Nullable.<string>;
	var textUnderline : Nullable.<string>;
	var textUnderlineColor : Nullable.<string>;
	var textUnderlineMode : Nullable.<string>;
	var textUnderlineStyle : Nullable.<string>;
	var textUnderlineWidth : Nullable.<string>;
	var unicodeRange : Nullable.<string>;
	var vectorEffect : Nullable.<string>;
	var webkitAnimation : Nullable.<string>;
	var webkitAnimationDelay : Nullable.<string>;
	var webkitAnimationDirection : Nullable.<string>;
	var webkitAnimationDuration : Nullable.<string>;
	var webkitAnimationFillMode : Nullable.<string>;
	var webkitAnimationIterationCount : Nullable.<string>;
	var webkitAnimationName : Nullable.<string>;
	var webkitAnimationPlayState : Nullable.<string>;
	var webkitAnimationTimingFunction : Nullable.<string>;
	var webkitAppearance : Nullable.<string>;
	var webkitAspectRatio : Nullable.<string>;
	var webkitBackfaceVisibility : Nullable.<string>;
	var webkitBackgroundClip : Nullable.<string>;
	var webkitBackgroundComposite : Nullable.<string>;
	var webkitBackgroundOrigin : Nullable.<string>;
	var webkitBackgroundSize : Nullable.<string>;
	var webkitBorderAfter : Nullable.<string>;
	var webkitBorderAfterColor : Nullable.<string>;
	var webkitBorderAfterStyle : Nullable.<string>;
	var webkitBorderAfterWidth : Nullable.<string>;
	var webkitBorderBefore : Nullable.<string>;
	var webkitBorderBeforeColor : Nullable.<string>;
	var webkitBorderBeforeStyle : Nullable.<string>;
	var webkitBorderBeforeWidth : Nullable.<string>;
	var webkitBorderEnd : Nullable.<string>;
	var webkitBorderEndColor : Nullable.<string>;
	var webkitBorderEndStyle : Nullable.<string>;
	var webkitBorderEndWidth : Nullable.<string>;
	var webkitBorderFit : Nullable.<string>;
	var webkitBorderHorizontalSpacing : Nullable.<string>;
	var webkitBorderImage : Nullable.<string>;
	var webkitBorderRadius : Nullable.<string>;
	var webkitBorderStart : Nullable.<string>;
	var webkitBorderStartColor : Nullable.<string>;
	var webkitBorderStartStyle : Nullable.<string>;
	var webkitBorderStartWidth : Nullable.<string>;
	var webkitBorderVerticalSpacing : Nullable.<string>;
	var webkitBoxAlign : Nullable.<string>;
	var webkitBoxDirection : Nullable.<string>;
	var webkitBoxFlex : Nullable.<string>;
	var webkitBoxFlexGroup : Nullable.<string>;
	var webkitBoxLines : Nullable.<string>;
	var webkitBoxOrdinalGroup : Nullable.<string>;
	var webkitBoxOrient : Nullable.<string>;
	var webkitBoxPack : Nullable.<string>;
	var webkitBoxReflect : Nullable.<string>;
	var webkitBoxShadow : Nullable.<string>;
	var webkitColorCorrection : Nullable.<string>;
	var webkitColumnAxis : Nullable.<string>;
	var webkitColumnBreakAfter : Nullable.<string>;
	var webkitColumnBreakBefore : Nullable.<string>;
	var webkitColumnBreakInside : Nullable.<string>;
	var webkitColumnCount : Nullable.<string>;
	var webkitColumnGap : Nullable.<string>;
	var webkitColumnRule : Nullable.<string>;
	var webkitColumnRuleColor : Nullable.<string>;
	var webkitColumnRuleStyle : Nullable.<string>;
	var webkitColumnRuleWidth : Nullable.<string>;
	var webkitColumnSpan : Nullable.<string>;
	var webkitColumnWidth : Nullable.<string>;
	var webkitColumns : Nullable.<string>;
	var webkitFilter : Nullable.<string>;
	var webkitFlexAlign : Nullable.<string>;
	var webkitFlexDirection : Nullable.<string>;
	var webkitFlexFlow : Nullable.<string>;
	var webkitFlexItemAlign : Nullable.<string>;
	var webkitFlexLinePack : Nullable.<string>;
	var webkitFlexOrder : Nullable.<string>;
	var webkitFlexPack : Nullable.<string>;
	var webkitFlexWrap : Nullable.<string>;
	var webkitFlowFrom : Nullable.<string>;
	var webkitFlowInto : Nullable.<string>;
	var webkitFontFeatureSettings : Nullable.<string>;
	var webkitFontKerning : Nullable.<string>;
	var webkitFontSizeDelta : Nullable.<string>;
	var webkitFontSmoothing : Nullable.<string>;
	var webkitFontVariantLigatures : Nullable.<string>;
	var webkitHighlight : Nullable.<string>;
	var webkitHyphenateCharacter : Nullable.<string>;
	var webkitHyphenateLimitAfter : Nullable.<string>;
	var webkitHyphenateLimitBefore : Nullable.<string>;
	var webkitHyphenateLimitLines : Nullable.<string>;
	var webkitHyphens : Nullable.<string>;
	var webkitLineAlign : Nullable.<string>;
	var webkitLineBoxContain : Nullable.<string>;
	var webkitLineBreak : Nullable.<string>;
	var webkitLineClamp : Nullable.<string>;
	var webkitLineGrid : Nullable.<string>;
	var webkitLineSnap : Nullable.<string>;
	var webkitLocale : Nullable.<string>;
	var webkitLogicalHeight : Nullable.<string>;
	var webkitLogicalWidth : Nullable.<string>;
	var webkitMarginAfter : Nullable.<string>;
	var webkitMarginAfterCollapse : Nullable.<string>;
	var webkitMarginBefore : Nullable.<string>;
	var webkitMarginBeforeCollapse : Nullable.<string>;
	var webkitMarginBottomCollapse : Nullable.<string>;
	var webkitMarginCollapse : Nullable.<string>;
	var webkitMarginEnd : Nullable.<string>;
	var webkitMarginStart : Nullable.<string>;
	var webkitMarginTopCollapse : Nullable.<string>;
	var webkitMarquee : Nullable.<string>;
	var webkitMarqueeDirection : Nullable.<string>;
	var webkitMarqueeIncrement : Nullable.<string>;
	var webkitMarqueeRepetition : Nullable.<string>;
	var webkitMarqueeSpeed : Nullable.<string>;
	var webkitMarqueeStyle : Nullable.<string>;
	var webkitMask : Nullable.<string>;
	var webkitMaskAttachment : Nullable.<string>;
	var webkitMaskBoxImage : Nullable.<string>;
	var webkitMaskBoxImageOutset : Nullable.<string>;
	var webkitMaskBoxImageRepeat : Nullable.<string>;
	var webkitMaskBoxImageSlice : Nullable.<string>;
	var webkitMaskBoxImageSource : Nullable.<string>;
	var webkitMaskBoxImageWidth : Nullable.<string>;
	var webkitMaskClip : Nullable.<string>;
	var webkitMaskComposite : Nullable.<string>;
	var webkitMaskImage : Nullable.<string>;
	var webkitMaskOrigin : Nullable.<string>;
	var webkitMaskPosition : Nullable.<string>;
	var webkitMaskPositionX : Nullable.<string>;
	var webkitMaskPositionY : Nullable.<string>;
	var webkitMaskRepeat : Nullable.<string>;
	var webkitMaskRepeatX : Nullable.<string>;
	var webkitMaskRepeatY : Nullable.<string>;
	var webkitMaskSize : Nullable.<string>;
	var webkitMatchNearestMailBlockquoteColor : Nullable.<string>;
	var webkitMaxLogicalHeight : Nullable.<string>;
	var webkitMaxLogicalWidth : Nullable.<string>;
	var webkitMinLogicalHeight : Nullable.<string>;
	var webkitMinLogicalWidth : Nullable.<string>;
	var webkitNbspMode : Nullable.<string>;
	var webkitOverflowScrolling : Nullable.<string>;
	var webkitPaddingAfter : Nullable.<string>;
	var webkitPaddingBefore : Nullable.<string>;
	var webkitPaddingEnd : Nullable.<string>;
	var webkitPaddingStart : Nullable.<string>;
	var webkitPerspective : Nullable.<string>;
	var webkitPerspectiveOrigin : Nullable.<string>;
	var webkitPerspectiveOriginX : Nullable.<string>;
	var webkitPerspectiveOriginY : Nullable.<string>;
	var webkitPrintColorAdjust : Nullable.<string>;
	var webkitRegionBreakAfter : Nullable.<string>;
	var webkitRegionBreakBefore : Nullable.<string>;
	var webkitRegionBreakInside : Nullable.<string>;
	var webkitRegionOverflow : Nullable.<string>;
	var webkitRtlOrdering : Nullable.<string>;
	var webkitSvgShadow : Nullable.<string>;
	var webkitTapHighlightColor : Nullable.<string>;
	var webkitTextCombine : Nullable.<string>;
	var webkitTextDecorationsInEffect : Nullable.<string>;
	var webkitTextEmphasis : Nullable.<string>;
	var webkitTextEmphasisColor : Nullable.<string>;
	var webkitTextEmphasisPosition : Nullable.<string>;
	var webkitTextEmphasisStyle : Nullable.<string>;
	var webkitTextFillColor : Nullable.<string>;
	var webkitTextOrientation : Nullable.<string>;
	var webkitTextSecurity : Nullable.<string>;
	var webkitTextSizeAdjust : Nullable.<string>;
	var webkitTextStroke : Nullable.<string>;
	var webkitTextStrokeColor : Nullable.<string>;
	var webkitTextStrokeWidth : Nullable.<string>;
	var webkitTransform : Nullable.<string>;
	var webkitTransformOrigin : Nullable.<string>;
	var webkitTransformOriginX : Nullable.<string>;
	var webkitTransformOriginY : Nullable.<string>;
	var webkitTransformOriginZ : Nullable.<string>;
	var webkitTransformStyle : Nullable.<string>;
	var webkitTransition : Nullable.<string>;
	var webkitTransitionDelay : Nullable.<string>;
	var webkitTransitionDuration : Nullable.<string>;
	var webkitTransitionProperty : Nullable.<string>;
	var webkitTransitionTimingFunction : Nullable.<string>;
	var webkitUserDrag : Nullable.<string>;
	var webkitUserModify : Nullable.<string>;
	var webkitUserSelect : Nullable.<string>;
	var webkitWrap : Nullable.<string>;
	var webkitWrapFlow : Nullable.<string>;
	var webkitWrapMargin : Nullable.<string>;
	var webkitWrapPadding : Nullable.<string>;
	var webkitWrapShapeInside : Nullable.<string>;
	var webkitWrapShapeOutside : Nullable.<string>;
	var webkitWrapThrough : Nullable.<string>;
	var webkitWritingMode : Nullable.<string>;
	var wordBreak : Nullable.<string>;
	var wordWrap : Nullable.<string>;
	var writingMode : Nullable.<string>;
	var zoom : Nullable.<string>;

	var MozAnimation : Nullable.<string>;
	var MozAnimationDelay : Nullable.<string>;
	var MozAnimationDirection : Nullable.<string>;
	var MozAnimationDuration : Nullable.<string>;
	var MozAnimationFillMode : Nullable.<string>;
	var MozAnimationIterationCount : Nullable.<string>;
	var MozAnimationName : Nullable.<string>;
	var MozAnimationPlayState : Nullable.<string>;
	var MozAnimationTimingFunction : Nullable.<string>;
	var MozAppearance : Nullable.<string>;
	var MozBackfaceVisibility : Nullable.<string>;
	var MozBackgroundInlinePolicy : Nullable.<string>;
	var MozBinding : Nullable.<string>;
	var MozBorderBottomColors : Nullable.<string>;
	var MozBorderEnd : Nullable.<string>;
	var MozBorderEndColor : Nullable.<string>;
	var MozBorderEndStyle : Nullable.<string>;
	var MozBorderEndWidth : Nullable.<string>;
	var MozBorderImage : Nullable.<string>;
	var MozBorderLeftColors : Nullable.<string>;
	var MozBorderRightColors : Nullable.<string>;
	var MozBorderStart : Nullable.<string>;
	var MozBorderStartColor : Nullable.<string>;
	var MozBorderStartStyle : Nullable.<string>;
	var MozBorderStartWidth : Nullable.<string>;
	var MozBorderTopColors : Nullable.<string>;
	var MozBoxAlign : Nullable.<string>;
	var MozBoxDirection : Nullable.<string>;
	var MozBoxFlex : Nullable.<string>;
	var MozBoxOrdinalGroup : Nullable.<string>;
	var MozBoxOrient : Nullable.<string>;
	var MozBoxPack : Nullable.<string>;
	var MozBoxSizing : Nullable.<string>;
	var MozColumnCount : Nullable.<string>;
	var MozColumnGap : Nullable.<string>;
	var MozColumnRule : Nullable.<string>;
	var MozColumnRuleColor : Nullable.<string>;
	var MozColumnRuleStyle : Nullable.<string>;
	var MozColumnRuleWidth : Nullable.<string>;
	var MozColumnWidth : Nullable.<string>;
	var MozColumns : Nullable.<string>;
	var MozFloatEdge : Nullable.<string>;
	var MozFontFeatureSettings : Nullable.<string>;
	var MozFontLanguageOverride : Nullable.<string>;
	var MozForceBrokenImageIcon : Nullable.<string>;
	var MozHyphens : Nullable.<string>;
	var MozImageRegion : Nullable.<string>;
	var MozMarginEnd : Nullable.<string>;
	var MozMarginStart : Nullable.<string>;
	var MozOpacity : Nullable.<string>;
	var MozOrient : Nullable.<string>;
	var MozOutline : Nullable.<string>;
	var MozOutlineColor : Nullable.<string>;
	var MozOutlineOffset : Nullable.<string>;
	var MozOutlineRadius : Nullable.<string>;
	var MozOutlineRadiusBottomleft : Nullable.<string>;
	var MozOutlineRadiusBottomright : Nullable.<string>;
	var MozOutlineRadiusTopleft : Nullable.<string>;
	var MozOutlineRadiusTopright : Nullable.<string>;
	var MozOutlineStyle : Nullable.<string>;
	var MozOutlineWidth : Nullable.<string>;
	var MozPaddingEnd : Nullable.<string>;
	var MozPaddingStart : Nullable.<string>;
	var MozPerspective : Nullable.<string>;
	var MozPerspectiveOrigin : Nullable.<string>;
	var MozStackSizing : Nullable.<string>;
	var MozTabSize : Nullable.<string>;
	var MozTextAlignLast : Nullable.<string>;
	var MozTextBlink : Nullable.<string>;
	var MozTextDecorationColor : Nullable.<string>;
	var MozTextDecorationLine : Nullable.<string>;
	var MozTextDecorationStyle : Nullable.<string>;
	var MozTextSizeAdjust : Nullable.<string>;
	var MozTransform : Nullable.<string>;
	var MozTransformOrigin : Nullable.<string>;
	var MozTransformStyle : Nullable.<string>;
	var MozTransition : Nullable.<string>;
	var MozTransitionDelay : Nullable.<string>;
	var MozTransitionDuration : Nullable.<string>;
	var MozTransitionProperty : Nullable.<string>;
	var MozTransitionTimingFunction : Nullable.<string>;
	var MozUserFocus : Nullable.<string>;
	var MozUserInput : Nullable.<string>;
	var MozUserModify : Nullable.<string>;
	var MozUserSelect : Nullable.<string>;
	var MozWindowShadow : Nullable.<string>;
	var imeMode : Nullable.<string>;

} // end of CSSStyleDeclaration

native final __fake__ class ElementCSSInlineStyle {

	__readonly__ var style : CSSStyleDeclaration;

} // end of ElementCSSInlineStyle

native final __fake__ class Window extends EventTarget {

	function getComputedStyle(elt : Element) : CSSStyleDeclaration;
	function getComputedStyle(
		elt : Element,
		pseudoElt : string/*DOMString*/
	) : CSSStyleDeclaration;

	function matchMedia(
		media_query_list : string/*DOMString*/
	) : MediaQueryList;
	__readonly__ var screen : Screen;
	// viewport
	__readonly__ var innerWidth : int/*long*/;
	__readonly__ var innerHeight : int/*long*/;
	// viewport scrolling
	__readonly__ var scrollX : int/*long*/;
	__readonly__ var pageXOffset : int/*long*/;
	__readonly__ var scrollY : int/*long*/;
	__readonly__ var pageYOffset : int/*long*/;
	function scroll(x : int/*long*/, y : int/*long*/) : void;
	function scrollTo(x : int/*long*/, y : int/*long*/) : void;
	function scrollBy(x : int/*long*/, y : int/*long*/) : void;
	// client
	__readonly__ var screenX : int/*long*/;
	__readonly__ var screenY : int/*long*/;
	__readonly__ var outerWidth : int/*long*/;
	__readonly__ var outerHeight : int/*long*/;

	// the current browsing context
	__readonly__ var window : Window/*WindowProxy*/;
	__readonly__ var self : Window/*WindowProxy*/;
	__readonly__ var document : HTMLDocument/*Document*/;
	var name : string/*DOMString*/;
	__readonly__ var location : Location;
	__readonly__ var history : History;
	__readonly__ var locationbar : BarProp;
	__readonly__ var menubar : BarProp;
	__readonly__ var personalbar : BarProp;
	__readonly__ var scrollbars : BarProp;
	__readonly__ var statusbar : BarProp;
	__readonly__ var toolbar : BarProp;
	var status : string/*DOMString*/;
	function close() : void;
	function stop() : void;
	function focus() : void;
	function blur() : void;
	// other browsing contexts
	__readonly__ var frames : Window/*WindowProxy*/;
	__readonly__ var length : int/*unsigned long*/;
	__readonly__ var top : Window/*WindowProxy*/;
	var opener : Window/*WindowProxy?*/;
	__readonly__ var parent : Window/*WindowProxy*/;
	__readonly__ var frameElement : Element;
	function open() : Window/*WindowProxy*/;
	function open(url : string/*DOMString*/) : Window/*WindowProxy*/;
	function open(
		url : string/*DOMString*/,
		target : string/*DOMString*/
	) : Window/*WindowProxy*/;
	function open(
		url : string/*DOMString*/,
		target : string/*DOMString*/,
		features : string/*DOMString*/
	) : Window/*WindowProxy*/;
	function open(
		url : string/*DOMString*/,
		target : string/*DOMString*/,
		features : string/*DOMString*/,
		replace : boolean
	) : Window/*WindowProxy*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Window/*WindowProxy*/;
	function __native_index_operator__(
		name : string/*DOMString*/
	) : Object/*object*/;
	// the user agent
	__readonly__ var navigator : Navigator;
	__readonly__ var external : External;
	__readonly__ var applicationCache : ApplicationCache;
	// user prompts
	function alert(message : string/*DOMString*/) : void;
	function confirm(message : string/*DOMString*/) : boolean;
	function prompt(
		message : string/*DOMString*/
	) : Nullable.<string>/*DOMString?*/;
	function prompt(
		message : string/*DOMString*/,
		default : string/*DOMString*/
	) : Nullable.<string>/*DOMString?*/;
	function print() : void;
	function showModalDialog(
		url : string/*DOMString*/
	) : variant/*any*/;
	function showModalDialog(
		url : string/*DOMString*/,
		argument : variant/*any*/
	) : variant/*any*/;
	// event handler IDL attributes
	var onabort : function(:Event):void/*Function?*/;
	var onafterprint : function(:Event):void/*Function?*/;
	var onbeforeprint : function(:Event):void/*Function?*/;
	var onbeforeunload : function(:Event):void/*Function?*/;
	var onblur : function(:Event):void/*Function?*/;
	var oncanplay : function(:Event):void/*Function?*/;
	var oncanplaythrough : function(:Event):void/*Function?*/;
	var onchange : function(:Event):void/*Function?*/;
	var onclick : function(:Event):void/*Function?*/;
	var oncontextmenu : function(:Event):void/*Function?*/;
	var oncuechange : function(:Event):void/*Function?*/;
	var ondblclick : function(:Event):void/*Function?*/;
	var ondrag : function(:Event):void/*Function?*/;
	var ondragend : function(:Event):void/*Function?*/;
	var ondragenter : function(:Event):void/*Function?*/;
	var ondragleave : function(:Event):void/*Function?*/;
	var ondragover : function(:Event):void/*Function?*/;
	var ondragstart : function(:Event):void/*Function?*/;
	var ondrop : function(:Event):void/*Function?*/;
	var ondurationchange : function(:Event):void/*Function?*/;
	var onemptied : function(:Event):void/*Function?*/;
	var onended : function(:Event):void/*Function?*/;
	var onerror : function(:Event):void/*Function?*/;
	var onfocus : function(:Event):void/*Function?*/;
	var onhashchange : function(:Event):void/*Function?*/;
	var oninput : function(:Event):void/*Function?*/;
	var oninvalid : function(:Event):void/*Function?*/;
	var onkeydown : function(:Event):void/*Function?*/;
	var onkeypress : function(:Event):void/*Function?*/;
	var onkeyup : function(:Event):void/*Function?*/;
	var onload : function(:Event):void/*Function?*/;
	var onloadeddata : function(:Event):void/*Function?*/;
	var onloadedmetadata : function(:Event):void/*Function?*/;
	var onloadstart : function(:Event):void/*Function?*/;
	var onmessage : function(:Event):void/*Function?*/;
	var onmousedown : function(:Event):void/*Function?*/;
	var onmousemove : function(:Event):void/*Function?*/;
	var onmouseout : function(:Event):void/*Function?*/;
	var onmouseover : function(:Event):void/*Function?*/;
	var onmouseup : function(:Event):void/*Function?*/;
	var onmousewheel : function(:Event):void/*Function?*/;
	var onoffline : function(:Event):void/*Function?*/;
	var ononline : function(:Event):void/*Function?*/;
	var onpause : function(:Event):void/*Function?*/;
	var onplay : function(:Event):void/*Function?*/;
	var onplaying : function(:Event):void/*Function?*/;
	var onpagehide : function(:Event):void/*Function?*/;
	var onpageshow : function(:Event):void/*Function?*/;
	var onpopstate : function(:Event):void/*Function?*/;
	var onprogress : function(:Event):void/*Function?*/;
	var onratechange : function(:Event):void/*Function?*/;
	var onreset : function(:Event):void/*Function?*/;
	var onresize : function(:Event):void/*Function?*/;
	var onscroll : function(:Event):void/*Function?*/;
	var onseeked : function(:Event):void/*Function?*/;
	var onseeking : function(:Event):void/*Function?*/;
	var onselect : function(:Event):void/*Function?*/;
	var onshow : function(:Event):void/*Function?*/;
	var onstalled : function(:Event):void/*Function?*/;
	var onstorage : function(:Event):void/*Function?*/;
	var onsubmit : function(:Event):void/*Function?*/;
	var onsuspend : function(:Event):void/*Function?*/;
	var ontimeupdate : function(:Event):void/*Function?*/;
	var onunload : function(:Event):void/*Function?*/;
	var onvolumechange : function(:Event):void/*Function?*/;
	var onwaiting : function(:Event):void/*Function?*/;

	// implements WindowBase64

	function btoa(btoa : string/*DOMString*/) : string/*DOMString*/;
	function atob(atob : string/*DOMString*/) : string/*DOMString*/;

	// implements WindowSessionStorage

	__readonly__ var sessionStorage : Storage;

	// implements WindowLocalStorage

	__readonly__ var localStorage : Storage;

	function setTimeout(
		handler : function():void/*TimerHandler*/
	) : int/*long*/;
	function setTimeout(
		handler : function():void/*TimerHandler*/,
		timeout : int/*long*/
	) : int/*long*/;
	function clearTimeout(handle : int/*long*/) : void;
	function setInterval(
		handler : function():void/*TimerHandler*/
	) : int/*long*/;
	function setInterval(
		handler : function():void/*TimerHandler*/,
		timeout : int/*long*/
	) : int/*long*/;
	function clearInterval(handle : int/*long*/) : void;

	// implements WindowAnimationTiming

	function requestAnimationFrame(
		callback : function(time:number/*DOMTimeStamp*/):void/*FrameRequestCallback*/
	) : int/*long*/;
	function cancelAnimationFrame(handle : int/*long*/) : void;
	// vender's extension
	function webkitRequestAnimationFrame(
		callback : function(time:number/*DOMTimeStamp*/):void/*FrameRequestCallback*/
	) : int/*long*/;
	function webkitCancelAnimationFrame(handle : int/*long*/) : void;
	function mozRequestAnimationFrame(
		callback : function(time:number/*DOMTimeStamp*/):void/*FrameRequestCallback*/
	) : int/*long*/;
	function mozCancelAnimationFrame(handle : int/*long*/) : void;

} // end of Window

native final class MediaQueryList {

	__readonly__ var media : string/*DOMString*/;
	__readonly__ var matches : boolean;
	function addListener(
		listener : function(:MediaQueryList):void/*MediaQueryListListener*/
	) : void;
	function removeListener(
		listener : function(:MediaQueryList):void/*MediaQueryListListener*/
	) : void;

} // end of MediaQueryList

// alias MediaQueryListListener = function(mql:MediaQueryList):void

native final class Screen {

	__readonly__ var availWidth : int/*unsigned long*/;
	__readonly__ var availHeight : int/*unsigned long*/;
	__readonly__ var width : int/*unsigned long*/;
	__readonly__ var height : int/*unsigned long*/;
	__readonly__ var colorDepth : int/*unsigned long*/;
	__readonly__ var pixelDepth : int/*unsigned long*/;

} // end of Screen

native final class CaretPosition {

	__readonly__ var offsetNode : Node;
	__readonly__ var offset : int/*unsigned long*/;

} // end of CaretPosition

native class HTMLElement extends Element {

	__readonly__ var offsetParent : Element;
	__readonly__ var offsetTop : int/*long*/;
	__readonly__ var offsetLeft : int/*long*/;
	__readonly__ var offsetWidth : int/*long*/;
	__readonly__ var offsetHeight : int/*long*/;

	// metadata attributes
	var title : string/*DOMString*/;
	var lang : string/*DOMString*/;
	var translate : boolean;
	var dir : string/*DOMString*/;
	// inherits var className : string/*DOMString*/;
	// inherits __readonly__ var classList : DOMTokenList;
	__readonly__ var dataset : DOMStringMap;
	// user interaction
	var hidden : boolean;
	function click() : void;
	var tabIndex : int/*long*/;
	function focus() : void;
	function blur() : void;
	var accessKey : string/*DOMString*/;
	__readonly__ var accessKeyLabel : string/*DOMString*/;
	var draggable : boolean;
	__readonly__ var dropzone : DOMSettableTokenList;
	var contentEditable : string/*DOMString*/;
	__readonly__ var isContentEditable : boolean;
	var contextMenu : HTMLMenuElement;
	var spellcheck : boolean;
	// command API
	__readonly__ var commandType : Nullable.<string>/*DOMString?*/;
	__readonly__ var commandLabel : Nullable.<string>/*DOMString?*/;
	__readonly__ var commandIcon : Nullable.<string>/*DOMString?*/;
	__readonly__ var commandHidden : Nullable.<boolean>;
	__readonly__ var commandDisabled : Nullable.<boolean>;
	__readonly__ var commandChecked : Nullable.<boolean>;
	// styling
	__readonly__ var style : CSSStyleDeclaration;
	// event handler IDL attributes
	var onabort : function(:Event):void/*Function?*/;
	var onblur : function(:Event):void/*Function?*/;
	var oncanplay : function(:Event):void/*Function?*/;
	var oncanplaythrough : function(:Event):void/*Function?*/;
	var onchange : function(:Event):void/*Function?*/;
	var onclick : function(:Event):void/*Function?*/;
	var oncontextmenu : function(:Event):void/*Function?*/;
	var oncuechange : function(:Event):void/*Function?*/;
	var ondblclick : function(:Event):void/*Function?*/;
	var ondrag : function(:Event):void/*Function?*/;
	var ondragend : function(:Event):void/*Function?*/;
	var ondragenter : function(:Event):void/*Function?*/;
	var ondragleave : function(:Event):void/*Function?*/;
	var ondragover : function(:Event):void/*Function?*/;
	var ondragstart : function(:Event):void/*Function?*/;
	var ondrop : function(:Event):void/*Function?*/;
	var ondurationchange : function(:Event):void/*Function?*/;
	var onemptied : function(:Event):void/*Function?*/;
	var onended : function(:Event):void/*Function?*/;
	var onerror : function(:Event):void/*Function?*/;
	var onfocus : function(:Event):void/*Function?*/;
	var oninput : function(:Event):void/*Function?*/;
	var oninvalid : function(:Event):void/*Function?*/;
	var onkeydown : function(:Event):void/*Function?*/;
	var onkeypress : function(:Event):void/*Function?*/;
	var onkeyup : function(:Event):void/*Function?*/;
	var onload : function(:Event):void/*Function?*/;
	var onloadeddata : function(:Event):void/*Function?*/;
	var onloadedmetadata : function(:Event):void/*Function?*/;
	var onloadstart : function(:Event):void/*Function?*/;
	var onmousedown : function(:Event):void/*Function?*/;
	var onmousemove : function(:Event):void/*Function?*/;
	var onmouseout : function(:Event):void/*Function?*/;
	var onmouseover : function(:Event):void/*Function?*/;
	var onmouseup : function(:Event):void/*Function?*/;
	var onmousewheel : function(:Event):void/*Function?*/;
	var onpause : function(:Event):void/*Function?*/;
	var onplay : function(:Event):void/*Function?*/;
	var onplaying : function(:Event):void/*Function?*/;
	var onprogress : function(:Event):void/*Function?*/;
	var onratechange : function(:Event):void/*Function?*/;
	var onreset : function(:Event):void/*Function?*/;
	var onscroll : function(:Event):void/*Function?*/;
	var onseeked : function(:Event):void/*Function?*/;
	var onseeking : function(:Event):void/*Function?*/;
	var onselect : function(:Event):void/*Function?*/;
	var onshow : function(:Event):void/*Function?*/;
	var onstalled : function(:Event):void/*Function?*/;
	var onsubmit : function(:Event):void/*Function?*/;
	var onsuspend : function(:Event):void/*Function?*/;
	var ontimeupdate : function(:Event):void/*Function?*/;
	var onvolumechange : function(:Event):void/*Function?*/;
	var onwaiting : function(:Event):void/*Function?*/;

} // end of HTMLElement

native final class ClientRectList {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : ClientRect;
	/* getter */
	function item(index : int/*unsigned long*/) : ClientRect;

} // end of ClientRectList

native final class ClientRect {

	__readonly__ var top : number/*float*/;
	__readonly__ var right : number/*float*/;
	__readonly__ var bottom : number/*float*/;
	__readonly__ var left : number/*float*/;
	__readonly__ var width : number/*float*/;
	__readonly__ var height : number/*float*/;

} // end of ClientRect

native final class HTMLAllCollection extends HTMLCollection {

	// inherits length and item(unsigned long index)
	function item(name : string/*DOMString*/) : Object/*object?*/;
	// inherits function __native_index_operator__(name : string/*DOMString*/) : Object/*object?*/;
	/* legacycaller getter */
	// inherits function namedItem(name : string/*DOMString*/) : Object/*object?*/;
	// overrides inherited namedItem()
	function tags(tagName : string/*DOMString*/) : HTMLAllCollection;

} // end of HTMLAllCollection

native final class HTMLFormControlsCollection extends HTMLCollection {

	// inherits length and item()
	// inherits function __native_index_operator__(name : string/*DOMString*/) : Object/*object?*/;
	/* legacycaller getter */
	// inherits function namedItem(name : string/*DOMString*/) : Object/*object?*/;
	// overrides inherited namedItem()

} // end of HTMLFormControlsCollection

native final class RadioNodeList extends NodeList {

	var value : string/*DOMString*/;

} // end of RadioNodeList

native final class HTMLOptionsCollection extends HTMLCollection {

	// inherits item()
	// inherits var length : int/*unsigned long*/;
	// overrides inherited length
	// inherits function __native_index_operator__(name : string/*DOMString*/) : Object/*object?*/;
	/* legacycaller getter */
	// inherits function namedItem(name : string/*DOMString*/) : Object/*object?*/;
	// overrides inherited namedItem()
	function add(element : HTMLOptionElement) : void;
	function add(
		element : HTMLOptionElement,
		before : HTMLElement
	) : void;
	function add(
		element : HTMLOptionElement,
		before : int/*long*/
	) : void;
	function add(element : HTMLOptGroupElement) : void;
	function add(
		element : HTMLOptGroupElement,
		before : HTMLElement
	) : void;
	function add(
		element : HTMLOptGroupElement,
		before : int/*long*/
	) : void;
	function remove(index : int/*long*/) : void;
	var selectedIndex : int/*long*/;

} // end of HTMLOptionsCollection

native final class DOMStringMap {

	function __native_index_operator__(
		name : string/*DOMString*/
	) : Nullable.<string>/*DOMString*/;

} // end of DOMStringMap

native __fake__ class Transferable {
}

native final class HTMLDocument extends Document {

	// resource metadata management
	__readonly__ var location : Location;
	// inherits __readonly__ var URL : string/*DOMString*/;
	var domain : string/*DOMString*/;
	__readonly__ var referrer : string/*DOMString*/;
	var cookie : string/*DOMString*/;
	__readonly__ var lastModified : string/*DOMString*/;
	__readonly__ var readyState : string/*DOMString*/;
	// DOM tree accessors
	function __native_index_operator__(
		name : string/*DOMString*/
	) : Object/*object*/;
	var title : string/*DOMString*/;
	var dir : string/*DOMString*/;
	var body : HTMLElement;
	__readonly__ var head : HTMLHeadElement;
	__readonly__ var images : HTMLCollection;
	__readonly__ var embeds : HTMLCollection;
	__readonly__ var plugins : HTMLCollection;
	__readonly__ var links : HTMLCollection;
	__readonly__ var forms : HTMLCollection;
	__readonly__ var scripts : HTMLCollection;
	function getElementsByName(
		elementName : string/*DOMString*/
	) : NodeList;
	// dynamic markup insertion
	function open() : HTMLDocument/*Document*/;
	function open(
		type : string/*DOMString*/
	) : HTMLDocument/*Document*/;
	function open(
		type : string/*DOMString*/,
		replace : string/*DOMString*/
	) : HTMLDocument/*Document*/;
	function open(
		url : string/*DOMString*/,
		name : string/*DOMString*/,
		features : string/*DOMString*/
	) : Window/*WindowProxy*/;
	function open(
		url : string/*DOMString*/,
		name : string/*DOMString*/,
		features : string/*DOMString*/,
		replace : boolean
	) : Window/*WindowProxy*/;
	function close() : void;
	function write(...text : string/*DOMString...*/) : void;
	function writeln(...text : string/*DOMString...*/) : void;
	// user interaction
	__readonly__ var defaultView : Window/*WindowProxy?*/;
	__readonly__ var activeElement : Element;
	function hasFocus() : boolean;
	var designMode : string/*DOMString*/;
	function execCommand(commandId : string/*DOMString*/) : boolean;
	function execCommand(
		commandId : string/*DOMString*/,
		showUI : boolean
	) : boolean;
	function execCommand(
		commandId : string/*DOMString*/,
		showUI : boolean,
		value : string/*DOMString*/
	) : boolean;
	function queryCommandEnabled(
		commandId : string/*DOMString*/
	) : boolean;
	function queryCommandIndeterm(
		commandId : string/*DOMString*/
	) : boolean;
	function queryCommandState(
		commandId : string/*DOMString*/
	) : boolean;
	function queryCommandSupported(
		commandId : string/*DOMString*/
	) : boolean;
	function queryCommandValue(
		commandId : string/*DOMString*/
	) : string/*DOMString*/;
	__readonly__ var commands : HTMLCollection;
	// event handler IDL attributes
	var onabort : function(:Event):void/*Function?*/;
	var onblur : function(:Event):void/*Function?*/;
	var oncanplay : function(:Event):void/*Function?*/;
	var oncanplaythrough : function(:Event):void/*Function?*/;
	var onchange : function(:Event):void/*Function?*/;
	var onclick : function(:Event):void/*Function?*/;
	var oncontextmenu : function(:Event):void/*Function?*/;
	var oncuechange : function(:Event):void/*Function?*/;
	var ondblclick : function(:Event):void/*Function?*/;
	var ondrag : function(:Event):void/*Function?*/;
	var ondragend : function(:Event):void/*Function?*/;
	var ondragenter : function(:Event):void/*Function?*/;
	var ondragleave : function(:Event):void/*Function?*/;
	var ondragover : function(:Event):void/*Function?*/;
	var ondragstart : function(:Event):void/*Function?*/;
	var ondrop : function(:Event):void/*Function?*/;
	var ondurationchange : function(:Event):void/*Function?*/;
	var onemptied : function(:Event):void/*Function?*/;
	var onended : function(:Event):void/*Function?*/;
	var onerror : function(:Event):void/*Function?*/;
	var onfocus : function(:Event):void/*Function?*/;
	var oninput : function(:Event):void/*Function?*/;
	var oninvalid : function(:Event):void/*Function?*/;
	var onkeydown : function(:Event):void/*Function?*/;
	var onkeypress : function(:Event):void/*Function?*/;
	var onkeyup : function(:Event):void/*Function?*/;
	var onload : function(:Event):void/*Function?*/;
	var onloadeddata : function(:Event):void/*Function?*/;
	var onloadedmetadata : function(:Event):void/*Function?*/;
	var onloadstart : function(:Event):void/*Function?*/;
	var onmousedown : function(:Event):void/*Function?*/;
	var onmousemove : function(:Event):void/*Function?*/;
	var onmouseout : function(:Event):void/*Function?*/;
	var onmouseover : function(:Event):void/*Function?*/;
	var onmouseup : function(:Event):void/*Function?*/;
	var onmousewheel : function(:Event):void/*Function?*/;
	var onpause : function(:Event):void/*Function?*/;
	var onplay : function(:Event):void/*Function?*/;
	var onplaying : function(:Event):void/*Function?*/;
	var onprogress : function(:Event):void/*Function?*/;
	var onratechange : function(:Event):void/*Function?*/;
	var onreset : function(:Event):void/*Function?*/;
	var onscroll : function(:Event):void/*Function?*/;
	var onseeked : function(:Event):void/*Function?*/;
	var onseeking : function(:Event):void/*Function?*/;
	var onselect : function(:Event):void/*Function?*/;
	var onshow : function(:Event):void/*Function?*/;
	var onstalled : function(:Event):void/*Function?*/;
	var onsubmit : function(:Event):void/*Function?*/;
	var onsuspend : function(:Event):void/*Function?*/;
	var ontimeupdate : function(:Event):void/*Function?*/;
	var onvolumechange : function(:Event):void/*Function?*/;
	var onwaiting : function(:Event):void/*Function?*/;
	// special event handler IDL attributes that only apply to Document objects
	var onreadystatechange : function(:Event):void/*Function?*/;

	var fgColor : string/*DOMString*/;
	var linkColor : string/*DOMString*/;
	var vlinkColor : string/*DOMString*/;
	var alinkColor : string/*DOMString*/;
	var bgColor : string/*DOMString*/;
	__readonly__ var anchors : HTMLCollection;
	__readonly__ var applets : HTMLCollection;
	function clear() : void;
	__readonly__ var all : HTMLAllCollection;

} // end of HTMLDocument

native final class HTMLUnknownElement extends HTMLElement {
}

native final class HTMLHtmlElement extends HTMLElement {

	var version : string/*DOMString*/;

} // end of HTMLHtmlElement

native final class HTMLHeadElement extends HTMLElement {
}

native final class HTMLTitleElement extends HTMLElement {

	var text : string/*DOMString*/;

} // end of HTMLTitleElement

native final class HTMLBaseElement extends HTMLElement {

	var href : string/*DOMString*/;
	var target : string/*DOMString*/;

} // end of HTMLBaseElement

native final class HTMLLinkElement extends HTMLElement {

	var disabled : boolean;
	var href : string/*DOMString*/;
	var rel : string/*DOMString*/;
	__readonly__ var relList : DOMTokenList;
	var media : string/*DOMString*/;
	var hreflang : string/*DOMString*/;
	var type : string/*DOMString*/;
	__readonly__ var sizes : DOMSettableTokenList;

	var charset : string/*DOMString*/;
	var rev : string/*DOMString*/;
	var target : string/*DOMString*/;

	// implements LinkStyle

	__readonly__ var sheet : StyleSheet;

} // end of HTMLLinkElement

native final class HTMLMetaElement extends HTMLElement {

	var name : string/*DOMString*/;
	var httpEquiv : string/*DOMString*/;
	var content : string/*DOMString*/;

	var scheme : string/*DOMString*/;

} // end of HTMLMetaElement

native final class HTMLStyleElement extends HTMLElement {

	var disabled : boolean;
	var media : string/*DOMString*/;
	var type : string/*DOMString*/;
	var scoped : boolean;

	// implements LinkStyle

	__readonly__ var sheet : StyleSheet;

} // end of HTMLStyleElement

native final class HTMLScriptElement extends HTMLElement {

	var src : string/*DOMString*/;
	var async : boolean;
	var defer : boolean;
	var type : string/*DOMString*/;
	var charset : string/*DOMString*/;
	var text : string/*DOMString*/;

	var event : string/*DOMString*/;
	var htmlFor : string/*DOMString*/;

} // end of HTMLScriptElement

native final class HTMLBodyElement extends HTMLElement {

	var onafterprint : function(:Event):void/*Function?*/;
	var onbeforeprint : function(:Event):void/*Function?*/;
	var onbeforeunload : function(:Event):void/*Function?*/;
	// inherits var onblur : function(:Event):void/*Function?*/;
	// inherits var onerror : function(:Event):void/*Function?*/;
	// inherits var onfocus : function(:Event):void/*Function?*/;
	var onhashchange : function(:Event):void/*Function?*/;
	// inherits var onload : function(:Event):void/*Function?*/;
	var onmessage : function(:Event):void/*Function?*/;
	var onoffline : function(:Event):void/*Function?*/;
	var ononline : function(:Event):void/*Function?*/;
	var onpopstate : function(:Event):void/*Function?*/;
	var onpagehide : function(:Event):void/*Function?*/;
	var onpageshow : function(:Event):void/*Function?*/;
	var onresize : function(:Event):void/*Function?*/;
	// inherits var onscroll : function(:Event):void/*Function?*/;
	var onstorage : function(:Event):void/*Function?*/;
	var onunload : function(:Event):void/*Function?*/;

	var text : string/*DOMString*/;
	var link : string/*DOMString*/;
	var vLink : string/*DOMString*/;
	var aLink : string/*DOMString*/;
	var bgColor : string/*DOMString*/;
	var background : string/*DOMString*/;

} // end of HTMLBodyElement

native final class HTMLHeadingElement extends HTMLElement {

	var align : string/*DOMString*/;

} // end of HTMLHeadingElement

native final class HTMLParagraphElement extends HTMLElement {

	var align : string/*DOMString*/;

} // end of HTMLParagraphElement

native final class HTMLHRElement extends HTMLElement {

	var align : string/*DOMString*/;
	var color : string/*DOMString*/;
	var noShade : boolean;
	var size : string/*DOMString*/;
	var width : string/*DOMString*/;

} // end of HTMLHRElement

native final class HTMLPreElement extends HTMLElement {

	var width : int/*long*/;

} // end of HTMLPreElement

native final class HTMLQuoteElement extends HTMLElement {

	var cite : string/*DOMString*/;

} // end of HTMLQuoteElement

native final class HTMLOListElement extends HTMLElement {

	var reversed : boolean;
	var start : int/*long*/;
	var type : string/*DOMString*/;

	var compact : boolean;

} // end of HTMLOListElement

native final class HTMLUListElement extends HTMLElement {

	var compact : boolean;
	var type : string/*DOMString*/;

} // end of HTMLUListElement

native final class HTMLLIElement extends HTMLElement {

	var value : int/*long*/;

	var type : string/*DOMString*/;

} // end of HTMLLIElement

native final class HTMLDListElement extends HTMLElement {

	var compact : boolean;

} // end of HTMLDListElement

native final class HTMLDivElement extends HTMLElement {

	var align : string/*DOMString*/;

} // end of HTMLDivElement

native final class HTMLAnchorElement extends HTMLElement {

	var href : string/*DOMString*/;
	var target : string/*DOMString*/;
	var rel : string/*DOMString*/;
	__readonly__ var relList : DOMTokenList;
	var media : string/*DOMString*/;
	var hreflang : string/*DOMString*/;
	var type : string/*DOMString*/;
	var text : string/*DOMString*/;
	// URL decomposition IDL attributes
	var protocol : string/*DOMString*/;
	var host : string/*DOMString*/;
	var hostname : string/*DOMString*/;
	var port : string/*DOMString*/;
	var pathname : string/*DOMString*/;
	var search : string/*DOMString*/;
	var hash : string/*DOMString*/;

	var coords : string/*DOMString*/;
	var charset : string/*DOMString*/;
	var name : string/*DOMString*/;
	var rev : string/*DOMString*/;
	var shape : string/*DOMString*/;

} // end of HTMLAnchorElement

native final class HTMLTimeElement extends HTMLElement {

	var datetime : string/*DOMString*/;

} // end of HTMLTimeElement

native final class HTMLSpanElement extends HTMLElement {
}

native final class HTMLBRElement extends HTMLElement {

	var clear : string/*DOMString*/;

} // end of HTMLBRElement

native final class HTMLModElement extends HTMLElement {

	var cite : string/*DOMString*/;
	var dateTime : string/*DOMString*/;

} // end of HTMLModElement

native final class HTMLImageElement extends HTMLElement {

	var alt : string/*DOMString*/;
	var src : string/*DOMString*/;
	var crossOrigin : string/*DOMString*/;
	var useMap : string/*DOMString*/;
	var isMap : boolean;
	var width : int/*unsigned long*/;
	var height : int/*unsigned long*/;
	__readonly__ var naturalWidth : int/*unsigned long*/;
	__readonly__ var naturalHeight : int/*unsigned long*/;
	__readonly__ var complete : boolean;

	var name : string/*DOMString*/;
	var align : string/*DOMString*/;
	var hspace : int/*unsigned long*/;
	var vspace : int/*unsigned long*/;
	var longDesc : string/*DOMString*/;
	var border : string/*DOMString*/;

} // end of HTMLImageElement

native final class HTMLIFrameElement extends HTMLElement {

	var src : string/*DOMString*/;
	var srcdoc : string/*DOMString*/;
	var name : string/*DOMString*/;
	__readonly__ var sandbox : DOMSettableTokenList;
	var seamless : boolean;
	var width : string/*DOMString*/;
	var height : string/*DOMString*/;
	__readonly__ var contentDocument : HTMLDocument/*Document?*/;
	__readonly__ var contentWindow : Window/*WindowProxy?*/;

	var align : string/*DOMString*/;
	var scrolling : string/*DOMString*/;
	var frameBorder : string/*DOMString*/;
	var longDesc : string/*DOMString*/;
	var marginHeight : string/*DOMString*/;
	var marginWidth : string/*DOMString*/;

} // end of HTMLIFrameElement

native final class HTMLEmbedElement extends HTMLElement {

	var src : string/*DOMString*/;
	var type : string/*DOMString*/;
	var width : string/*DOMString*/;
	var height : string/*DOMString*/;

	var align : string/*DOMString*/;
	var name : string/*DOMString*/;

} // end of HTMLEmbedElement

native final class HTMLObjectElement extends HTMLElement {

	var data : string/*DOMString*/;
	var type : string/*DOMString*/;
	var typeMustMatch : boolean;
	var name : string/*DOMString*/;
	var useMap : string/*DOMString*/;
	__readonly__ var form : HTMLFormElement;
	var width : string/*DOMString*/;
	var height : string/*DOMString*/;
	__readonly__ var contentDocument : HTMLDocument/*Document?*/;
	__readonly__ var contentWindow : Window/*WindowProxy?*/;
	__readonly__ var willValidate : boolean;
	__readonly__ var validity : ValidityState;
	__readonly__ var validationMessage : string/*DOMString*/;
	function checkValidity() : boolean;
	function setCustomValidity(error : string/*DOMString*/) : void;

	var align : string/*DOMString*/;
	var archive : string/*DOMString*/;
	var code : string/*DOMString*/;
	var declare : boolean;
	var hspace : int/*unsigned long*/;
	var standby : string/*DOMString*/;
	var vspace : int/*unsigned long*/;
	var codeBase : string/*DOMString*/;
	var codeType : string/*DOMString*/;
	var border : string/*DOMString*/;

} // end of HTMLObjectElement

native final class HTMLParamElement extends HTMLElement {

	var name : string/*DOMString*/;
	var value : string/*DOMString*/;

	var type : string/*DOMString*/;
	var valueType : string/*DOMString*/;

} // end of HTMLParamElement

native final class HTMLVideoElement extends HTMLMediaElement {

	var width : int/*unsigned long*/;
	var height : int/*unsigned long*/;
	__readonly__ var videoWidth : int/*unsigned long*/;
	__readonly__ var videoHeight : int/*unsigned long*/;
	var poster : string/*DOMString*/;

} // end of HTMLVideoElement

native final class HTMLAudioElement extends HTMLMediaElement {
}

native final class HTMLSourceElement extends HTMLElement {

	var src : string/*DOMString*/;
	var type : string/*DOMString*/;
	var media : string/*DOMString*/;

} // end of HTMLSourceElement

native final class HTMLTrackElement extends HTMLElement {

	var kind : string/*DOMString*/;
	var src : string/*DOMString*/;
	var srclang : string/*DOMString*/;
	var label : string/*DOMString*/;
	var default : boolean;
	static __readonly__ var NONE : int/*unsigned short*/;
	       __readonly__ var NONE : int/*unsigned short*/;
	static __readonly__ var LOADING : int/*unsigned short*/;
	       __readonly__ var LOADING : int/*unsigned short*/;
	static __readonly__ var LOADED : int/*unsigned short*/;
	       __readonly__ var LOADED : int/*unsigned short*/;
	static __readonly__ var ERROR : int/*unsigned short*/;
	       __readonly__ var ERROR : int/*unsigned short*/;
	__readonly__ var readyState : int/*unsigned short*/;
	__readonly__ var track : TextTrack;

} // end of HTMLTrackElement

native class HTMLMediaElement extends HTMLElement {

	// error state
	__readonly__ var error : MediaError;
	// network state
	var src : string/*DOMString*/;
	__readonly__ var currentSrc : string/*DOMString*/;
	var crossOrigin : string/*DOMString*/;
	static __readonly__ var NETWORK_EMPTY : int/*unsigned short*/;
	       __readonly__ var NETWORK_EMPTY : int/*unsigned short*/;
	static __readonly__ var NETWORK_IDLE : int/*unsigned short*/;
	       __readonly__ var NETWORK_IDLE : int/*unsigned short*/;
	static __readonly__ var NETWORK_LOADING : int/*unsigned short*/;
	       __readonly__ var NETWORK_LOADING : int/*unsigned short*/;
	static __readonly__ var NETWORK_NO_SOURCE : int/*unsigned short*/;
	       __readonly__ var NETWORK_NO_SOURCE : int/*unsigned short*/;
	__readonly__ var networkState : int/*unsigned short*/;
	var preload : string/*DOMString*/;
	__readonly__ var buffered : TimeRanges;
	function load() : void;
	function canPlayType(
		type : string/*DOMString*/
	) : string/*DOMString*/;
	// ready state
	static __readonly__ var HAVE_NOTHING : int/*unsigned short*/;
	       __readonly__ var HAVE_NOTHING : int/*unsigned short*/;
	static __readonly__ var HAVE_METADATA : int/*unsigned short*/;
	       __readonly__ var HAVE_METADATA : int/*unsigned short*/;
	static __readonly__ var HAVE_CURRENT_DATA : int/*unsigned short*/;
	       __readonly__ var HAVE_CURRENT_DATA : int/*unsigned short*/;
	static __readonly__ var HAVE_FUTURE_DATA : int/*unsigned short*/;
	       __readonly__ var HAVE_FUTURE_DATA : int/*unsigned short*/;
	static __readonly__ var HAVE_ENOUGH_DATA : int/*unsigned short*/;
	       __readonly__ var HAVE_ENOUGH_DATA : int/*unsigned short*/;
	__readonly__ var readyState : int/*unsigned short*/;
	__readonly__ var seeking : boolean;
	// playback state
	var currentTime : number/*double*/;
	__readonly__ var initialTime : number/*double*/;
	__readonly__ var duration : number/*double*/;
	__readonly__ var startOffsetTime : Date;
	__readonly__ var paused : boolean;
	var defaultPlaybackRate : number/*double*/;
	var playbackRate : number/*double*/;
	__readonly__ var played : TimeRanges;
	__readonly__ var seekable : TimeRanges;
	__readonly__ var ended : boolean;
	var autoplay : boolean;
	var loop : boolean;
	function play() : void;
	function pause() : void;
	// media controller
	var mediaGroup : string/*DOMString*/;
	var controller : MediaController;
	// controls
	var controls : boolean;
	var volume : number/*double*/;
	var muted : boolean;
	var defaultMuted : boolean;
	// tracks
	__readonly__ var audioTracks : AudioTrackList;
	__readonly__ var videoTracks : VideoTrackList;
	__readonly__ var textTracks : TextTrackList;
	function addTextTrack(kind : string/*DOMString*/) : TextTrack;
	function addTextTrack(
		kind : string/*DOMString*/,
		label : string/*DOMString*/
	) : TextTrack;
	function addTextTrack(
		kind : string/*DOMString*/,
		label : string/*DOMString*/,
		language : string/*DOMString*/
	) : TextTrack;

} // end of HTMLMediaElement

native final class MediaError {

	static __readonly__ var MEDIA_ERR_ABORTED : int/*unsigned short*/;
	       __readonly__ var MEDIA_ERR_ABORTED : int/*unsigned short*/;
	static __readonly__ var MEDIA_ERR_NETWORK : int/*unsigned short*/;
	       __readonly__ var MEDIA_ERR_NETWORK : int/*unsigned short*/;
	static __readonly__ var MEDIA_ERR_DECODE : int/*unsigned short*/;
	       __readonly__ var MEDIA_ERR_DECODE : int/*unsigned short*/;
	static __readonly__ var MEDIA_ERR_SRC_NOT_SUPPORTED : int/*unsigned short*/;
	       __readonly__ var MEDIA_ERR_SRC_NOT_SUPPORTED : int/*unsigned short*/;
	__readonly__ var code : int/*unsigned short*/;

} // end of MediaError

native final class AudioTrackList extends EventTarget {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : AudioTrack;
	function getTrackById(id : string/*DOMString*/) : AudioTrack;
	var onchange : function(:Event):void/*Function?*/;
	var onaddtrack : function(:Event):void/*Function?*/;

} // end of AudioTrackList

native final class AudioTrack {

	__readonly__ var id : string/*DOMString*/;
	__readonly__ var kind : string/*DOMString*/;
	__readonly__ var label : string/*DOMString*/;
	__readonly__ var language : string/*DOMString*/;
	var enabled : boolean;

} // end of AudioTrack

native final class VideoTrackList extends EventTarget {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : VideoTrack;
	function getTrackById(id : string/*DOMString*/) : VideoTrack;
	__readonly__ var selectedIndex : int/*long*/;
	var onchange : function(:Event):void/*Function?*/;
	var onaddtrack : function(:Event):void/*Function?*/;

} // end of VideoTrackList

native final class VideoTrack {

	__readonly__ var id : string/*DOMString*/;
	__readonly__ var kind : string/*DOMString*/;
	__readonly__ var label : string/*DOMString*/;
	__readonly__ var language : string/*DOMString*/;
	var selected : boolean;

} // end of VideoTrack

native final class MediaController {

	function constructor();

	__readonly__ var buffered : TimeRanges;
	__readonly__ var seekable : TimeRanges;
	__readonly__ var duration : number/*double*/;
	var currentTime : number/*double*/;
	__readonly__ var paused : boolean;
	__readonly__ var played : TimeRanges;
	function play() : void;
	function pause() : void;
	var defaultPlaybackRate : number/*double*/;
	var playbackRate : number/*double*/;
	var volume : number/*double*/;
	var muted : boolean;
	var onemptied : function(:Event):void/*Function?*/;
	var onloadedmetadata : function(:Event):void/*Function?*/;
	var onloadeddata : function(:Event):void/*Function?*/;
	var oncanplay : function(:Event):void/*Function?*/;
	var oncanplaythrough : function(:Event):void/*Function?*/;
	var onplaying : function(:Event):void/*Function?*/;
	var onended : function(:Event):void/*Function?*/;
	var onwaiting : function(:Event):void/*Function?*/;
	var ondurationchange : function(:Event):void/*Function?*/;
	var ontimeupdate : function(:Event):void/*Function?*/;
	var onplay : function(:Event):void/*Function?*/;
	var onpause : function(:Event):void/*Function?*/;
	var onratechange : function(:Event):void/*Function?*/;
	var onvolumechange : function(:Event):void/*Function?*/;

} // end of MediaController

native final class TextTrackList extends EventTarget {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : TextTrack;
	var onaddtrack : function(:Event):void/*Function?*/;

} // end of TextTrackList

native final class TextTrack extends EventTarget {

	__readonly__ var kind : string/*DOMString*/;
	__readonly__ var label : string/*DOMString*/;
	__readonly__ var language : string/*DOMString*/;
	static __readonly__ var DISABLED : int/*unsigned short*/;
	       __readonly__ var DISABLED : int/*unsigned short*/;
	static __readonly__ var HIDDEN : int/*unsigned short*/;
	       __readonly__ var HIDDEN : int/*unsigned short*/;
	static __readonly__ var SHOWING : int/*unsigned short*/;
	       __readonly__ var SHOWING : int/*unsigned short*/;
	var mode : int/*unsigned short*/;
	__readonly__ var cues : TextTrackCueList;
	__readonly__ var activeCues : TextTrackCueList;
	function addCue(cue : TextTrackCue) : void;
	function removeCue(cue : TextTrackCue) : void;
	var oncuechange : function(:Event):void/*Function?*/;

} // end of TextTrack

native final class TextTrackCueList {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : TextTrackCue;
	function getCueById(id : string/*DOMString*/) : TextTrackCue;

} // end of TextTrackCueList

native final class TextTrackCue extends EventTarget {

	function constructor(
		id : string/*DOMString*/,
		startTime : number/*double*/,
		endTime : number/*double*/,
		text : string/*DOMString*/
	);
	function constructor(
		id : string/*DOMString*/,
		startTime : number/*double*/,
		endTime : number/*double*/,
		text : string/*DOMString*/,
		settings : string/*DOMString*/
	);
	function constructor(
		id : string/*DOMString*/,
		startTime : number/*double*/,
		endTime : number/*double*/,
		text : string/*DOMString*/,
		settings : string/*DOMString*/,
		pauseOnExit : boolean
	);

	__readonly__ var track : TextTrack;
	var id : string/*DOMString*/;
	var startTime : number/*double*/;
	var endTime : number/*double*/;
	var pauseOnExit : boolean;
	var vertical : string/*DOMString*/;
	var snapToLines : boolean;
	var line : int/*long*/;
	var position : int/*long*/;
	var size : int/*long*/;
	var align : string/*DOMString*/;
	var text : string/*DOMString*/;
	function getCueAsHTML() : DocumentFragment;
	var onenter : function(:Event):void/*Function?*/;
	var onexit : function(:Event):void/*Function?*/;

} // end of TextTrackCue

native final class TimeRanges {

	__readonly__ var length : int/*unsigned long*/;
	function start(index : int/*unsigned long*/) : number/*double*/;
	function end(index : int/*unsigned long*/) : number/*double*/;

} // end of TimeRanges

native final class TrackEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : TrackEventInit
	);

	__readonly__ var track : Object/*object?*/;

} // end of TrackEvent

native final class TrackEventInit extends EventInit {

	var track : Object/*object?*/;

} // end of TrackEventInit

native final class HTMLCanvasElement extends HTMLElement {

	var width : int/*unsigned long*/;
	var height : int/*unsigned long*/;
	function toDataURL(
		type : string/*DOMString*/,
		...args : variant/*any...*/
	) : string/*DOMString*/;
	function toBlob(
		_callback : function(:File):void/*FileCallback?*/,
		type : string/*DOMString*/,
		...args : variant/*any...*/
	) : void;
	function getContext(
		contextId : string/*DOMString*/,
		...args : variant/*any...*/
	) : Object/*object?*/;

} // end of HTMLCanvasElement

native final class HTMLMapElement extends HTMLElement {

	var name : string/*DOMString*/;
	__readonly__ var areas : HTMLCollection;
	__readonly__ var images : HTMLCollection;

} // end of HTMLMapElement

native final class HTMLAreaElement extends HTMLElement {

	var alt : string/*DOMString*/;
	var coords : string/*DOMString*/;
	var shape : string/*DOMString*/;
	var href : string/*DOMString*/;
	var target : string/*DOMString*/;
	var rel : string/*DOMString*/;
	__readonly__ var relList : DOMTokenList;
	var media : string/*DOMString*/;
	var hreflang : string/*DOMString*/;
	var type : string/*DOMString*/;
	// URL decomposition IDL attributes
	var protocol : string/*DOMString*/;
	var host : string/*DOMString*/;
	var hostname : string/*DOMString*/;
	var port : string/*DOMString*/;
	var pathname : string/*DOMString*/;
	var search : string/*DOMString*/;
	var hash : string/*DOMString*/;

	var noHref : boolean;

} // end of HTMLAreaElement

native final class HTMLTableElement extends HTMLElement {

	var caption : HTMLTableCaptionElement;
	function createCaption() : HTMLElement;
	function deleteCaption() : void;
	var tHead : HTMLTableSectionElement;
	function createTHead() : HTMLElement;
	function deleteTHead() : void;
	var tFoot : HTMLTableSectionElement;
	function createTFoot() : HTMLElement;
	function deleteTFoot() : void;
	__readonly__ var tBodies : HTMLCollection;
	function createTBody() : HTMLElement;
	__readonly__ var rows : HTMLCollection;
	function insertRow() : HTMLElement;
	function insertRow(index : int/*long*/) : HTMLElement;
	function deleteRow(index : int/*long*/) : void;
	var border : string/*DOMString*/;

	var align : string/*DOMString*/;
	var frame : string/*DOMString*/;
	var rules : string/*DOMString*/;
	var summary : string/*DOMString*/;
	var width : string/*DOMString*/;
	var bgColor : string/*DOMString*/;
	var cellPadding : string/*DOMString*/;
	var cellSpacing : string/*DOMString*/;

} // end of HTMLTableElement

native final class HTMLTableCaptionElement extends HTMLElement {

	var align : string/*DOMString*/;

} // end of HTMLTableCaptionElement

native final class HTMLTableColElement extends HTMLElement {

	var span : int/*unsigned long*/;

	var align : string/*DOMString*/;
	var ch : string/*DOMString*/;
	var chOff : string/*DOMString*/;
	var vAlign : string/*DOMString*/;
	var width : string/*DOMString*/;

} // end of HTMLTableColElement

native final class HTMLTableSectionElement extends HTMLElement {

	__readonly__ var rows : HTMLCollection;
	function insertRow() : HTMLElement;
	function insertRow(index : int/*long*/) : HTMLElement;
	function deleteRow(index : int/*long*/) : void;

	var align : string/*DOMString*/;
	var ch : string/*DOMString*/;
	var chOff : string/*DOMString*/;
	var vAlign : string/*DOMString*/;

} // end of HTMLTableSectionElement

native final class HTMLTableRowElement extends HTMLElement {

	__readonly__ var rowIndex : int/*long*/;
	__readonly__ var sectionRowIndex : int/*long*/;
	__readonly__ var cells : HTMLCollection;
	function insertCell() : HTMLElement;
	function insertCell(index : int/*long*/) : HTMLElement;
	function deleteCell(index : int/*long*/) : void;

	var align : string/*DOMString*/;
	var ch : string/*DOMString*/;
	var chOff : string/*DOMString*/;
	var vAlign : string/*DOMString*/;
	var bgColor : string/*DOMString*/;

} // end of HTMLTableRowElement

native final class HTMLTableDataCellElement extends HTMLTableCellElement {
}

native final class HTMLTableHeaderCellElement extends HTMLTableCellElement {

	var scope : string/*DOMString*/;

} // end of HTMLTableHeaderCellElement

native class HTMLTableCellElement extends HTMLElement {

	var colSpan : int/*unsigned long*/;
	var rowSpan : int/*unsigned long*/;
	__readonly__ var headers : DOMSettableTokenList;
	__readonly__ var cellIndex : int/*long*/;

	var abbr : string/*DOMString*/;
	var align : string/*DOMString*/;
	var axis : string/*DOMString*/;
	var height : string/*DOMString*/;
	var width : string/*DOMString*/;
	var ch : string/*DOMString*/;
	var chOff : string/*DOMString*/;
	var noWrap : boolean;
	var vAlign : string/*DOMString*/;
	var bgColor : string/*DOMString*/;

} // end of HTMLTableCellElement

native final class HTMLFormElement extends HTMLElement {

	var acceptCharset : string/*DOMString*/;
	var action : string/*DOMString*/;
	var autocomplete : string/*DOMString*/;
	var enctype : string/*DOMString*/;
	var encoding : string/*DOMString*/;
	var method : string/*DOMString*/;
	var name : string/*DOMString*/;
	var noValidate : boolean;
	var target : string/*DOMString*/;
	__readonly__ var elements : HTMLFormControlsCollection;
	__readonly__ var length : int/*long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Element;
	function __native_index_operator__(
		name : string/*DOMString*/
	) : Object/*object*/;
	function submit() : void;
	function reset() : void;
	function checkValidity() : boolean;

} // end of HTMLFormElement

native final class HTMLFieldSetElement extends HTMLElement {

	var disabled : boolean;
	__readonly__ var form : HTMLFormElement;
	var name : string/*DOMString*/;
	__readonly__ var type : string/*DOMString*/;
	__readonly__ var elements : HTMLFormControlsCollection;
	__readonly__ var willValidate : boolean;
	__readonly__ var validity : ValidityState;
	__readonly__ var validationMessage : string/*DOMString*/;
	function checkValidity() : boolean;
	function setCustomValidity(error : string/*DOMString*/) : void;

} // end of HTMLFieldSetElement

native final class HTMLLegendElement extends HTMLElement {

	__readonly__ var form : HTMLFormElement;

	var align : string/*DOMString*/;

} // end of HTMLLegendElement

native final class HTMLLabelElement extends HTMLElement {

	__readonly__ var form : HTMLFormElement;
	var htmlFor : string/*DOMString*/;
	__readonly__ var control : HTMLElement;

} // end of HTMLLabelElement

native final class HTMLInputElement extends HTMLElement {

	var accept : string/*DOMString*/;
	var alt : string/*DOMString*/;
	var autocomplete : string/*DOMString*/;
	var autofocus : boolean;
	var defaultChecked : boolean;
	var checked : boolean;
	var dirName : string/*DOMString*/;
	var disabled : boolean;
	__readonly__ var form : HTMLFormElement;
	__readonly__ var files : FileList;
	var formAction : string/*DOMString*/;
	var formEnctype : string/*DOMString*/;
	var formMethod : string/*DOMString*/;
	var formNoValidate : boolean;
	var formTarget : string/*DOMString*/;
	var height : int/*unsigned long*/;
	var indeterminate : boolean;
	__readonly__ var list : HTMLElement;
	var max : string/*DOMString*/;
	var maxLength : int/*long*/;
	var min : string/*DOMString*/;
	var multiple : boolean;
	var name : string/*DOMString*/;
	var pattern : string/*DOMString*/;
	var placeholder : string/*DOMString*/;
	var readOnly : boolean;
	var required : boolean;
	var size : int/*unsigned long*/;
	var src : string/*DOMString*/;
	var step : string/*DOMString*/;
	var type : string/*DOMString*/;
	var defaultValue : string/*DOMString*/;
	var value : string/*DOMString*/;
	var valueAsDate : Date;
	var valueAsNumber : number/*double*/;
	var width : int/*unsigned long*/;
	function stepUp() : void;
	function stepUp(n : int/*long*/) : void;
	function stepDown() : void;
	function stepDown(n : int/*long*/) : void;
	__readonly__ var willValidate : boolean;
	__readonly__ var validity : ValidityState;
	__readonly__ var validationMessage : string/*DOMString*/;
	function checkValidity() : boolean;
	function setCustomValidity(error : string/*DOMString*/) : void;
	__readonly__ var labels : NodeList;
	function select() : void;
	var selectionStart : int/*unsigned long*/;
	var selectionEnd : int/*unsigned long*/;
	var selectionDirection : string/*DOMString*/;
	function setSelectionRange(
		start : int/*unsigned long*/,
		end : int/*unsigned long*/
	) : void;
	function setSelectionRange(
		start : int/*unsigned long*/,
		end : int/*unsigned long*/,
		direction : string/*DOMString*/
	) : void;

	var align : string/*DOMString*/;
	var useMap : string/*DOMString*/;

} // end of HTMLInputElement

native final class HTMLButtonElement extends HTMLElement {

	var autofocus : boolean;
	var disabled : boolean;
	__readonly__ var form : HTMLFormElement;
	var formAction : string/*DOMString*/;
	var formEnctype : string/*DOMString*/;
	var formMethod : string/*DOMString*/;
	var formNoValidate : boolean;
	var formTarget : string/*DOMString*/;
	var name : string/*DOMString*/;
	var type : string/*DOMString*/;
	var value : string/*DOMString*/;
	__readonly__ var willValidate : boolean;
	__readonly__ var validity : ValidityState;
	__readonly__ var validationMessage : string/*DOMString*/;
	function checkValidity() : boolean;
	function setCustomValidity(error : string/*DOMString*/) : void;
	__readonly__ var labels : NodeList;

} // end of HTMLButtonElement

native final class HTMLSelectElement extends HTMLElement {

	var autofocus : boolean;
	var disabled : boolean;
	__readonly__ var form : HTMLFormElement;
	var multiple : boolean;
	var name : string/*DOMString*/;
	var required : boolean;
	var size : int/*unsigned long*/;
	__readonly__ var type : string/*DOMString*/;
	__readonly__ var options : HTMLOptionsCollection;
	var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Element;
	/* getter */
	function item(index : int/*unsigned long*/) : Element;
	function namedItem(name : string/*DOMString*/) : Object/*object*/;
	function add(element : HTMLOptionElement) : void;
	function add(
		element : HTMLOptionElement,
		before : HTMLElement
	) : void;
	function add(
		element : HTMLOptionElement,
		before : int/*long*/
	) : void;
	function add(element : HTMLOptGroupElement) : void;
	function add(
		element : HTMLOptGroupElement,
		before : HTMLElement
	) : void;
	function add(
		element : HTMLOptGroupElement,
		before : int/*long*/
	) : void;
	function remove(index : int/*long*/) : void;
	__readonly__ var selectedOptions : HTMLCollection;
	var selectedIndex : int/*long*/;
	var value : string/*DOMString*/;
	__readonly__ var willValidate : boolean;
	__readonly__ var validity : ValidityState;
	__readonly__ var validationMessage : string/*DOMString*/;
	function checkValidity() : boolean;
	function setCustomValidity(error : string/*DOMString*/) : void;
	__readonly__ var labels : NodeList;

} // end of HTMLSelectElement

native final class HTMLDataListElement extends HTMLElement {

	__readonly__ var options : HTMLCollection;

} // end of HTMLDataListElement

native final class HTMLOptGroupElement extends HTMLElement {

	var disabled : boolean;
	var label : string/*DOMString*/;

} // end of HTMLOptGroupElement

native final class HTMLOptionElement extends HTMLElement {

	var disabled : boolean;
	__readonly__ var form : HTMLFormElement;
	var label : string/*DOMString*/;
	var defaultSelected : boolean;
	var selected : boolean;
	var value : string/*DOMString*/;
	var text : string/*DOMString*/;
	__readonly__ var index : int/*long*/;

} // end of HTMLOptionElement

native final class HTMLTextAreaElement extends HTMLElement {

	var autofocus : boolean;
	var cols : int/*unsigned long*/;
	var dirName : string/*DOMString*/;
	var disabled : boolean;
	__readonly__ var form : HTMLFormElement;
	var maxLength : int/*long*/;
	var name : string/*DOMString*/;
	var placeholder : string/*DOMString*/;
	var readOnly : boolean;
	var required : boolean;
	var rows : int/*unsigned long*/;
	var wrap : string/*DOMString*/;
	__readonly__ var type : string/*DOMString*/;
	var defaultValue : string/*DOMString*/;
	var value : string/*DOMString*/;
	__readonly__ var textLength : int/*unsigned long*/;
	__readonly__ var willValidate : boolean;
	__readonly__ var validity : ValidityState;
	__readonly__ var validationMessage : string/*DOMString*/;
	function checkValidity() : boolean;
	function setCustomValidity(error : string/*DOMString*/) : void;
	__readonly__ var labels : NodeList;
	function select() : void;
	var selectionStart : int/*unsigned long*/;
	var selectionEnd : int/*unsigned long*/;
	var selectionDirection : string/*DOMString*/;
	function setSelectionRange(
		start : int/*unsigned long*/,
		end : int/*unsigned long*/
	) : void;
	function setSelectionRange(
		start : int/*unsigned long*/,
		end : int/*unsigned long*/,
		direction : string/*DOMString*/
	) : void;

} // end of HTMLTextAreaElement

native final class HTMLKeygenElement extends HTMLElement {

	var autofocus : boolean;
	var challenge : string/*DOMString*/;
	var disabled : boolean;
	__readonly__ var form : HTMLFormElement;
	var keytype : string/*DOMString*/;
	var name : string/*DOMString*/;
	__readonly__ var type : string/*DOMString*/;
	__readonly__ var willValidate : boolean;
	__readonly__ var validity : ValidityState;
	__readonly__ var validationMessage : string/*DOMString*/;
	function checkValidity() : boolean;
	function setCustomValidity(error : string/*DOMString*/) : void;
	__readonly__ var labels : NodeList;

} // end of HTMLKeygenElement

native final class HTMLOutputElement extends HTMLElement {

	__readonly__ var htmlFor : DOMSettableTokenList;
	__readonly__ var form : HTMLFormElement;
	var name : string/*DOMString*/;
	__readonly__ var type : string/*DOMString*/;
	var defaultValue : string/*DOMString*/;
	var value : string/*DOMString*/;
	__readonly__ var willValidate : boolean;
	__readonly__ var validity : ValidityState;
	__readonly__ var validationMessage : string/*DOMString*/;
	function checkValidity() : boolean;
	function setCustomValidity(error : string/*DOMString*/) : void;
	__readonly__ var labels : NodeList;

} // end of HTMLOutputElement

native final class HTMLProgressElement extends HTMLElement {

	var value : number/*double*/;
	var max : number/*double*/;
	__readonly__ var position : number/*double*/;
	__readonly__ var labels : NodeList;

} // end of HTMLProgressElement

native final class HTMLMeterElement extends HTMLElement {

	var value : number/*double*/;
	var min : number/*double*/;
	var max : number/*double*/;
	var low : number/*double*/;
	var high : number/*double*/;
	var optimum : number/*double*/;
	__readonly__ var labels : NodeList;

} // end of HTMLMeterElement

native final class ValidityState {

	__readonly__ var valueMissing : boolean;
	__readonly__ var typeMismatch : boolean;
	__readonly__ var patternMismatch : boolean;
	__readonly__ var tooLong : boolean;
	__readonly__ var rangeUnderflow : boolean;
	__readonly__ var rangeOverflow : boolean;
	__readonly__ var stepMismatch : boolean;
	__readonly__ var customError : boolean;
	__readonly__ var valid : boolean;

} // end of ValidityState

native final class HTMLDetailsElement extends HTMLElement {

	var open : boolean;

} // end of HTMLDetailsElement

native final class HTMLCommandElement extends HTMLElement {

	var type : string/*DOMString*/;
	var label : string/*DOMString*/;
	var icon : string/*DOMString*/;
	var disabled : boolean;
	var checked : boolean;
	var radiogroup : string/*DOMString*/;
	__readonly__ var command : HTMLElement;

} // end of HTMLCommandElement

native final class HTMLMenuElement extends HTMLElement {

	var type : string/*DOMString*/;
	var label : string/*DOMString*/;

	var compact : boolean;

} // end of HTMLMenuElement

native final class BarProp {

	var visible : boolean;

} // end of BarProp

native final class History {

	__readonly__ var length : int/*long*/;
	__readonly__ var state : variant/*any*/;
	function go() : void;
	function go(delta : int/*long*/) : void;
	function back() : void;
	function forward() : void;
	function pushState(
		data : variant/*any*/,
		title : string/*DOMString*/
	) : void;
	function pushState(
		data : variant/*any*/,
		title : string/*DOMString*/,
		url : string/*DOMString*/
	) : void;
	function replaceState(
		data : variant/*any*/,
		title : string/*DOMString*/
	) : void;
	function replaceState(
		data : variant/*any*/,
		title : string/*DOMString*/,
		url : string/*DOMString*/
	) : void;

} // end of History

native final class Location {

	var href : string/*DOMString*/;
	function assign(url : string/*DOMString*/) : void;
	function replace(url : string/*DOMString*/) : void;
	function reload() : void;
	// URL decomposition IDL attributes
	var protocol : string/*DOMString*/;
	var host : string/*DOMString*/;
	var hostname : string/*DOMString*/;
	var port : string/*DOMString*/;
	var pathname : string/*DOMString*/;
	var search : string/*DOMString*/;
	var hash : string/*DOMString*/;

} // end of Location

native final class PopStateEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : PopStateEventInit
	);

	__readonly__ var state : variant/*any*/;

} // end of PopStateEvent

native final class PopStateEventInit extends EventInit {

	var state : variant/*any*/;

} // end of PopStateEventInit

native final class HashChangeEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : HashChangeEventInit
	);

	__readonly__ var oldURL : string/*DOMString*/;
	__readonly__ var newURL : string/*DOMString*/;

} // end of HashChangeEvent

native final class HashChangeEventInit extends EventInit {

	var oldURL : string/*DOMString*/;
	var newURL : string/*DOMString*/;

} // end of HashChangeEventInit

native final class PageTransitionEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : PageTransitionEventInit
	);

	__readonly__ var persisted : boolean;

} // end of PageTransitionEvent

native final class PageTransitionEventInit extends EventInit {

	var persisted : boolean;

} // end of PageTransitionEventInit

native final class BeforeUnloadEvent extends Event {

	var returnValue : string/*DOMString*/;

} // end of BeforeUnloadEvent

native final class ApplicationCache extends EventTarget {

	// update status
	static __readonly__ var UNCACHED : int/*unsigned short*/;
	       __readonly__ var UNCACHED : int/*unsigned short*/;
	static __readonly__ var IDLE : int/*unsigned short*/;
	       __readonly__ var IDLE : int/*unsigned short*/;
	static __readonly__ var CHECKING : int/*unsigned short*/;
	       __readonly__ var CHECKING : int/*unsigned short*/;
	static __readonly__ var DOWNLOADING : int/*unsigned short*/;
	       __readonly__ var DOWNLOADING : int/*unsigned short*/;
	static __readonly__ var UPDATEREADY : int/*unsigned short*/;
	       __readonly__ var UPDATEREADY : int/*unsigned short*/;
	static __readonly__ var OBSOLETE : int/*unsigned short*/;
	       __readonly__ var OBSOLETE : int/*unsigned short*/;
	__readonly__ var status : int/*unsigned short*/;
	// updates
	function update() : void;
	function abort() : void;
	function swapCache() : void;
	// events
	var onchecking : function(:Event):void/*Function?*/;
	var onerror : function(:Event):void/*Function?*/;
	var onnoupdate : function(:Event):void/*Function?*/;
	var ondownloading : function(:Event):void/*Function?*/;
	var onprogress : function(:Event):void/*Function?*/;
	var onupdateready : function(:Event):void/*Function?*/;
	var oncached : function(:Event):void/*Function?*/;
	var onobsolete : function(:Event):void/*Function?*/;

} // end of ApplicationCache

native __fake__ class NavigatorOnLine {

	__readonly__ var onLine : boolean;

} // end of NavigatorOnLine

// alias Function = function(arguments:variant/*any...*/):variant/*any*/

native __fake__ class WindowBase64 {

	function btoa(btoa : string/*DOMString*/) : string/*DOMString*/;
	function atob(atob : string/*DOMString*/) : string/*DOMString*/;

} // end of WindowBase64

native final __fake__ class WindowModal {

	__readonly__ var dialogArguments : variant/*any*/;
	var returnValue : string/*DOMString*/;

} // end of WindowModal

native final class Navigator {

	// objects implementing this interface also implement the interfaces given below

	// implements NavigatorID

	__readonly__ var appName : string/*DOMString*/;
	__readonly__ var appVersion : string/*DOMString*/;
	__readonly__ var platform : string/*DOMString*/;
	__readonly__ var userAgent : string/*DOMString*/;

	// implements NavigatorOnLine

	__readonly__ var onLine : boolean;

	// implements NavigatorContentUtils

	// content handler registration
	function registerProtocolHandler(
		scheme : string/*DOMString*/,
		url : string/*DOMString*/,
		title : string/*DOMString*/
	) : void;
	function registerContentHandler(
		mimeType : string/*DOMString*/,
		url : string/*DOMString*/,
		title : string/*DOMString*/
	) : void;
	function isProtocolHandlerRegistered(
		scheme : string/*DOMString*/,
		url : string/*DOMString*/
	) : string/*DOMString*/;
	function isContentHandlerRegistered(
		mimeType : string/*DOMString*/,
		url : string/*DOMString*/
	) : string/*DOMString*/;
	function unregisterProtocolHandler(
		scheme : string/*DOMString*/,
		url : string/*DOMString*/
	) : void;
	function unregisterContentHandler(
		mimeType : string/*DOMString*/,
		url : string/*DOMString*/
	) : void;

	// implements NavigatorStorageUtils

	function yieldForStorageUpdates() : void;

	// implements NavigatorGeolocation

	__readonly__ var geolocation : Geolocation;

} // end of Navigator

native __fake__ class NavigatorID {

	__readonly__ var appName : string/*DOMString*/;
	__readonly__ var appVersion : string/*DOMString*/;
	__readonly__ var platform : string/*DOMString*/;
	__readonly__ var userAgent : string/*DOMString*/;

} // end of NavigatorID

native __fake__ class NavigatorContentUtils {

	// content handler registration
	function registerProtocolHandler(
		scheme : string/*DOMString*/,
		url : string/*DOMString*/,
		title : string/*DOMString*/
	) : void;
	function registerContentHandler(
		mimeType : string/*DOMString*/,
		url : string/*DOMString*/,
		title : string/*DOMString*/
	) : void;
	function isProtocolHandlerRegistered(
		scheme : string/*DOMString*/,
		url : string/*DOMString*/
	) : string/*DOMString*/;
	function isContentHandlerRegistered(
		mimeType : string/*DOMString*/,
		url : string/*DOMString*/
	) : string/*DOMString*/;
	function unregisterProtocolHandler(
		scheme : string/*DOMString*/,
		url : string/*DOMString*/
	) : void;
	function unregisterContentHandler(
		mimeType : string/*DOMString*/,
		url : string/*DOMString*/
	) : void;

} // end of NavigatorContentUtils

native __fake__ class NavigatorStorageUtils {

	function yieldForStorageUpdates() : void;

} // end of NavigatorStorageUtils

native final class External {

	function AddSearchProvider(engineURL : string/*DOMString*/) : void;
	function IsSearchProviderInstalled(
		engineURL : string/*DOMString*/
	) : int/*unsigned long*/;

} // end of External

native final class DataTransfer {

	var dropEffect : string/*DOMString*/;
	var effectAllowed : string/*DOMString*/;
	__readonly__ var items : DataTransferItemList;
	function setDragImage(
		image : Element,
		x : int/*long*/,
		y : int/*long*/
	) : void;
	function addElement(element : Element) : void;
	/* old interface */
	__readonly__ var types : DOMStringList;
	function getData(
		format : string/*DOMString*/
	) : string/*DOMString*/;
	function setData(
		format : string/*DOMString*/,
		data : string/*DOMString*/
	) : void;
	function clearData() : void;
	function clearData(format : string/*DOMString*/) : void;
	__readonly__ var files : FileList;

} // end of DataTransfer

native final class DataTransferItemList {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : DataTransferItem;
	function clear() : void;
	function add(
		data : string/*DOMString*/,
		type : string/*DOMString*/
	) : DataTransferItem;
	function add(data : File) : DataTransferItem;

} // end of DataTransferItemList

native final class DataTransferItem {

	__readonly__ var kind : string/*DOMString*/;
	__readonly__ var type : string/*DOMString*/;
	function getAsString(
		_callback : function(:string):void/*FunctionStringCallback?*/
	) : void;
	function getAsFile() : File;

} // end of DataTransferItem

// alias FunctionStringCallback = function(data:string/*DOMString*/):void

native final class DragEvent extends MouseEvent {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : DragEventInit
	);

	__readonly__ var dataTransfer : DataTransfer;

} // end of DragEvent

native final class DragEventInit extends MouseEventInit {

	var dataTransfer : DataTransfer;

} // end of DragEventInit

native final class HTMLAppletElement extends HTMLElement {

	var align : string/*DOMString*/;
	var alt : string/*DOMString*/;
	var archive : string/*DOMString*/;
	var code : string/*DOMString*/;
	var codeBase : string/*DOMString*/;
	var height : string/*DOMString*/;
	var hspace : int/*unsigned long*/;
	var name : string/*DOMString*/;
	var _object : string/*DOMString*/;
	// the underscore is not part of the identifier
	var vspace : int/*unsigned long*/;
	var width : string/*DOMString*/;

} // end of HTMLAppletElement

native final class HTMLMarqueeElement extends HTMLElement {

	var behavior : string/*DOMString*/;
	var bgColor : string/*DOMString*/;
	var direction : string/*DOMString*/;
	var height : string/*DOMString*/;
	var hspace : int/*unsigned long*/;
	var loop : int/*long*/;
	var scrollAmount : int/*unsigned long*/;
	var scrollDelay : int/*unsigned long*/;
	var trueSpeed : boolean;
	var vspace : int/*unsigned long*/;
	var width : string/*DOMString*/;
	var onbounce : function(:Event):void/*Function?*/;
	var onfinish : function(:Event):void/*Function?*/;
	var onstart : function(:Event):void/*Function?*/;
	function start() : void;
	function stop() : void;

} // end of HTMLMarqueeElement

native final class HTMLFrameSetElement extends HTMLElement {

	var cols : string/*DOMString*/;
	var rows : string/*DOMString*/;
	var onafterprint : function(:Event):void/*Function?*/;
	var onbeforeprint : function(:Event):void/*Function?*/;
	var onbeforeunload : function(:Event):void/*Function?*/;
	// inherits var onblur : function(:Event):void/*Function?*/;
	// inherits var onerror : function(:Event):void/*Function?*/;
	// inherits var onfocus : function(:Event):void/*Function?*/;
	var onhashchange : function(:Event):void/*Function?*/;
	// inherits var onload : function(:Event):void/*Function?*/;
	var onmessage : function(:Event):void/*Function?*/;
	var onoffline : function(:Event):void/*Function?*/;
	var ononline : function(:Event):void/*Function?*/;
	var onpagehide : function(:Event):void/*Function?*/;
	var onpageshow : function(:Event):void/*Function?*/;
	var onpopstate : function(:Event):void/*Function?*/;
	var onresize : function(:Event):void/*Function?*/;
	// inherits var onscroll : function(:Event):void/*Function?*/;
	var onstorage : function(:Event):void/*Function?*/;
	var onunload : function(:Event):void/*Function?*/;

} // end of HTMLFrameSetElement

native final class HTMLFrameElement extends HTMLElement {

	var name : string/*DOMString*/;
	var scrolling : string/*DOMString*/;
	var src : string/*DOMString*/;
	var frameBorder : string/*DOMString*/;
	var longDesc : string/*DOMString*/;
	var noResize : boolean;
	__readonly__ var contentDocument : HTMLDocument/*Document?*/;
	__readonly__ var contentWindow : Window/*WindowProxy?*/;
	var marginHeight : string/*DOMString*/;
	var marginWidth : string/*DOMString*/;

} // end of HTMLFrameElement

native final class HTMLBaseFontElement extends HTMLElement {

	var color : string/*DOMString*/;
	var face : string/*DOMString*/;
	var size : int/*long*/;

} // end of HTMLBaseFontElement

native final class HTMLDirectoryElement extends HTMLElement {

	var compact : boolean;

} // end of HTMLDirectoryElement

native final class HTMLFontElement extends HTMLElement {

	var color : string/*DOMString*/;
	var face : string/*DOMString*/;
	var size : string/*DOMString*/;

} // end of HTMLFontElement

native final class FileList {

	function __native_index_operator__(
		index : int/*unsigned long*/
	) : File;
	/* getter */
	function item(index : int/*unsigned long*/) : File;
	__readonly__ var length : int/*unsigned long*/;

} // end of FileList

native class Blob {

	__readonly__ var size : number/*unsigned long long*/;
	__readonly__ var type : string/*DOMString*/;
	//slice Blob into byte-ranged chunks

	function slice() : Blob;
	function slice(start : number/*long long*/) : Blob;
	function slice(
		start : number/*long long*/,
		end : number/*long long*/
	) : Blob;
	function slice(
		start : number/*long long*/,
		end : number/*long long*/,
		contentType : string/*DOMString*/
	) : Blob;

} // end of Blob

native final class File extends Blob {

	__readonly__ var name : string/*DOMString*/;
	__readonly__ var lastModifiedDate : Date;

} // end of File

native final class FileReader extends EventTarget {

	function constructor();

	// async read methods
	function readAsArrayBuffer(blob : Blob) : void;
	function readAsBinaryString(blob : Blob) : void;
	function readAsText(blob : Blob) : void;
	function readAsText(
		blob : Blob,
		encoding : string/*DOMString*/
	) : void;
	function readAsDataURL(blob : Blob) : void;
	function abort() : void;
	// states
	static __readonly__ var EMPTY : int/*unsigned short*/;
	       __readonly__ var EMPTY : int/*unsigned short*/;
	static __readonly__ var LOADING : int/*unsigned short*/;
	       __readonly__ var LOADING : int/*unsigned short*/;
	static __readonly__ var DONE : int/*unsigned short*/;
	       __readonly__ var DONE : int/*unsigned short*/;
	__readonly__ var readyState : int/*unsigned short*/;
	// File or Blob data
	__readonly__ var result : variant/*any*/;
	__readonly__ var error : DOMError;
	// event handler attributes
	var onloadstart : function(:Event):void/*Function?*/;
	var onprogress : function(:Event):void/*Function?*/;
	var onload : function(:Event):void/*Function?*/;
	var onabort : function(:Event):void/*Function?*/;
	var onerror : function(:Event):void/*Function?*/;
	var onloadend : function(:Event):void/*Function?*/;

} // end of FileReader

native final class FileReaderSync {

	function constructor();

	// Synchronously return strings

	function readAsArrayBuffer(blob : Blob) : ArrayBuffer;
	function readAsBinaryString(blob : Blob) : string/*DOMString*/;
	function readAsText(blob : Blob) : string/*DOMString*/;
	function readAsText(
		blob : Blob,
		encoding : string/*DOMString*/
	) : string/*DOMString*/;
	function readAsDataURL(blob : Blob) : string/*DOMString*/;

} // end of FileReaderSync

native class URL {

	static function createObjectURL(blob : Blob) : string/*DOMString*/;
	static function revokeObjectURL(url : string/*DOMString*/) : void;

} // end of URL

native final class webkitURL extends URL {
}

native final class Touch {

	__readonly__ var identifier : int/*long*/;
	__readonly__ var target : EventTarget;
	__readonly__ var screenX : int/*long*/;
	__readonly__ var screenY : int/*long*/;
	__readonly__ var clientX : int/*long*/;
	__readonly__ var clientY : int/*long*/;
	__readonly__ var pageX : int/*long*/;
	__readonly__ var pageY : int/*long*/;

} // end of Touch

native final class TouchList {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Touch;
	/* getter */
	function item(index : int/*unsigned long*/) : Touch;
	function identifiedTouch(identifier : int/*long*/) : Touch;

} // end of TouchList

native final class TouchEvent extends UIEvent {

	__readonly__ var touches : TouchList;
	__readonly__ var targetTouches : TouchList;
	__readonly__ var changedTouches : TouchList;
	__readonly__ var altKey : boolean;
	__readonly__ var metaKey : boolean;
	__readonly__ var ctrlKey : boolean;
	__readonly__ var shiftKey : boolean;

} // end of TouchEvent

native final class WebSocket extends EventTarget {

	function constructor(url : string/*DOMString*/);
	function constructor(
		url : string/*DOMString*/,
		protocols : string/*DOMString*/
	);
	function constructor(
		url : string/*DOMString*/,
		protocols : string[]/*DOMString[]*/
	);

	__readonly__ var url : string/*DOMString*/;
	// ready state
	static __readonly__ var CONNECTING : int/*unsigned short*/;
	       __readonly__ var CONNECTING : int/*unsigned short*/;
	static __readonly__ var OPEN : int/*unsigned short*/;
	       __readonly__ var OPEN : int/*unsigned short*/;
	static __readonly__ var CLOSING : int/*unsigned short*/;
	       __readonly__ var CLOSING : int/*unsigned short*/;
	static __readonly__ var CLOSED : int/*unsigned short*/;
	       __readonly__ var CLOSED : int/*unsigned short*/;
	__readonly__ var readyState : int/*unsigned short*/;
	__readonly__ var bufferedAmount : int/*unsigned long*/;
	// networking
	var onopen : function(:Event):void/*Function?*/;
	var onerror : function(:Event):void/*Function?*/;
	var onclose : function(:Event):void/*Function?*/;
	__readonly__ var extensions : string/*DOMString*/;
	__readonly__ var protocol : string/*DOMString*/;
	function close() : void;
	function close(code : int/*unsigned short*/) : void;
	function close(
		code : int/*unsigned short*/,
		reason : string/*DOMString*/
	) : void;
	// messaging
	var onmessage : function(:Event):void/*Function?*/;
	var binaryType : string/*DOMString*/;
	function send(data : string/*DOMString*/) : void;
	function send(data : ArrayBufferView) : void;
	function send(data : Blob) : void;

} // end of WebSocket

native final class CloseEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : CloseEventInit
	);

	__readonly__ var wasClean : boolean;
	__readonly__ var code : int/*unsigned short*/;
	__readonly__ var reason : string/*DOMString*/;

} // end of CloseEvent

native final class CloseEventInit extends EventInit {

	var wasClean : boolean;
	var code : int/*unsigned short*/;
	var reason : string/*DOMString*/;

} // end of CloseEventInit

// alias PositionCallback = function(position:Position):void

// alias PositionErrorCallback = function(positionError:PositionError):void

native __fake__ class NavigatorGeolocation {

	__readonly__ var geolocation : Geolocation;

} // end of NavigatorGeolocation

native final __fake__ class Geolocation {

	function getCurrentPosition(
		successCallback : function(position:Position):void/*PositionCallback*/
	) : void;
	function getCurrentPosition(
		successCallback : function(position:Position):void/*PositionCallback*/,
		errorCallback : function(positionError:PositionError):void/*PositionErrorCallback*/
	) : void;
	function getCurrentPosition(
		successCallback : function(position:Position):void/*PositionCallback*/,
		errorCallback : function(positionError:PositionError):void/*PositionErrorCallback*/,
		options : PositionOptions
	) : void;
	function watchPosition(
		successCallback : function(position:Position):void/*PositionCallback*/
	) : int/*long*/;
	function watchPosition(
		successCallback : function(position:Position):void/*PositionCallback*/,
		errorCallback : function(positionError:PositionError):void/*PositionErrorCallback*/
	) : int/*long*/;
	function watchPosition(
		successCallback : function(position:Position):void/*PositionCallback*/,
		errorCallback : function(positionError:PositionError):void/*PositionErrorCallback*/,
		options : PositionOptions
	) : int/*long*/;
	function clearWatch(watchId : int/*long*/) : void;

} // end of Geolocation

native final __fake__ class PositionOptions {

	var enableHighAccuracy : boolean;
	var timeout : int/*long*/;
	var maximumAge : int/*long*/;

} // end of PositionOptions

native final __fake__ class Position {

	__readonly__ var coords : Coordinates;
	__readonly__ var timestamp : number/*DOMTimeStamp*/;

} // end of Position

native final __fake__ class Coordinates {

	__readonly__ var latitude : number/*double*/;
	__readonly__ var longitude : number/*double*/;
	__readonly__ var altitude : Nullable.<number>/*double?*/;
	__readonly__ var accuracy : number/*double*/;
	__readonly__ var altitudeAccuracy : Nullable.<number>/*double?*/;
	__readonly__ var heading : Nullable.<number>/*double?*/;
	__readonly__ var speed : Nullable.<number>/*double?*/;

} // end of Coordinates

native final __fake__ class PositionError {

	static __readonly__ var PERMISSION_DENIED : int/*unsigned short*/;
	       __readonly__ var PERMISSION_DENIED : int/*unsigned short*/;
	static __readonly__ var POSITION_UNAVAILABLE : int/*unsigned short*/;
	       __readonly__ var POSITION_UNAVAILABLE : int/*unsigned short*/;
	static __readonly__ var TIMEOUT : int/*unsigned short*/;
	       __readonly__ var TIMEOUT : int/*unsigned short*/;
	__readonly__ var code : int/*unsigned short*/;
	__readonly__ var message : string/*DOMString*/;

} // end of PositionError

native final class Storage {

	__readonly__ var length : int/*unsigned long*/;
	function key(
		index : int/*unsigned long*/
	) : Nullable.<string>/*DOMString?*/;
	function __native_index_operator__(
		key : string/*DOMString*/
	) : Nullable.<string>/*DOMString*/;
	/* getter */
	function getItem(
		key : string/*DOMString*/
	) : Nullable.<string>/*DOMString*/;
	/* setter creator */
	function setItem(
		key : string/*DOMString*/,
		value : string/*DOMString*/
	) : void;
	/* deleter */
	function removeItem(key : string/*DOMString*/) : void;
	function clear() : void;

} // end of Storage

native __fake__ class WindowSessionStorage {

	__readonly__ var sessionStorage : Storage;

} // end of WindowSessionStorage

native __fake__ class WindowLocalStorage {

	__readonly__ var localStorage : Storage;

} // end of WindowLocalStorage

native final class StorageEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : StorageEventInit
	);

	__readonly__ var key : Nullable.<string>/*DOMString?*/;
	__readonly__ var oldValue : Nullable.<string>/*DOMString?*/;
	__readonly__ var newValue : Nullable.<string>/*DOMString?*/;
	__readonly__ var url : string/*DOMString*/;
	__readonly__ var storageArea : Storage;

} // end of StorageEvent

native final class StorageEventInit extends EventInit {

	var key : Nullable.<string>/*DOMString?*/;
	var oldValue : Nullable.<string>/*DOMString?*/;
	var newValue : Nullable.<string>/*DOMString?*/;
	var url : string/*DOMString*/;
	var storageArea : Storage;

} // end of StorageEventInit

native __fake__ class NodeSelector {

	function querySelector(selectors : string/*DOMString*/) : Element;
	function querySelectorAll(
		selectors : string/*DOMString*/
	) : NodeList;

} // end of NodeSelector

native final class MessageEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : MessageEventInit
	);

	__readonly__ var data : variant/*any*/;
	__readonly__ var origin : string/*DOMString*/;
	__readonly__ var lastEventId : string/*DOMString*/;
	__readonly__ var source : Window/*WindowProxy?*/;
	__readonly__ var ports : MessagePort[];

} // end of MessageEvent

native final class MessageEventInit extends EventInit {

	var data : variant/*any*/;
	var origin : string/*DOMString*/;
	var lastEventId : string/*DOMString*/;
	var source : Window/*WindowProxy?*/;
	var ports : MessagePort[];

} // end of MessageEventInit

native final class MessageChannel {

	function constructor();

	__readonly__ var port1 : MessagePort;
	__readonly__ var port2 : MessagePort;

} // end of MessageChannel

native final class MessagePort extends EventTarget {

	function postMessage(message : variant/*any*/) : void;
	function postMessage(
		message : variant/*any*/,
		transfer : Transferable[]
	) : void;
	function start() : void;
	function close() : void;
	// event handlers
	var onmessage : function(:Event):void/*Function?*/;

	// implements Transferable

} // end of MessagePort

native class WorkerGlobalScope extends EventTarget {

	__readonly__ var self : WorkerGlobalScope;
	__readonly__ var location : WorkerLocation;
	function close() : void;
	var onerror : function(:Event):void/*Function?*/;
	var onoffline : function(:Event):void/*Function?*/;
	var ononline : function(:Event):void/*Function?*/;

	// implements WorkerUtils

	function importScripts(...urls : string/*DOMString...*/) : void;
	__readonly__ var navigator : WorkerNavigator;

} // end of WorkerGlobalScope

native final class DedicatedWorkerGlobalScope extends WorkerGlobalScope {

	function postMessage(message : variant/*any*/) : void;
	function postMessage(
		message : variant/*any*/,
		transfer : Transferable[]
	) : void;
	var onmessage : function(:Event):void/*Function?*/;

} // end of DedicatedWorkerGlobalScope

native final class SharedWorkerGlobalScope extends WorkerGlobalScope {

	__readonly__ var name : string/*DOMString*/;
	__readonly__ var applicationCache : ApplicationCache;
	var onconnect : function(:Event):void/*Function?*/;

} // end of SharedWorkerGlobalScope

native final class ErrorEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInitDict : ErrorEventInit
	);

	__readonly__ var message : string/*DOMString*/;
	__readonly__ var filename : string/*DOMString*/;
	__readonly__ var lineno : int/*unsigned long*/;

} // end of ErrorEvent

native final class ErrorEventInit extends EventInit {

	var message : string/*DOMString*/;
	var filename : string/*DOMString*/;
	var lineno : int/*unsigned long*/;

} // end of ErrorEventInit

native __fake__ class AbstractWorker {

	var onerror : function(:Event):void/*Function?*/;

} // end of AbstractWorker

native final class Worker extends EventTarget {

	function constructor(scriptURL : string/*DOMString*/);

	function terminate() : void;
	function postMessage(message : variant/*any*/) : void;
	function postMessage(
		message : variant/*any*/,
		transfer : Transferable[]
	) : void;
	var onmessage : function(:Event):void/*Function?*/;

	// implements AbstractWorker

	var onerror : function(:Event):void/*Function?*/;

} // end of Worker

native final class SharedWorker extends EventTarget {

	function constructor(scriptURL : string/*DOMString*/);
	function constructor(
		scriptURL : string/*DOMString*/,
		name : string/*DOMString*/
	);

	__readonly__ var port : MessagePort;

	// implements AbstractWorker

	var onerror : function(:Event):void/*Function?*/;

} // end of SharedWorker

native __fake__ class WorkerUtils {

	function importScripts(...urls : string/*DOMString...*/) : void;
	__readonly__ var navigator : WorkerNavigator;

	// implements WindowBase64

	function btoa(btoa : string/*DOMString*/) : string/*DOMString*/;
	function atob(atob : string/*DOMString*/) : string/*DOMString*/;

} // end of WorkerUtils

native final class WorkerNavigator {

	// implements NavigatorID

	__readonly__ var appName : string/*DOMString*/;
	__readonly__ var appVersion : string/*DOMString*/;
	__readonly__ var platform : string/*DOMString*/;
	__readonly__ var userAgent : string/*DOMString*/;

	// implements NavigatorOnLine

	__readonly__ var onLine : boolean;

} // end of WorkerNavigator

native final class WorkerLocation {

	// URL decomposition IDL attributes
	__readonly__ var href : string/*DOMString*/;
	__readonly__ var protocol : string/*DOMString*/;
	__readonly__ var host : string/*DOMString*/;
	__readonly__ var hostname : string/*DOMString*/;
	__readonly__ var port : string/*DOMString*/;
	__readonly__ var pathname : string/*DOMString*/;
	__readonly__ var search : string/*DOMString*/;
	__readonly__ var hash : string/*DOMString*/;

} // end of WorkerLocation

native final class EventSource extends EventTarget {

	function constructor(url : string/*DOMString*/);
	function constructor(
		url : string/*DOMString*/,
		eventSourceInitDict : EventSourceInit
	);

	__readonly__ var url : string/*DOMString*/;
	__readonly__ var withCredentials : boolean;
	// ready state
	static __readonly__ var CONNECTING : int/*unsigned short*/;
	       __readonly__ var CONNECTING : int/*unsigned short*/;
	static __readonly__ var OPEN : int/*unsigned short*/;
	       __readonly__ var OPEN : int/*unsigned short*/;
	static __readonly__ var CLOSED : int/*unsigned short*/;
	       __readonly__ var CLOSED : int/*unsigned short*/;
	__readonly__ var readyState : int/*unsigned short*/;
	// networking
	var onopen : function(:Event):void/*Function?*/;
	var onmessage : function(:Event):void/*Function?*/;
	var onerror : function(:Event):void/*Function?*/;
	function close() : void;

} // end of EventSource

native final class EventSourceInit {

	var withCredentials : boolean;

} // end of EventSourceInit

native final class DOMParser {

	function constructor();

	function parseFromString(
		str : string/*DOMString*/,
		type : string/*SupportedType*/
	) : HTMLDocument/*Document*/;

} // end of DOMParser

native final class XMLSerializer {

	function constructor();

	function serializeToString(root : Node) : string/*DOMString*/;

} // end of XMLSerializer

native final class ArrayBuffer {

	function constructor(length : int/*unsigned long*/);

	__readonly__ var byteLength : int/*unsigned long*/;
	function slice(begin : int/*long*/) : ArrayBuffer;
	function slice(
		begin : int/*long*/,
		end : int/*long*/
	) : ArrayBuffer;

	// implements Transferable

} // end of ArrayBuffer

native class ArrayBufferView {

	__readonly__ var buffer : ArrayBuffer;
	__readonly__ var byteOffset : int/*unsigned long*/;
	__readonly__ var byteLength : int/*unsigned long*/;

} // end of ArrayBufferView

native final class Int8Array extends ArrayBufferView {

	function constructor(length : int/*unsigned long*/);
	function constructor(array : Int8Array);
	function constructor(array : int[]/*byte[]*/);
	function constructor(array : number[]);
	function constructor(buffer : ArrayBuffer);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/
	);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/,
		length : int/*unsigned long*/
	);

	static __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	       __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<int>/*byte*/;
	/* getter */
	function get(index : int/*unsigned long*/) : Nullable.<int>/*byte*/;
	/* setter */
	function set(
		index : int/*unsigned long*/,
		value : int/*byte*/
	) : void;
	function set(array : Int8Array) : void;
	function set(
		array : Int8Array,
		offset : int/*unsigned long*/
	) : void;
	function set(array : int[]/*byte[]*/) : void;
	function set(
		array : int[]/*byte[]*/,
		offset : int/*unsigned long*/
	) : void;
	function set(array : number[]) : void;
	function set(
		array : number[],
		offset : int/*unsigned long*/
	) : void;
	function subarray(
		start : int/*long*/,
		end : int/*long*/
	) : Int8Array;

} // end of Int8Array

native class Uint8Array extends ArrayBufferView {

	function constructor(length : int/*unsigned long*/);
	function constructor(array : Uint8Array);
	function constructor(array : int[]/*octet[]*/);
	function constructor(array : number[]);
	function constructor(buffer : ArrayBuffer);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/
	);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/,
		length : int/*unsigned long*/
	);

	static __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	       __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<int>/*octet*/;
	/* getter */
	function get(
		index : int/*unsigned long*/
	) : Nullable.<int>/*octet*/;
	/* setter */
	function set(
		index : int/*unsigned long*/,
		value : int/*octet*/
	) : void;
	function set(array : Uint8Array) : void;
	function set(
		array : Uint8Array,
		offset : int/*unsigned long*/
	) : void;
	function set(array : int[]/*octet[]*/) : void;
	function set(
		array : int[]/*octet[]*/,
		offset : int/*unsigned long*/
	) : void;
	function set(array : number[]) : void;
	function set(
		array : number[],
		offset : int/*unsigned long*/
	) : void;
	function subarray(
		start : int/*long*/,
		end : int/*long*/
	) : Uint8Array;

} // end of Uint8Array

native final class Uint8ClampedArray extends Uint8Array {

	function constructor(length : int/*unsigned long*/);
	function constructor(array : Uint8ClampedArray);
	function constructor(array : Uint8Array);
	function constructor(array : int[]/*octet[]*/);
	function constructor(array : number[]);
	function constructor(buffer : ArrayBuffer);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/
	);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/,
		length : int/*unsigned long*/
	);

	/* setter */
	// inherits function set(index : int/*unsigned long*/, value : int/*octet*/) : void;
	function set(array : Uint8ClampedArray) : void;
	function set(
		array : Uint8ClampedArray,
		offset : int/*unsigned long*/
	) : void;
	// inherits function set(array : int[]/*octet[]*/) : void;
	// inherits function set(array : int[]/*octet[]*/, offset : int/*unsigned long*/) : void;
	// inherits function set(array : number[]) : void;
	// inherits function set(array : number[], offset : int/*unsigned long*/) : void;
	override function subarray(
		start : int/*long*/,
		end : int/*long*/
	) : Uint8ClampedArray;

} // end of Uint8ClampedArray

native final class Int16Array extends ArrayBufferView {

	function constructor(length : int/*unsigned long*/);
	function constructor(array : Int16Array);
	function constructor(array : int[]/*short[]*/);
	function constructor(array : number[]);
	function constructor(buffer : ArrayBuffer);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/
	);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/,
		length : int/*unsigned long*/
	);

	static __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	       __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<int>/*short*/;
	/* getter */
	function get(
		index : int/*unsigned long*/
	) : Nullable.<int>/*short*/;
	/* setter */
	function set(
		index : int/*unsigned long*/,
		value : int/*short*/
	) : void;
	function set(array : Int16Array) : void;
	function set(
		array : Int16Array,
		offset : int/*unsigned long*/
	) : void;
	function set(array : int[]/*short[]*/) : void;
	function set(
		array : int[]/*short[]*/,
		offset : int/*unsigned long*/
	) : void;
	function set(array : number[]) : void;
	function set(
		array : number[],
		offset : int/*unsigned long*/
	) : void;
	function subarray(
		start : int/*long*/,
		end : int/*long*/
	) : Int16Array;

} // end of Int16Array

native final class Uint16Array extends ArrayBufferView {

	function constructor(length : int/*unsigned long*/);
	function constructor(array : Uint16Array);
	function constructor(array : int[]/*unsigned short[]*/);
	function constructor(array : number[]);
	function constructor(buffer : ArrayBuffer);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/
	);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/,
		length : int/*unsigned long*/
	);

	static __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	       __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<int>/*unsigned short*/;
	/* getter */
	function get(
		index : int/*unsigned long*/
	) : Nullable.<int>/*unsigned short*/;
	/* setter */
	function set(
		index : int/*unsigned long*/,
		value : int/*unsigned short*/
	) : void;
	function set(array : Uint16Array) : void;
	function set(
		array : Uint16Array,
		offset : int/*unsigned long*/
	) : void;
	function set(array : int[]/*unsigned short[]*/) : void;
	function set(
		array : int[]/*unsigned short[]*/,
		offset : int/*unsigned long*/
	) : void;
	function set(array : number[]) : void;
	function set(
		array : number[],
		offset : int/*unsigned long*/
	) : void;
	function subarray(
		start : int/*long*/,
		end : int/*long*/
	) : Uint16Array;

} // end of Uint16Array

native final class Int32Array extends ArrayBufferView {

	function constructor(length : int/*unsigned long*/);
	function constructor(array : Int32Array);
	function constructor(array : int[]/*long[]*/);
	function constructor(array : number[]);
	function constructor(buffer : ArrayBuffer);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/
	);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/,
		length : int/*unsigned long*/
	);

	static __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	       __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<int>/*long*/;
	/* getter */
	function get(index : int/*unsigned long*/) : Nullable.<int>/*long*/;
	/* setter */
	function set(
		index : int/*unsigned long*/,
		value : int/*long*/
	) : void;
	function set(array : Int32Array) : void;
	function set(
		array : Int32Array,
		offset : int/*unsigned long*/
	) : void;
	function set(array : int[]/*long[]*/) : void;
	function set(
		array : int[]/*long[]*/,
		offset : int/*unsigned long*/
	) : void;
	function set(array : number[]) : void;
	function set(
		array : number[],
		offset : int/*unsigned long*/
	) : void;
	function subarray(
		start : int/*long*/,
		end : int/*long*/
	) : Int32Array;

} // end of Int32Array

native final class Uint32Array extends ArrayBufferView {

	function constructor(length : int/*unsigned long*/);
	function constructor(array : Uint32Array);
	function constructor(array : int[]/*unsigned long[]*/);
	function constructor(array : number[]);
	function constructor(buffer : ArrayBuffer);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/
	);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/,
		length : int/*unsigned long*/
	);

	static __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	       __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<int>/*unsigned long*/;
	/* getter */
	function get(
		index : int/*unsigned long*/
	) : Nullable.<int>/*unsigned long*/;
	/* setter */
	function set(
		index : int/*unsigned long*/,
		value : int/*unsigned long*/
	) : void;
	function set(array : Uint32Array) : void;
	function set(
		array : Uint32Array,
		offset : int/*unsigned long*/
	) : void;
	function set(array : int[]/*unsigned long[]*/) : void;
	function set(
		array : int[]/*unsigned long[]*/,
		offset : int/*unsigned long*/
	) : void;
	function set(array : number[]) : void;
	function set(
		array : number[],
		offset : int/*unsigned long*/
	) : void;
	function subarray(
		start : int/*long*/,
		end : int/*long*/
	) : Uint32Array;

} // end of Uint32Array

native final class Float32Array extends ArrayBufferView {

	function constructor(length : int/*unsigned long*/);
	function constructor(array : Float32Array);
	function constructor(array : number[]/*float[]*/);
	function constructor(buffer : ArrayBuffer);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/
	);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/,
		length : int/*unsigned long*/
	);

	static __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	       __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<number>/*float*/;
	/* getter */
	function get(
		index : int/*unsigned long*/
	) : Nullable.<number>/*float*/;
	/* setter */
	function set(
		index : int/*unsigned long*/,
		value : number/*float*/
	) : void;
	function set(array : Float32Array) : void;
	function set(
		array : Float32Array,
		offset : int/*unsigned long*/
	) : void;
	function set(array : number[]/*float[]*/) : void;
	function set(
		array : number[]/*float[]*/,
		offset : int/*unsigned long*/
	) : void;
	function subarray(
		start : int/*long*/,
		end : int/*long*/
	) : Float32Array;

} // end of Float32Array

native final class Float64Array extends ArrayBufferView {

	function constructor(length : int/*unsigned long*/);
	function constructor(array : Float64Array);
	function constructor(array : number[]/*double[]*/);
	function constructor(buffer : ArrayBuffer);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/
	);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/,
		length : int/*unsigned long*/
	);

	static __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	       __readonly__ var BYTES_PER_ELEMENT : int/*long*/;
	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<number>/*double*/;
	/* getter */
	function get(
		index : int/*unsigned long*/
	) : Nullable.<number>/*double*/;
	/* setter */
	function set(
		index : int/*unsigned long*/,
		value : number/*double*/
	) : void;
	function set(array : Float64Array) : void;
	function set(
		array : Float64Array,
		offset : int/*unsigned long*/
	) : void;
	function set(array : number[]/*double[]*/) : void;
	function set(
		array : number[]/*double[]*/,
		offset : int/*unsigned long*/
	) : void;
	function subarray(
		start : int/*long*/,
		end : int/*long*/
	) : Float64Array;

} // end of Float64Array

native final class DataView extends ArrayBufferView {

	function constructor(buffer : ArrayBuffer);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/
	);
	function constructor(
		buffer : ArrayBuffer,
		byteOffset : int/*unsigned long*/,
		byteLength : int/*unsigned long*/
	);

	// Gets the value of the given type at the specified byte offset
	// from the start of the view. There is no alignment constraint;
	// multi-byte values may be fetched from any offset.
	//
	// For multi-byte values, the optional littleEndian argument
	// indicates whether a big-endian or little-endian value should be
	// read. If false or undefined, a big-endian value is read.
	//
	// These methods raise an INDEX_SIZE_ERR exception if they would read
	// beyond the end of the view.
	function getInt8(byteOffset : int/*unsigned long*/) : int/*byte*/;
	function getUint8(byteOffset : int/*unsigned long*/) : int/*octet*/;
	function getInt16(byteOffset : int/*unsigned long*/) : int/*short*/;
	function getInt16(
		byteOffset : int/*unsigned long*/,
		littleEndian : boolean
	) : int/*short*/;
	function getUint16(
		byteOffset : int/*unsigned long*/
	) : int/*unsigned short*/;
	function getUint16(
		byteOffset : int/*unsigned long*/,
		littleEndian : boolean
	) : int/*unsigned short*/;
	function getInt32(byteOffset : int/*unsigned long*/) : int/*long*/;
	function getInt32(
		byteOffset : int/*unsigned long*/,
		littleEndian : boolean
	) : int/*long*/;
	function getUint32(
		byteOffset : int/*unsigned long*/
	) : int/*unsigned long*/;
	function getUint32(
		byteOffset : int/*unsigned long*/,
		littleEndian : boolean
	) : int/*unsigned long*/;
	function getFloat32(
		byteOffset : int/*unsigned long*/
	) : number/*float*/;
	function getFloat32(
		byteOffset : int/*unsigned long*/,
		littleEndian : boolean
	) : number/*float*/;
	function getFloat64(
		byteOffset : int/*unsigned long*/
	) : number/*double*/;
	function getFloat64(
		byteOffset : int/*unsigned long*/,
		littleEndian : boolean
	) : number/*double*/;
	// Stores a value of the given type at the specified byte offset
	// from the start of the view. There is no alignment constraint;
	// multi-byte values may be stored at any offset.
	//
	// For multi-byte values, the optional littleEndian argument
	// indicates whether the value should be stored in big-endian or
	// little-endian byte order. If false or undefined, the value is
	// stored in big-endian byte order.
	//
	// These methods throw exceptions if they would write beyond the end
	// of the view.
	function setInt8(
		byteOffset : int/*unsigned long*/,
		value : int/*byte*/
	) : void;
	function setUint8(
		byteOffset : int/*unsigned long*/,
		value : int/*octet*/
	) : void;
	function setInt16(
		byteOffset : int/*unsigned long*/,
		value : int/*short*/
	) : void;
	function setInt16(
		byteOffset : int/*unsigned long*/,
		value : int/*short*/,
		littleEndian : boolean
	) : void;
	function setUint16(
		byteOffset : int/*unsigned long*/,
		value : int/*unsigned short*/
	) : void;
	function setUint16(
		byteOffset : int/*unsigned long*/,
		value : int/*unsigned short*/,
		littleEndian : boolean
	) : void;
	function setInt32(
		byteOffset : int/*unsigned long*/,
		value : int/*long*/
	) : void;
	function setInt32(
		byteOffset : int/*unsigned long*/,
		value : int/*long*/,
		littleEndian : boolean
	) : void;
	function setUint32(
		byteOffset : int/*unsigned long*/,
		value : int/*unsigned long*/
	) : void;
	function setUint32(
		byteOffset : int/*unsigned long*/,
		value : int/*unsigned long*/,
		littleEndian : boolean
	) : void;
	function setFloat32(
		byteOffset : int/*unsigned long*/,
		value : number/*float*/
	) : void;
	function setFloat32(
		byteOffset : int/*unsigned long*/,
		value : number/*float*/,
		littleEndian : boolean
	) : void;
	function setFloat64(
		byteOffset : int/*unsigned long*/,
		value : number/*double*/
	) : void;
	function setFloat64(
		byteOffset : int/*unsigned long*/,
		value : number/*double*/,
		littleEndian : boolean
	) : void;

} // end of DataView

native final class CanvasRenderingContext2D {

	// back-reference to the canvas
	__readonly__ var canvas : HTMLCanvasElement;
	// state
	function save() : void;
	// push state on state stack
	function restore() : void;
	// pop state stack and restore state

	// compositing
	var globalAlpha : number/*double*/;
	// (default 1.0)
	var globalCompositeOperation : string/*DOMString*/;
	// (default source-over)

	// colors and styles (see also the CanvasLineStyles interface)
	var strokeStyle : variant/*any*/;
	// (default black)
	var fillStyle : variant/*any*/;
	// (default black)
	function createLinearGradient(
		x0 : number/*double*/,
		y0 : number/*double*/,
		x1 : number/*double*/,
		y1 : number/*double*/
	) : CanvasGradient;
	function createRadialGradient(
		x0 : number/*double*/,
		y0 : number/*double*/,
		r0 : number/*double*/,
		x1 : number/*double*/,
		y1 : number/*double*/,
		r1 : number/*double*/
	) : CanvasGradient;
	function createPattern(
		image : HTMLImageElement,
		repetition : string/*DOMString*/
	) : CanvasPattern;
	function createPattern(
		image : HTMLCanvasElement,
		repetition : string/*DOMString*/
	) : CanvasPattern;
	function createPattern(
		image : HTMLVideoElement,
		repetition : string/*DOMString*/
	) : CanvasPattern;
	// shadows
	var shadowOffsetX : number/*double*/;
	// (default 0)
	var shadowOffsetY : number/*double*/;
	// (default 0)
	var shadowBlur : number/*double*/;
	// (default 0)
	var shadowColor : string/*DOMString*/;
	// (default transparent black)

	// rects
	function clearRect(
		x : number/*double*/,
		y : number/*double*/,
		w : number/*double*/,
		h : number/*double*/
	) : void;
	function fillRect(
		x : number/*double*/,
		y : number/*double*/,
		w : number/*double*/,
		h : number/*double*/
	) : void;
	function strokeRect(
		x : number/*double*/,
		y : number/*double*/,
		w : number/*double*/,
		h : number/*double*/
	) : void;
	// current default path API (see also CanvasPathMethods)
	function beginPath() : void;
	function fill() : void;
	function stroke() : void;
	function drawSystemFocusRing(element : Element) : void;
	function drawCustomFocusRing(element : Element) : boolean;
	function scrollPathIntoView() : void;
	function clip() : void;
	function isPointInPath(
		x : number/*double*/,
		y : number/*double*/
	) : boolean;
	// text (see also the CanvasText interface)
	function fillText(
		text : string/*DOMString*/,
		x : number/*double*/,
		y : number/*double*/
	) : void;
	function fillText(
		text : string/*DOMString*/,
		x : number/*double*/,
		y : number/*double*/,
		maxWidth : number/*double*/
	) : void;
	function strokeText(
		text : string/*DOMString*/,
		x : number/*double*/,
		y : number/*double*/
	) : void;
	function strokeText(
		text : string/*DOMString*/,
		x : number/*double*/,
		y : number/*double*/,
		maxWidth : number/*double*/
	) : void;
	function measureText(text : string/*DOMString*/) : TextMetrics;
	// drawing images
	function drawImage(
		image : HTMLImageElement,
		dx : number/*double*/,
		dy : number/*double*/
	) : void;
	function drawImage(
		image : HTMLCanvasElement,
		dx : number/*double*/,
		dy : number/*double*/
	) : void;
	function drawImage(
		image : HTMLVideoElement,
		dx : number/*double*/,
		dy : number/*double*/
	) : void;
	function drawImage(
		image : HTMLImageElement,
		dx : number/*double*/,
		dy : number/*double*/,
		dw : number/*double*/,
		dh : number/*double*/
	) : void;
	function drawImage(
		image : HTMLCanvasElement,
		dx : number/*double*/,
		dy : number/*double*/,
		dw : number/*double*/,
		dh : number/*double*/
	) : void;
	function drawImage(
		image : HTMLVideoElement,
		dx : number/*double*/,
		dy : number/*double*/,
		dw : number/*double*/,
		dh : number/*double*/
	) : void;
	function drawImage(
		image : HTMLImageElement,
		sx : number/*double*/,
		sy : number/*double*/,
		sw : number/*double*/,
		sh : number/*double*/,
		dx : number/*double*/,
		dy : number/*double*/,
		dw : number/*double*/,
		dh : number/*double*/
	) : void;
	function drawImage(
		image : HTMLCanvasElement,
		sx : number/*double*/,
		sy : number/*double*/,
		sw : number/*double*/,
		sh : number/*double*/,
		dx : number/*double*/,
		dy : number/*double*/,
		dw : number/*double*/,
		dh : number/*double*/
	) : void;
	function drawImage(
		image : HTMLVideoElement,
		sx : number/*double*/,
		sy : number/*double*/,
		sw : number/*double*/,
		sh : number/*double*/,
		dx : number/*double*/,
		dy : number/*double*/,
		dw : number/*double*/,
		dh : number/*double*/
	) : void;
	// pixel manipulation
	function createImageData(
		sw : number/*double*/,
		sh : number/*double*/
	) : ImageData;
	function createImageData(imagedata : ImageData) : ImageData;
	function getImageData(
		sx : number/*double*/,
		sy : number/*double*/,
		sw : number/*double*/,
		sh : number/*double*/
	) : ImageData;
	function putImageData(
		imagedata : ImageData,
		dx : number/*double*/,
		dy : number/*double*/
	) : void;
	function putImageData(
		imagedata : ImageData,
		dx : number/*double*/,
		dy : number/*double*/,
		dirtyX : number/*double*/,
		dirtyY : number/*double*/,
		dirtyWidth : number/*double*/,
		dirtyHeight : number/*double*/
	) : void;

	// implements CanvasTransformation

	// transformations (default transform is the identity matrix)
	function scale(x : number/*double*/, y : number/*double*/) : void;
	function rotate(angle : number/*double*/) : void;
	function translate(
		x : number/*double*/,
		y : number/*double*/
	) : void;
	function transform(
		a : number/*double*/,
		b : number/*double*/,
		c : number/*double*/,
		d : number/*double*/,
		e : number/*double*/,
		f : number/*double*/
	) : void;
	function setTransform(
		a : number/*double*/,
		b : number/*double*/,
		c : number/*double*/,
		d : number/*double*/,
		e : number/*double*/,
		f : number/*double*/
	) : void;

	// implements CanvasLineStyles

	// line caps/joins
	var lineWidth : number/*double*/;
	// (default 1)
	var lineCap : string/*DOMString*/;
	// "butt", "round", "square" (default "butt")
	var lineJoin : string/*DOMString*/;
	// "round", "bevel", "miter" (default "miter")
	var miterLimit : number/*double*/;
	// (default 10)

	// implements CanvasPathMethods

	// shared path API methods
	function closePath() : void;
	function moveTo(x : number/*double*/, y : number/*double*/) : void;
	function lineTo(x : number/*double*/, y : number/*double*/) : void;
	function quadraticCurveTo(
		cpx : number/*double*/,
		cpy : number/*double*/,
		x : number/*double*/,
		y : number/*double*/
	) : void;
	function bezierCurveTo(
		cp1x : number/*double*/,
		cp1y : number/*double*/,
		cp2x : number/*double*/,
		cp2y : number/*double*/,
		x : number/*double*/,
		y : number/*double*/
	) : void;
	function arcTo(
		x1 : number/*double*/,
		y1 : number/*double*/,
		x2 : number/*double*/,
		y2 : number/*double*/,
		radius : number/*double*/
	) : void;
	function rect(
		x : number/*double*/,
		y : number/*double*/,
		w : number/*double*/,
		h : number/*double*/
	) : void;
	function arc(
		x : number/*double*/,
		y : number/*double*/,
		radius : number/*double*/,
		startAngle : number/*double*/,
		endAngle : number/*double*/
	) : void;
	function arc(
		x : number/*double*/,
		y : number/*double*/,
		radius : number/*double*/,
		startAngle : number/*double*/,
		endAngle : number/*double*/,
		anticlockwise : boolean
	) : void;

	// implements CanvasText

	// text
	var font : string/*DOMString*/;
	// (default 10px sans-serif)
	var textAlign : string/*DOMString*/;
	// "start", "end", "left", "right", "center" (default: "start")
	var textBaseline : string/*DOMString*/;
	// "top", "hanging", "middle", "alphabetic", "ideographic", "bottom" (default: "alphabetic")

} // end of CanvasRenderingContext2D

native __fake__ class CanvasTransformation {

	// transformations (default transform is the identity matrix)
	function scale(x : number/*double*/, y : number/*double*/) : void;
	function rotate(angle : number/*double*/) : void;
	function translate(
		x : number/*double*/,
		y : number/*double*/
	) : void;
	function transform(
		a : number/*double*/,
		b : number/*double*/,
		c : number/*double*/,
		d : number/*double*/,
		e : number/*double*/,
		f : number/*double*/
	) : void;
	function setTransform(
		a : number/*double*/,
		b : number/*double*/,
		c : number/*double*/,
		d : number/*double*/,
		e : number/*double*/,
		f : number/*double*/
	) : void;

} // end of CanvasTransformation

native __fake__ class CanvasLineStyles {

	// line caps/joins
	var lineWidth : number/*double*/;
	// (default 1)
	var lineCap : string/*DOMString*/;
	// "butt", "round", "square" (default "butt")
	var lineJoin : string/*DOMString*/;
	// "round", "bevel", "miter" (default "miter")
	var miterLimit : number/*double*/;
	// (default 10)

} // end of CanvasLineStyles

native __fake__ class CanvasText {

	// text
	var font : string/*DOMString*/;
	// (default 10px sans-serif)
	var textAlign : string/*DOMString*/;
	// "start", "end", "left", "right", "center" (default: "start")
	var textBaseline : string/*DOMString*/;
	// "top", "hanging", "middle", "alphabetic", "ideographic", "bottom" (default: "alphabetic")

} // end of CanvasText

native __fake__ class CanvasPathMethods {

	// shared path API methods
	function closePath() : void;
	function moveTo(x : number/*double*/, y : number/*double*/) : void;
	function lineTo(x : number/*double*/, y : number/*double*/) : void;
	function quadraticCurveTo(
		cpx : number/*double*/,
		cpy : number/*double*/,
		x : number/*double*/,
		y : number/*double*/
	) : void;
	function bezierCurveTo(
		cp1x : number/*double*/,
		cp1y : number/*double*/,
		cp2x : number/*double*/,
		cp2y : number/*double*/,
		x : number/*double*/,
		y : number/*double*/
	) : void;
	function arcTo(
		x1 : number/*double*/,
		y1 : number/*double*/,
		x2 : number/*double*/,
		y2 : number/*double*/,
		radius : number/*double*/
	) : void;
	function rect(
		x : number/*double*/,
		y : number/*double*/,
		w : number/*double*/,
		h : number/*double*/
	) : void;
	function arc(
		x : number/*double*/,
		y : number/*double*/,
		radius : number/*double*/,
		startAngle : number/*double*/,
		endAngle : number/*double*/
	) : void;
	function arc(
		x : number/*double*/,
		y : number/*double*/,
		radius : number/*double*/,
		startAngle : number/*double*/,
		endAngle : number/*double*/,
		anticlockwise : boolean
	) : void;

} // end of CanvasPathMethods

native final class CanvasGradient {

	// opaque object
	function addColorStop(
		offset : number/*double*/,
		color : string/*DOMString*/
	) : void;

} // end of CanvasGradient

native final class CanvasPattern {

	// opaque object

} // end of CanvasPattern

native final class TextMetrics {

	__readonly__ var width : number/*double*/;

} // end of TextMetrics

native final class ImageData {

	__readonly__ var width : int/*unsigned long*/;
	__readonly__ var height : int/*unsigned long*/;
	__readonly__ var data : Uint8ClampedArray;

} // end of ImageData

native final class WebGLContextAttributes {

	var alpha : boolean;
	var depth : boolean;
	var stencil : boolean;
	var antialias : boolean;
	var premultipliedAlpha : boolean;
	var preserveDrawingBuffer : boolean;

} // end of WebGLContextAttributes

native class WebGLObject {
}

native final class WebGLBuffer extends WebGLObject {
}

native final class WebGLFramebuffer extends WebGLObject {
}

native final class WebGLProgram extends WebGLObject {
}

native final class WebGLRenderbuffer extends WebGLObject {
}

native final class WebGLShader extends WebGLObject {
}

native final class WebGLTexture extends WebGLObject {
}

native final class WebGLUniformLocation {
}

native final class WebGLActiveInfo {

	__readonly__ var size : int/*GLint*/;
	__readonly__ var type : int/*GLenum*/;
	__readonly__ var name : string/*DOMString*/;

} // end of WebGLActiveInfo

native final class WebGLShaderPrecisionFormat {

	__readonly__ var rangeMin : int/*GLint*/;
	__readonly__ var rangeMax : int/*GLint*/;
	__readonly__ var precision : int/*GLint*/;

} // end of WebGLShaderPrecisionFormat

native final class WebGLRenderingContext {

	/* ClearBufferMask */
	static __readonly__ var DEPTH_BUFFER_BIT : int/*GLenum*/;
	       __readonly__ var DEPTH_BUFFER_BIT : int/*GLenum*/;
	static __readonly__ var STENCIL_BUFFER_BIT : int/*GLenum*/;
	       __readonly__ var STENCIL_BUFFER_BIT : int/*GLenum*/;
	static __readonly__ var COLOR_BUFFER_BIT : int/*GLenum*/;
	       __readonly__ var COLOR_BUFFER_BIT : int/*GLenum*/;
	/* BeginMode */
	static __readonly__ var POINTS : int/*GLenum*/;
	       __readonly__ var POINTS : int/*GLenum*/;
	static __readonly__ var LINES : int/*GLenum*/;
	       __readonly__ var LINES : int/*GLenum*/;
	static __readonly__ var LINE_LOOP : int/*GLenum*/;
	       __readonly__ var LINE_LOOP : int/*GLenum*/;
	static __readonly__ var LINE_STRIP : int/*GLenum*/;
	       __readonly__ var LINE_STRIP : int/*GLenum*/;
	static __readonly__ var TRIANGLES : int/*GLenum*/;
	       __readonly__ var TRIANGLES : int/*GLenum*/;
	static __readonly__ var TRIANGLE_STRIP : int/*GLenum*/;
	       __readonly__ var TRIANGLE_STRIP : int/*GLenum*/;
	static __readonly__ var TRIANGLE_FAN : int/*GLenum*/;
	       __readonly__ var TRIANGLE_FAN : int/*GLenum*/;
	/* AlphaFunction (not supported in ES20) */
	/*      NEVER */
	/*      LESS */
	/*      EQUAL */
	/*      LEQUAL */
	/*      GREATER */
	/*      NOTEQUAL */
	/*      GEQUAL */
	/*      ALWAYS */

	/* BlendingFactorDest */
	static __readonly__ var ZERO : int/*GLenum*/;
	       __readonly__ var ZERO : int/*GLenum*/;
	static __readonly__ var ONE : int/*GLenum*/;
	       __readonly__ var ONE : int/*GLenum*/;
	static __readonly__ var SRC_COLOR : int/*GLenum*/;
	       __readonly__ var SRC_COLOR : int/*GLenum*/;
	static __readonly__ var ONE_MINUS_SRC_COLOR : int/*GLenum*/;
	       __readonly__ var ONE_MINUS_SRC_COLOR : int/*GLenum*/;
	static __readonly__ var SRC_ALPHA : int/*GLenum*/;
	       __readonly__ var SRC_ALPHA : int/*GLenum*/;
	static __readonly__ var ONE_MINUS_SRC_ALPHA : int/*GLenum*/;
	       __readonly__ var ONE_MINUS_SRC_ALPHA : int/*GLenum*/;
	static __readonly__ var DST_ALPHA : int/*GLenum*/;
	       __readonly__ var DST_ALPHA : int/*GLenum*/;
	static __readonly__ var ONE_MINUS_DST_ALPHA : int/*GLenum*/;
	       __readonly__ var ONE_MINUS_DST_ALPHA : int/*GLenum*/;
	/* BlendingFactorSrc */
	/*      ZERO */
	/*      ONE */
	static __readonly__ var DST_COLOR : int/*GLenum*/;
	       __readonly__ var DST_COLOR : int/*GLenum*/;
	static __readonly__ var ONE_MINUS_DST_COLOR : int/*GLenum*/;
	       __readonly__ var ONE_MINUS_DST_COLOR : int/*GLenum*/;
	static __readonly__ var SRC_ALPHA_SATURATE : int/*GLenum*/;
	       __readonly__ var SRC_ALPHA_SATURATE : int/*GLenum*/;
	/*      SRC_ALPHA */
	/*      ONE_MINUS_SRC_ALPHA */
	/*      DST_ALPHA */
	/*      ONE_MINUS_DST_ALPHA */

	/* BlendEquationSeparate */
	static __readonly__ var FUNC_ADD : int/*GLenum*/;
	       __readonly__ var FUNC_ADD : int/*GLenum*/;
	static __readonly__ var BLEND_EQUATION : int/*GLenum*/;
	       __readonly__ var BLEND_EQUATION : int/*GLenum*/;
	static __readonly__ var BLEND_EQUATION_RGB : int/*GLenum*/;
	       __readonly__ var BLEND_EQUATION_RGB : int/*GLenum*/;
	/* same as BLEND_EQUATION */
	static __readonly__ var BLEND_EQUATION_ALPHA : int/*GLenum*/;
	       __readonly__ var BLEND_EQUATION_ALPHA : int/*GLenum*/;
	/* BlendSubtract */
	static __readonly__ var FUNC_SUBTRACT : int/*GLenum*/;
	       __readonly__ var FUNC_SUBTRACT : int/*GLenum*/;
	static __readonly__ var FUNC_REVERSE_SUBTRACT : int/*GLenum*/;
	       __readonly__ var FUNC_REVERSE_SUBTRACT : int/*GLenum*/;
	/* Separate Blend Functions */
	static __readonly__ var BLEND_DST_RGB : int/*GLenum*/;
	       __readonly__ var BLEND_DST_RGB : int/*GLenum*/;
	static __readonly__ var BLEND_SRC_RGB : int/*GLenum*/;
	       __readonly__ var BLEND_SRC_RGB : int/*GLenum*/;
	static __readonly__ var BLEND_DST_ALPHA : int/*GLenum*/;
	       __readonly__ var BLEND_DST_ALPHA : int/*GLenum*/;
	static __readonly__ var BLEND_SRC_ALPHA : int/*GLenum*/;
	       __readonly__ var BLEND_SRC_ALPHA : int/*GLenum*/;
	static __readonly__ var CONSTANT_COLOR : int/*GLenum*/;
	       __readonly__ var CONSTANT_COLOR : int/*GLenum*/;
	static __readonly__ var ONE_MINUS_CONSTANT_COLOR : int/*GLenum*/;
	       __readonly__ var ONE_MINUS_CONSTANT_COLOR : int/*GLenum*/;
	static __readonly__ var CONSTANT_ALPHA : int/*GLenum*/;
	       __readonly__ var CONSTANT_ALPHA : int/*GLenum*/;
	static __readonly__ var ONE_MINUS_CONSTANT_ALPHA : int/*GLenum*/;
	       __readonly__ var ONE_MINUS_CONSTANT_ALPHA : int/*GLenum*/;
	static __readonly__ var BLEND_COLOR : int/*GLenum*/;
	       __readonly__ var BLEND_COLOR : int/*GLenum*/;
	/* Buffer Objects */
	static __readonly__ var ARRAY_BUFFER : int/*GLenum*/;
	       __readonly__ var ARRAY_BUFFER : int/*GLenum*/;
	static __readonly__ var ELEMENT_ARRAY_BUFFER : int/*GLenum*/;
	       __readonly__ var ELEMENT_ARRAY_BUFFER : int/*GLenum*/;
	static __readonly__ var ARRAY_BUFFER_BINDING : int/*GLenum*/;
	       __readonly__ var ARRAY_BUFFER_BINDING : int/*GLenum*/;
	static __readonly__ var ELEMENT_ARRAY_BUFFER_BINDING : int/*GLenum*/;
	       __readonly__ var ELEMENT_ARRAY_BUFFER_BINDING : int/*GLenum*/;
	static __readonly__ var STREAM_DRAW : int/*GLenum*/;
	       __readonly__ var STREAM_DRAW : int/*GLenum*/;
	static __readonly__ var STATIC_DRAW : int/*GLenum*/;
	       __readonly__ var STATIC_DRAW : int/*GLenum*/;
	static __readonly__ var DYNAMIC_DRAW : int/*GLenum*/;
	       __readonly__ var DYNAMIC_DRAW : int/*GLenum*/;
	static __readonly__ var BUFFER_SIZE : int/*GLenum*/;
	       __readonly__ var BUFFER_SIZE : int/*GLenum*/;
	static __readonly__ var BUFFER_USAGE : int/*GLenum*/;
	       __readonly__ var BUFFER_USAGE : int/*GLenum*/;
	static __readonly__ var CURRENT_VERTEX_ATTRIB : int/*GLenum*/;
	       __readonly__ var CURRENT_VERTEX_ATTRIB : int/*GLenum*/;
	/* CullFaceMode */
	static __readonly__ var FRONT : int/*GLenum*/;
	       __readonly__ var FRONT : int/*GLenum*/;
	static __readonly__ var BACK : int/*GLenum*/;
	       __readonly__ var BACK : int/*GLenum*/;
	static __readonly__ var FRONT_AND_BACK : int/*GLenum*/;
	       __readonly__ var FRONT_AND_BACK : int/*GLenum*/;
	/* DepthFunction */
	/*      NEVER */
	/*      LESS */
	/*      EQUAL */
	/*      LEQUAL */
	/*      GREATER */
	/*      NOTEQUAL */
	/*      GEQUAL */
	/*      ALWAYS */

	/* EnableCap */
	/* TEXTURE_2D */
	static __readonly__ var CULL_FACE : int/*GLenum*/;
	       __readonly__ var CULL_FACE : int/*GLenum*/;
	static __readonly__ var BLEND : int/*GLenum*/;
	       __readonly__ var BLEND : int/*GLenum*/;
	static __readonly__ var DITHER : int/*GLenum*/;
	       __readonly__ var DITHER : int/*GLenum*/;
	static __readonly__ var STENCIL_TEST : int/*GLenum*/;
	       __readonly__ var STENCIL_TEST : int/*GLenum*/;
	static __readonly__ var DEPTH_TEST : int/*GLenum*/;
	       __readonly__ var DEPTH_TEST : int/*GLenum*/;
	static __readonly__ var SCISSOR_TEST : int/*GLenum*/;
	       __readonly__ var SCISSOR_TEST : int/*GLenum*/;
	static __readonly__ var POLYGON_OFFSET_FILL : int/*GLenum*/;
	       __readonly__ var POLYGON_OFFSET_FILL : int/*GLenum*/;
	static __readonly__ var SAMPLE_ALPHA_TO_COVERAGE : int/*GLenum*/;
	       __readonly__ var SAMPLE_ALPHA_TO_COVERAGE : int/*GLenum*/;
	static __readonly__ var SAMPLE_COVERAGE : int/*GLenum*/;
	       __readonly__ var SAMPLE_COVERAGE : int/*GLenum*/;
	/* ErrorCode */
	static __readonly__ var NO_ERROR : int/*GLenum*/;
	       __readonly__ var NO_ERROR : int/*GLenum*/;
	static __readonly__ var INVALID_ENUM : int/*GLenum*/;
	       __readonly__ var INVALID_ENUM : int/*GLenum*/;
	static __readonly__ var INVALID_VALUE : int/*GLenum*/;
	       __readonly__ var INVALID_VALUE : int/*GLenum*/;
	static __readonly__ var INVALID_OPERATION : int/*GLenum*/;
	       __readonly__ var INVALID_OPERATION : int/*GLenum*/;
	static __readonly__ var OUT_OF_MEMORY : int/*GLenum*/;
	       __readonly__ var OUT_OF_MEMORY : int/*GLenum*/;
	/* FrontFaceDirection */
	static __readonly__ var CW : int/*GLenum*/;
	       __readonly__ var CW : int/*GLenum*/;
	static __readonly__ var CCW : int/*GLenum*/;
	       __readonly__ var CCW : int/*GLenum*/;
	/* GetPName */
	static __readonly__ var LINE_WIDTH : int/*GLenum*/;
	       __readonly__ var LINE_WIDTH : int/*GLenum*/;
	static __readonly__ var ALIASED_POINT_SIZE_RANGE : int/*GLenum*/;
	       __readonly__ var ALIASED_POINT_SIZE_RANGE : int/*GLenum*/;
	static __readonly__ var ALIASED_LINE_WIDTH_RANGE : int/*GLenum*/;
	       __readonly__ var ALIASED_LINE_WIDTH_RANGE : int/*GLenum*/;
	static __readonly__ var CULL_FACE_MODE : int/*GLenum*/;
	       __readonly__ var CULL_FACE_MODE : int/*GLenum*/;
	static __readonly__ var FRONT_FACE : int/*GLenum*/;
	       __readonly__ var FRONT_FACE : int/*GLenum*/;
	static __readonly__ var DEPTH_RANGE : int/*GLenum*/;
	       __readonly__ var DEPTH_RANGE : int/*GLenum*/;
	static __readonly__ var DEPTH_WRITEMASK : int/*GLenum*/;
	       __readonly__ var DEPTH_WRITEMASK : int/*GLenum*/;
	static __readonly__ var DEPTH_CLEAR_VALUE : int/*GLenum*/;
	       __readonly__ var DEPTH_CLEAR_VALUE : int/*GLenum*/;
	static __readonly__ var DEPTH_FUNC : int/*GLenum*/;
	       __readonly__ var DEPTH_FUNC : int/*GLenum*/;
	static __readonly__ var STENCIL_CLEAR_VALUE : int/*GLenum*/;
	       __readonly__ var STENCIL_CLEAR_VALUE : int/*GLenum*/;
	static __readonly__ var STENCIL_FUNC : int/*GLenum*/;
	       __readonly__ var STENCIL_FUNC : int/*GLenum*/;
	static __readonly__ var STENCIL_FAIL : int/*GLenum*/;
	       __readonly__ var STENCIL_FAIL : int/*GLenum*/;
	static __readonly__ var STENCIL_PASS_DEPTH_FAIL : int/*GLenum*/;
	       __readonly__ var STENCIL_PASS_DEPTH_FAIL : int/*GLenum*/;
	static __readonly__ var STENCIL_PASS_DEPTH_PASS : int/*GLenum*/;
	       __readonly__ var STENCIL_PASS_DEPTH_PASS : int/*GLenum*/;
	static __readonly__ var STENCIL_REF : int/*GLenum*/;
	       __readonly__ var STENCIL_REF : int/*GLenum*/;
	static __readonly__ var STENCIL_VALUE_MASK : int/*GLenum*/;
	       __readonly__ var STENCIL_VALUE_MASK : int/*GLenum*/;
	static __readonly__ var STENCIL_WRITEMASK : int/*GLenum*/;
	       __readonly__ var STENCIL_WRITEMASK : int/*GLenum*/;
	static __readonly__ var STENCIL_BACK_FUNC : int/*GLenum*/;
	       __readonly__ var STENCIL_BACK_FUNC : int/*GLenum*/;
	static __readonly__ var STENCIL_BACK_FAIL : int/*GLenum*/;
	       __readonly__ var STENCIL_BACK_FAIL : int/*GLenum*/;
	static __readonly__ var STENCIL_BACK_PASS_DEPTH_FAIL : int/*GLenum*/;
	       __readonly__ var STENCIL_BACK_PASS_DEPTH_FAIL : int/*GLenum*/;
	static __readonly__ var STENCIL_BACK_PASS_DEPTH_PASS : int/*GLenum*/;
	       __readonly__ var STENCIL_BACK_PASS_DEPTH_PASS : int/*GLenum*/;
	static __readonly__ var STENCIL_BACK_REF : int/*GLenum*/;
	       __readonly__ var STENCIL_BACK_REF : int/*GLenum*/;
	static __readonly__ var STENCIL_BACK_VALUE_MASK : int/*GLenum*/;
	       __readonly__ var STENCIL_BACK_VALUE_MASK : int/*GLenum*/;
	static __readonly__ var STENCIL_BACK_WRITEMASK : int/*GLenum*/;
	       __readonly__ var STENCIL_BACK_WRITEMASK : int/*GLenum*/;
	static __readonly__ var VIEWPORT : int/*GLenum*/;
	       __readonly__ var VIEWPORT : int/*GLenum*/;
	static __readonly__ var SCISSOR_BOX : int/*GLenum*/;
	       __readonly__ var SCISSOR_BOX : int/*GLenum*/;
	/*      SCISSOR_TEST */
	static __readonly__ var COLOR_CLEAR_VALUE : int/*GLenum*/;
	       __readonly__ var COLOR_CLEAR_VALUE : int/*GLenum*/;
	static __readonly__ var COLOR_WRITEMASK : int/*GLenum*/;
	       __readonly__ var COLOR_WRITEMASK : int/*GLenum*/;
	static __readonly__ var UNPACK_ALIGNMENT : int/*GLenum*/;
	       __readonly__ var UNPACK_ALIGNMENT : int/*GLenum*/;
	static __readonly__ var PACK_ALIGNMENT : int/*GLenum*/;
	       __readonly__ var PACK_ALIGNMENT : int/*GLenum*/;
	static __readonly__ var MAX_TEXTURE_SIZE : int/*GLenum*/;
	       __readonly__ var MAX_TEXTURE_SIZE : int/*GLenum*/;
	static __readonly__ var MAX_VIEWPORT_DIMS : int/*GLenum*/;
	       __readonly__ var MAX_VIEWPORT_DIMS : int/*GLenum*/;
	static __readonly__ var SUBPIXEL_BITS : int/*GLenum*/;
	       __readonly__ var SUBPIXEL_BITS : int/*GLenum*/;
	static __readonly__ var RED_BITS : int/*GLenum*/;
	       __readonly__ var RED_BITS : int/*GLenum*/;
	static __readonly__ var GREEN_BITS : int/*GLenum*/;
	       __readonly__ var GREEN_BITS : int/*GLenum*/;
	static __readonly__ var BLUE_BITS : int/*GLenum*/;
	       __readonly__ var BLUE_BITS : int/*GLenum*/;
	static __readonly__ var ALPHA_BITS : int/*GLenum*/;
	       __readonly__ var ALPHA_BITS : int/*GLenum*/;
	static __readonly__ var DEPTH_BITS : int/*GLenum*/;
	       __readonly__ var DEPTH_BITS : int/*GLenum*/;
	static __readonly__ var STENCIL_BITS : int/*GLenum*/;
	       __readonly__ var STENCIL_BITS : int/*GLenum*/;
	static __readonly__ var POLYGON_OFFSET_UNITS : int/*GLenum*/;
	       __readonly__ var POLYGON_OFFSET_UNITS : int/*GLenum*/;
	/*      POLYGON_OFFSET_FILL */
	static __readonly__ var POLYGON_OFFSET_FACTOR : int/*GLenum*/;
	       __readonly__ var POLYGON_OFFSET_FACTOR : int/*GLenum*/;
	static __readonly__ var TEXTURE_BINDING_2D : int/*GLenum*/;
	       __readonly__ var TEXTURE_BINDING_2D : int/*GLenum*/;
	static __readonly__ var SAMPLE_BUFFERS : int/*GLenum*/;
	       __readonly__ var SAMPLE_BUFFERS : int/*GLenum*/;
	static __readonly__ var SAMPLES : int/*GLenum*/;
	       __readonly__ var SAMPLES : int/*GLenum*/;
	static __readonly__ var SAMPLE_COVERAGE_VALUE : int/*GLenum*/;
	       __readonly__ var SAMPLE_COVERAGE_VALUE : int/*GLenum*/;
	static __readonly__ var SAMPLE_COVERAGE_INVERT : int/*GLenum*/;
	       __readonly__ var SAMPLE_COVERAGE_INVERT : int/*GLenum*/;
	/* GetTextureParameter */
	/*      TEXTURE_MAG_FILTER */
	/*      TEXTURE_MIN_FILTER */
	/*      TEXTURE_WRAP_S */
	/*      TEXTURE_WRAP_T */

	static __readonly__ var COMPRESSED_TEXTURE_FORMATS : int/*GLenum*/;
	       __readonly__ var COMPRESSED_TEXTURE_FORMATS : int/*GLenum*/;
	/* HintMode */
	static __readonly__ var DONT_CARE : int/*GLenum*/;
	       __readonly__ var DONT_CARE : int/*GLenum*/;
	static __readonly__ var FASTEST : int/*GLenum*/;
	       __readonly__ var FASTEST : int/*GLenum*/;
	static __readonly__ var NICEST : int/*GLenum*/;
	       __readonly__ var NICEST : int/*GLenum*/;
	/* HintTarget */
	static __readonly__ var GENERATE_MIPMAP_HINT : int/*GLenum*/;
	       __readonly__ var GENERATE_MIPMAP_HINT : int/*GLenum*/;
	/* DataType */
	static __readonly__ var BYTE : int/*GLenum*/;
	       __readonly__ var BYTE : int/*GLenum*/;
	static __readonly__ var UNSIGNED_BYTE : int/*GLenum*/;
	       __readonly__ var UNSIGNED_BYTE : int/*GLenum*/;
	static __readonly__ var SHORT : int/*GLenum*/;
	       __readonly__ var SHORT : int/*GLenum*/;
	static __readonly__ var UNSIGNED_SHORT : int/*GLenum*/;
	       __readonly__ var UNSIGNED_SHORT : int/*GLenum*/;
	static __readonly__ var INT : int/*GLenum*/;
	       __readonly__ var INT : int/*GLenum*/;
	static __readonly__ var UNSIGNED_INT : int/*GLenum*/;
	       __readonly__ var UNSIGNED_INT : int/*GLenum*/;
	static __readonly__ var FLOAT : int/*GLenum*/;
	       __readonly__ var FLOAT : int/*GLenum*/;
	/* PixelFormat */
	static __readonly__ var DEPTH_COMPONENT : int/*GLenum*/;
	       __readonly__ var DEPTH_COMPONENT : int/*GLenum*/;
	static __readonly__ var ALPHA : int/*GLenum*/;
	       __readonly__ var ALPHA : int/*GLenum*/;
	static __readonly__ var RGB : int/*GLenum*/;
	       __readonly__ var RGB : int/*GLenum*/;
	static __readonly__ var RGBA : int/*GLenum*/;
	       __readonly__ var RGBA : int/*GLenum*/;
	static __readonly__ var LUMINANCE : int/*GLenum*/;
	       __readonly__ var LUMINANCE : int/*GLenum*/;
	static __readonly__ var LUMINANCE_ALPHA : int/*GLenum*/;
	       __readonly__ var LUMINANCE_ALPHA : int/*GLenum*/;
	/* PixelType */
	/*      UNSIGNED_BYTE */
	static __readonly__ var UNSIGNED_SHORT_4_4_4_4 : int/*GLenum*/;
	       __readonly__ var UNSIGNED_SHORT_4_4_4_4 : int/*GLenum*/;
	static __readonly__ var UNSIGNED_SHORT_5_5_5_1 : int/*GLenum*/;
	       __readonly__ var UNSIGNED_SHORT_5_5_5_1 : int/*GLenum*/;
	static __readonly__ var UNSIGNED_SHORT_5_6_5 : int/*GLenum*/;
	       __readonly__ var UNSIGNED_SHORT_5_6_5 : int/*GLenum*/;
	/* Shaders */
	static __readonly__ var FRAGMENT_SHADER : int/*GLenum*/;
	       __readonly__ var FRAGMENT_SHADER : int/*GLenum*/;
	static __readonly__ var VERTEX_SHADER : int/*GLenum*/;
	       __readonly__ var VERTEX_SHADER : int/*GLenum*/;
	static __readonly__ var MAX_VERTEX_ATTRIBS : int/*GLenum*/;
	       __readonly__ var MAX_VERTEX_ATTRIBS : int/*GLenum*/;
	static __readonly__ var MAX_VERTEX_UNIFORM_VECTORS : int/*GLenum*/;
	       __readonly__ var MAX_VERTEX_UNIFORM_VECTORS : int/*GLenum*/;
	static __readonly__ var MAX_VARYING_VECTORS : int/*GLenum*/;
	       __readonly__ var MAX_VARYING_VECTORS : int/*GLenum*/;
	static __readonly__ var MAX_COMBINED_TEXTURE_IMAGE_UNITS : int/*GLenum*/;
	       __readonly__ var MAX_COMBINED_TEXTURE_IMAGE_UNITS : int/*GLenum*/;
	static __readonly__ var MAX_VERTEX_TEXTURE_IMAGE_UNITS : int/*GLenum*/;
	       __readonly__ var MAX_VERTEX_TEXTURE_IMAGE_UNITS : int/*GLenum*/;
	static __readonly__ var MAX_TEXTURE_IMAGE_UNITS : int/*GLenum*/;
	       __readonly__ var MAX_TEXTURE_IMAGE_UNITS : int/*GLenum*/;
	static __readonly__ var MAX_FRAGMENT_UNIFORM_VECTORS : int/*GLenum*/;
	       __readonly__ var MAX_FRAGMENT_UNIFORM_VECTORS : int/*GLenum*/;
	static __readonly__ var SHADER_TYPE : int/*GLenum*/;
	       __readonly__ var SHADER_TYPE : int/*GLenum*/;
	static __readonly__ var DELETE_STATUS : int/*GLenum*/;
	       __readonly__ var DELETE_STATUS : int/*GLenum*/;
	static __readonly__ var LINK_STATUS : int/*GLenum*/;
	       __readonly__ var LINK_STATUS : int/*GLenum*/;
	static __readonly__ var VALIDATE_STATUS : int/*GLenum*/;
	       __readonly__ var VALIDATE_STATUS : int/*GLenum*/;
	static __readonly__ var ATTACHED_SHADERS : int/*GLenum*/;
	       __readonly__ var ATTACHED_SHADERS : int/*GLenum*/;
	static __readonly__ var ACTIVE_UNIFORMS : int/*GLenum*/;
	       __readonly__ var ACTIVE_UNIFORMS : int/*GLenum*/;
	static __readonly__ var ACTIVE_ATTRIBUTES : int/*GLenum*/;
	       __readonly__ var ACTIVE_ATTRIBUTES : int/*GLenum*/;
	static __readonly__ var SHADING_LANGUAGE_VERSION : int/*GLenum*/;
	       __readonly__ var SHADING_LANGUAGE_VERSION : int/*GLenum*/;
	static __readonly__ var CURRENT_PROGRAM : int/*GLenum*/;
	       __readonly__ var CURRENT_PROGRAM : int/*GLenum*/;
	/* StencilFunction */
	static __readonly__ var NEVER : int/*GLenum*/;
	       __readonly__ var NEVER : int/*GLenum*/;
	static __readonly__ var LESS : int/*GLenum*/;
	       __readonly__ var LESS : int/*GLenum*/;
	static __readonly__ var EQUAL : int/*GLenum*/;
	       __readonly__ var EQUAL : int/*GLenum*/;
	static __readonly__ var LEQUAL : int/*GLenum*/;
	       __readonly__ var LEQUAL : int/*GLenum*/;
	static __readonly__ var GREATER : int/*GLenum*/;
	       __readonly__ var GREATER : int/*GLenum*/;
	static __readonly__ var NOTEQUAL : int/*GLenum*/;
	       __readonly__ var NOTEQUAL : int/*GLenum*/;
	static __readonly__ var GEQUAL : int/*GLenum*/;
	       __readonly__ var GEQUAL : int/*GLenum*/;
	static __readonly__ var ALWAYS : int/*GLenum*/;
	       __readonly__ var ALWAYS : int/*GLenum*/;
	/* StencilOp */
	/*      ZERO */
	static __readonly__ var KEEP : int/*GLenum*/;
	       __readonly__ var KEEP : int/*GLenum*/;
	static __readonly__ var REPLACE : int/*GLenum*/;
	       __readonly__ var REPLACE : int/*GLenum*/;
	static __readonly__ var INCR : int/*GLenum*/;
	       __readonly__ var INCR : int/*GLenum*/;
	static __readonly__ var DECR : int/*GLenum*/;
	       __readonly__ var DECR : int/*GLenum*/;
	static __readonly__ var INVERT : int/*GLenum*/;
	       __readonly__ var INVERT : int/*GLenum*/;
	static __readonly__ var INCR_WRAP : int/*GLenum*/;
	       __readonly__ var INCR_WRAP : int/*GLenum*/;
	static __readonly__ var DECR_WRAP : int/*GLenum*/;
	       __readonly__ var DECR_WRAP : int/*GLenum*/;
	/* StringName */
	static __readonly__ var VENDOR : int/*GLenum*/;
	       __readonly__ var VENDOR : int/*GLenum*/;
	static __readonly__ var RENDERER : int/*GLenum*/;
	       __readonly__ var RENDERER : int/*GLenum*/;
	static __readonly__ var VERSION : int/*GLenum*/;
	       __readonly__ var VERSION : int/*GLenum*/;
	/* TextureMagFilter */
	static __readonly__ var NEAREST : int/*GLenum*/;
	       __readonly__ var NEAREST : int/*GLenum*/;
	static __readonly__ var LINEAR : int/*GLenum*/;
	       __readonly__ var LINEAR : int/*GLenum*/;
	/* TextureMinFilter */
	/*      NEAREST */
	/*      LINEAR */
	static __readonly__ var NEAREST_MIPMAP_NEAREST : int/*GLenum*/;
	       __readonly__ var NEAREST_MIPMAP_NEAREST : int/*GLenum*/;
	static __readonly__ var LINEAR_MIPMAP_NEAREST : int/*GLenum*/;
	       __readonly__ var LINEAR_MIPMAP_NEAREST : int/*GLenum*/;
	static __readonly__ var NEAREST_MIPMAP_LINEAR : int/*GLenum*/;
	       __readonly__ var NEAREST_MIPMAP_LINEAR : int/*GLenum*/;
	static __readonly__ var LINEAR_MIPMAP_LINEAR : int/*GLenum*/;
	       __readonly__ var LINEAR_MIPMAP_LINEAR : int/*GLenum*/;
	/* TextureParameterName */
	static __readonly__ var TEXTURE_MAG_FILTER : int/*GLenum*/;
	       __readonly__ var TEXTURE_MAG_FILTER : int/*GLenum*/;
	static __readonly__ var TEXTURE_MIN_FILTER : int/*GLenum*/;
	       __readonly__ var TEXTURE_MIN_FILTER : int/*GLenum*/;
	static __readonly__ var TEXTURE_WRAP_S : int/*GLenum*/;
	       __readonly__ var TEXTURE_WRAP_S : int/*GLenum*/;
	static __readonly__ var TEXTURE_WRAP_T : int/*GLenum*/;
	       __readonly__ var TEXTURE_WRAP_T : int/*GLenum*/;
	/* TextureTarget */
	static __readonly__ var TEXTURE_2D : int/*GLenum*/;
	       __readonly__ var TEXTURE_2D : int/*GLenum*/;
	static __readonly__ var TEXTURE : int/*GLenum*/;
	       __readonly__ var TEXTURE : int/*GLenum*/;
	static __readonly__ var TEXTURE_CUBE_MAP : int/*GLenum*/;
	       __readonly__ var TEXTURE_CUBE_MAP : int/*GLenum*/;
	static __readonly__ var TEXTURE_BINDING_CUBE_MAP : int/*GLenum*/;
	       __readonly__ var TEXTURE_BINDING_CUBE_MAP : int/*GLenum*/;
	static __readonly__ var TEXTURE_CUBE_MAP_POSITIVE_X : int/*GLenum*/;
	       __readonly__ var TEXTURE_CUBE_MAP_POSITIVE_X : int/*GLenum*/;
	static __readonly__ var TEXTURE_CUBE_MAP_NEGATIVE_X : int/*GLenum*/;
	       __readonly__ var TEXTURE_CUBE_MAP_NEGATIVE_X : int/*GLenum*/;
	static __readonly__ var TEXTURE_CUBE_MAP_POSITIVE_Y : int/*GLenum*/;
	       __readonly__ var TEXTURE_CUBE_MAP_POSITIVE_Y : int/*GLenum*/;
	static __readonly__ var TEXTURE_CUBE_MAP_NEGATIVE_Y : int/*GLenum*/;
	       __readonly__ var TEXTURE_CUBE_MAP_NEGATIVE_Y : int/*GLenum*/;
	static __readonly__ var TEXTURE_CUBE_MAP_POSITIVE_Z : int/*GLenum*/;
	       __readonly__ var TEXTURE_CUBE_MAP_POSITIVE_Z : int/*GLenum*/;
	static __readonly__ var TEXTURE_CUBE_MAP_NEGATIVE_Z : int/*GLenum*/;
	       __readonly__ var TEXTURE_CUBE_MAP_NEGATIVE_Z : int/*GLenum*/;
	static __readonly__ var MAX_CUBE_MAP_TEXTURE_SIZE : int/*GLenum*/;
	       __readonly__ var MAX_CUBE_MAP_TEXTURE_SIZE : int/*GLenum*/;
	/* TextureUnit */
	static __readonly__ var TEXTURE0 : int/*GLenum*/;
	       __readonly__ var TEXTURE0 : int/*GLenum*/;
	static __readonly__ var TEXTURE1 : int/*GLenum*/;
	       __readonly__ var TEXTURE1 : int/*GLenum*/;
	static __readonly__ var TEXTURE2 : int/*GLenum*/;
	       __readonly__ var TEXTURE2 : int/*GLenum*/;
	static __readonly__ var TEXTURE3 : int/*GLenum*/;
	       __readonly__ var TEXTURE3 : int/*GLenum*/;
	static __readonly__ var TEXTURE4 : int/*GLenum*/;
	       __readonly__ var TEXTURE4 : int/*GLenum*/;
	static __readonly__ var TEXTURE5 : int/*GLenum*/;
	       __readonly__ var TEXTURE5 : int/*GLenum*/;
	static __readonly__ var TEXTURE6 : int/*GLenum*/;
	       __readonly__ var TEXTURE6 : int/*GLenum*/;
	static __readonly__ var TEXTURE7 : int/*GLenum*/;
	       __readonly__ var TEXTURE7 : int/*GLenum*/;
	static __readonly__ var TEXTURE8 : int/*GLenum*/;
	       __readonly__ var TEXTURE8 : int/*GLenum*/;
	static __readonly__ var TEXTURE9 : int/*GLenum*/;
	       __readonly__ var TEXTURE9 : int/*GLenum*/;
	static __readonly__ var TEXTURE10 : int/*GLenum*/;
	       __readonly__ var TEXTURE10 : int/*GLenum*/;
	static __readonly__ var TEXTURE11 : int/*GLenum*/;
	       __readonly__ var TEXTURE11 : int/*GLenum*/;
	static __readonly__ var TEXTURE12 : int/*GLenum*/;
	       __readonly__ var TEXTURE12 : int/*GLenum*/;
	static __readonly__ var TEXTURE13 : int/*GLenum*/;
	       __readonly__ var TEXTURE13 : int/*GLenum*/;
	static __readonly__ var TEXTURE14 : int/*GLenum*/;
	       __readonly__ var TEXTURE14 : int/*GLenum*/;
	static __readonly__ var TEXTURE15 : int/*GLenum*/;
	       __readonly__ var TEXTURE15 : int/*GLenum*/;
	static __readonly__ var TEXTURE16 : int/*GLenum*/;
	       __readonly__ var TEXTURE16 : int/*GLenum*/;
	static __readonly__ var TEXTURE17 : int/*GLenum*/;
	       __readonly__ var TEXTURE17 : int/*GLenum*/;
	static __readonly__ var TEXTURE18 : int/*GLenum*/;
	       __readonly__ var TEXTURE18 : int/*GLenum*/;
	static __readonly__ var TEXTURE19 : int/*GLenum*/;
	       __readonly__ var TEXTURE19 : int/*GLenum*/;
	static __readonly__ var TEXTURE20 : int/*GLenum*/;
	       __readonly__ var TEXTURE20 : int/*GLenum*/;
	static __readonly__ var TEXTURE21 : int/*GLenum*/;
	       __readonly__ var TEXTURE21 : int/*GLenum*/;
	static __readonly__ var TEXTURE22 : int/*GLenum*/;
	       __readonly__ var TEXTURE22 : int/*GLenum*/;
	static __readonly__ var TEXTURE23 : int/*GLenum*/;
	       __readonly__ var TEXTURE23 : int/*GLenum*/;
	static __readonly__ var TEXTURE24 : int/*GLenum*/;
	       __readonly__ var TEXTURE24 : int/*GLenum*/;
	static __readonly__ var TEXTURE25 : int/*GLenum*/;
	       __readonly__ var TEXTURE25 : int/*GLenum*/;
	static __readonly__ var TEXTURE26 : int/*GLenum*/;
	       __readonly__ var TEXTURE26 : int/*GLenum*/;
	static __readonly__ var TEXTURE27 : int/*GLenum*/;
	       __readonly__ var TEXTURE27 : int/*GLenum*/;
	static __readonly__ var TEXTURE28 : int/*GLenum*/;
	       __readonly__ var TEXTURE28 : int/*GLenum*/;
	static __readonly__ var TEXTURE29 : int/*GLenum*/;
	       __readonly__ var TEXTURE29 : int/*GLenum*/;
	static __readonly__ var TEXTURE30 : int/*GLenum*/;
	       __readonly__ var TEXTURE30 : int/*GLenum*/;
	static __readonly__ var TEXTURE31 : int/*GLenum*/;
	       __readonly__ var TEXTURE31 : int/*GLenum*/;
	static __readonly__ var ACTIVE_TEXTURE : int/*GLenum*/;
	       __readonly__ var ACTIVE_TEXTURE : int/*GLenum*/;
	/* TextureWrapMode */
	static __readonly__ var REPEAT : int/*GLenum*/;
	       __readonly__ var REPEAT : int/*GLenum*/;
	static __readonly__ var CLAMP_TO_EDGE : int/*GLenum*/;
	       __readonly__ var CLAMP_TO_EDGE : int/*GLenum*/;
	static __readonly__ var MIRRORED_REPEAT : int/*GLenum*/;
	       __readonly__ var MIRRORED_REPEAT : int/*GLenum*/;
	/* Uniform Types */
	static __readonly__ var FLOAT_VEC2 : int/*GLenum*/;
	       __readonly__ var FLOAT_VEC2 : int/*GLenum*/;
	static __readonly__ var FLOAT_VEC3 : int/*GLenum*/;
	       __readonly__ var FLOAT_VEC3 : int/*GLenum*/;
	static __readonly__ var FLOAT_VEC4 : int/*GLenum*/;
	       __readonly__ var FLOAT_VEC4 : int/*GLenum*/;
	static __readonly__ var INT_VEC2 : int/*GLenum*/;
	       __readonly__ var INT_VEC2 : int/*GLenum*/;
	static __readonly__ var INT_VEC3 : int/*GLenum*/;
	       __readonly__ var INT_VEC3 : int/*GLenum*/;
	static __readonly__ var INT_VEC4 : int/*GLenum*/;
	       __readonly__ var INT_VEC4 : int/*GLenum*/;
	static __readonly__ var BOOL : int/*GLenum*/;
	       __readonly__ var BOOL : int/*GLenum*/;
	static __readonly__ var BOOL_VEC2 : int/*GLenum*/;
	       __readonly__ var BOOL_VEC2 : int/*GLenum*/;
	static __readonly__ var BOOL_VEC3 : int/*GLenum*/;
	       __readonly__ var BOOL_VEC3 : int/*GLenum*/;
	static __readonly__ var BOOL_VEC4 : int/*GLenum*/;
	       __readonly__ var BOOL_VEC4 : int/*GLenum*/;
	static __readonly__ var FLOAT_MAT2 : int/*GLenum*/;
	       __readonly__ var FLOAT_MAT2 : int/*GLenum*/;
	static __readonly__ var FLOAT_MAT3 : int/*GLenum*/;
	       __readonly__ var FLOAT_MAT3 : int/*GLenum*/;
	static __readonly__ var FLOAT_MAT4 : int/*GLenum*/;
	       __readonly__ var FLOAT_MAT4 : int/*GLenum*/;
	static __readonly__ var SAMPLER_2D : int/*GLenum*/;
	       __readonly__ var SAMPLER_2D : int/*GLenum*/;
	static __readonly__ var SAMPLER_CUBE : int/*GLenum*/;
	       __readonly__ var SAMPLER_CUBE : int/*GLenum*/;
	/* Vertex Arrays */
	static __readonly__ var VERTEX_ATTRIB_ARRAY_ENABLED : int/*GLenum*/;
	       __readonly__ var VERTEX_ATTRIB_ARRAY_ENABLED : int/*GLenum*/;
	static __readonly__ var VERTEX_ATTRIB_ARRAY_SIZE : int/*GLenum*/;
	       __readonly__ var VERTEX_ATTRIB_ARRAY_SIZE : int/*GLenum*/;
	static __readonly__ var VERTEX_ATTRIB_ARRAY_STRIDE : int/*GLenum*/;
	       __readonly__ var VERTEX_ATTRIB_ARRAY_STRIDE : int/*GLenum*/;
	static __readonly__ var VERTEX_ATTRIB_ARRAY_TYPE : int/*GLenum*/;
	       __readonly__ var VERTEX_ATTRIB_ARRAY_TYPE : int/*GLenum*/;
	static __readonly__ var VERTEX_ATTRIB_ARRAY_NORMALIZED : int/*GLenum*/;
	       __readonly__ var VERTEX_ATTRIB_ARRAY_NORMALIZED : int/*GLenum*/;
	static __readonly__ var VERTEX_ATTRIB_ARRAY_POINTER : int/*GLenum*/;
	       __readonly__ var VERTEX_ATTRIB_ARRAY_POINTER : int/*GLenum*/;
	static __readonly__ var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING : int/*GLenum*/;
	       __readonly__ var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING : int/*GLenum*/;
	/* Shader Source */
	static __readonly__ var COMPILE_STATUS : int/*GLenum*/;
	       __readonly__ var COMPILE_STATUS : int/*GLenum*/;
	/* Shader Precision-Specified Types */
	static __readonly__ var LOW_FLOAT : int/*GLenum*/;
	       __readonly__ var LOW_FLOAT : int/*GLenum*/;
	static __readonly__ var MEDIUM_FLOAT : int/*GLenum*/;
	       __readonly__ var MEDIUM_FLOAT : int/*GLenum*/;
	static __readonly__ var HIGH_FLOAT : int/*GLenum*/;
	       __readonly__ var HIGH_FLOAT : int/*GLenum*/;
	static __readonly__ var LOW_INT : int/*GLenum*/;
	       __readonly__ var LOW_INT : int/*GLenum*/;
	static __readonly__ var MEDIUM_INT : int/*GLenum*/;
	       __readonly__ var MEDIUM_INT : int/*GLenum*/;
	static __readonly__ var HIGH_INT : int/*GLenum*/;
	       __readonly__ var HIGH_INT : int/*GLenum*/;
	/* Framebuffer Object. */
	static __readonly__ var FRAMEBUFFER : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER : int/*GLenum*/;
	static __readonly__ var RGBA4 : int/*GLenum*/;
	       __readonly__ var RGBA4 : int/*GLenum*/;
	static __readonly__ var RGB5_A1 : int/*GLenum*/;
	       __readonly__ var RGB5_A1 : int/*GLenum*/;
	static __readonly__ var RGB565 : int/*GLenum*/;
	       __readonly__ var RGB565 : int/*GLenum*/;
	static __readonly__ var DEPTH_COMPONENT16 : int/*GLenum*/;
	       __readonly__ var DEPTH_COMPONENT16 : int/*GLenum*/;
	static __readonly__ var STENCIL_INDEX : int/*GLenum*/;
	       __readonly__ var STENCIL_INDEX : int/*GLenum*/;
	static __readonly__ var STENCIL_INDEX8 : int/*GLenum*/;
	       __readonly__ var STENCIL_INDEX8 : int/*GLenum*/;
	static __readonly__ var DEPTH_STENCIL : int/*GLenum*/;
	       __readonly__ var DEPTH_STENCIL : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER_WIDTH : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER_WIDTH : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER_HEIGHT : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER_HEIGHT : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER_INTERNAL_FORMAT : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER_INTERNAL_FORMAT : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER_RED_SIZE : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER_RED_SIZE : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER_GREEN_SIZE : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER_GREEN_SIZE : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER_BLUE_SIZE : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER_BLUE_SIZE : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER_ALPHA_SIZE : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER_ALPHA_SIZE : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER_DEPTH_SIZE : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER_DEPTH_SIZE : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER_STENCIL_SIZE : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER_STENCIL_SIZE : int/*GLenum*/;
	static __readonly__ var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE : int/*GLenum*/;
	static __readonly__ var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME : int/*GLenum*/;
	static __readonly__ var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL : int/*GLenum*/;
	static __readonly__ var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE : int/*GLenum*/;
	static __readonly__ var COLOR_ATTACHMENT0 : int/*GLenum*/;
	       __readonly__ var COLOR_ATTACHMENT0 : int/*GLenum*/;
	static __readonly__ var DEPTH_ATTACHMENT : int/*GLenum*/;
	       __readonly__ var DEPTH_ATTACHMENT : int/*GLenum*/;
	static __readonly__ var STENCIL_ATTACHMENT : int/*GLenum*/;
	       __readonly__ var STENCIL_ATTACHMENT : int/*GLenum*/;
	static __readonly__ var DEPTH_STENCIL_ATTACHMENT : int/*GLenum*/;
	       __readonly__ var DEPTH_STENCIL_ATTACHMENT : int/*GLenum*/;
	static __readonly__ var NONE : int/*GLenum*/;
	       __readonly__ var NONE : int/*GLenum*/;
	static __readonly__ var FRAMEBUFFER_COMPLETE : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER_COMPLETE : int/*GLenum*/;
	static __readonly__ var FRAMEBUFFER_INCOMPLETE_ATTACHMENT : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER_INCOMPLETE_ATTACHMENT : int/*GLenum*/;
	static __readonly__ var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT : int/*GLenum*/;
	static __readonly__ var FRAMEBUFFER_INCOMPLETE_DIMENSIONS : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER_INCOMPLETE_DIMENSIONS : int/*GLenum*/;
	static __readonly__ var FRAMEBUFFER_UNSUPPORTED : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER_UNSUPPORTED : int/*GLenum*/;
	static __readonly__ var FRAMEBUFFER_BINDING : int/*GLenum*/;
	       __readonly__ var FRAMEBUFFER_BINDING : int/*GLenum*/;
	static __readonly__ var RENDERBUFFER_BINDING : int/*GLenum*/;
	       __readonly__ var RENDERBUFFER_BINDING : int/*GLenum*/;
	static __readonly__ var MAX_RENDERBUFFER_SIZE : int/*GLenum*/;
	       __readonly__ var MAX_RENDERBUFFER_SIZE : int/*GLenum*/;
	static __readonly__ var INVALID_FRAMEBUFFER_OPERATION : int/*GLenum*/;
	       __readonly__ var INVALID_FRAMEBUFFER_OPERATION : int/*GLenum*/;
	/* WebGL-specific enums */
	static __readonly__ var UNPACK_FLIP_Y_WEBGL : int/*GLenum*/;
	       __readonly__ var UNPACK_FLIP_Y_WEBGL : int/*GLenum*/;
	static __readonly__ var UNPACK_PREMULTIPLY_ALPHA_WEBGL : int/*GLenum*/;
	       __readonly__ var UNPACK_PREMULTIPLY_ALPHA_WEBGL : int/*GLenum*/;
	static __readonly__ var CONTEXT_LOST_WEBGL : int/*GLenum*/;
	       __readonly__ var CONTEXT_LOST_WEBGL : int/*GLenum*/;
	static __readonly__ var UNPACK_COLORSPACE_CONVERSION_WEBGL : int/*GLenum*/;
	       __readonly__ var UNPACK_COLORSPACE_CONVERSION_WEBGL : int/*GLenum*/;
	static __readonly__ var BROWSER_DEFAULT_WEBGL : int/*GLenum*/;
	       __readonly__ var BROWSER_DEFAULT_WEBGL : int/*GLenum*/;
	__readonly__ var canvas : HTMLCanvasElement;
	__readonly__ var drawingBufferWidth : int/*GLsizei*/;
	__readonly__ var drawingBufferHeight : int/*GLsizei*/;
	function getContextAttributes() : WebGLContextAttributes;
	function isContextLost() : boolean;
	function getSupportedExtensions() : string[]/*sequence<DOMString>?*/;
	function getExtension(
		name : string/*DOMString*/
	) : Object/*object?*/;
	function activeTexture(texture : int/*GLenum*/) : void;
	function attachShader(
		program : WebGLProgram,
		shader : WebGLShader
	) : void;
	function bindAttribLocation(
		program : WebGLProgram,
		index : int/*GLuint*/,
		name : string/*DOMString*/
	) : void;
	function bindBuffer(
		target : int/*GLenum*/,
		buffer : WebGLBuffer
	) : void;
	function bindFramebuffer(
		target : int/*GLenum*/,
		framebuffer : WebGLFramebuffer
	) : void;
	function bindRenderbuffer(
		target : int/*GLenum*/,
		renderbuffer : WebGLRenderbuffer
	) : void;
	function bindTexture(
		target : int/*GLenum*/,
		texture : WebGLTexture
	) : void;
	function blendColor(
		red : number/*GLclampf*/,
		green : number/*GLclampf*/,
		blue : number/*GLclampf*/,
		alpha : number/*GLclampf*/
	) : void;
	function blendEquation(mode : int/*GLenum*/) : void;
	function blendEquationSeparate(
		modeRGB : int/*GLenum*/,
		modeAlpha : int/*GLenum*/
	) : void;
	function blendFunc(
		sfactor : int/*GLenum*/,
		dfactor : int/*GLenum*/
	) : void;
	function blendFuncSeparate(
		srcRGB : int/*GLenum*/,
		dstRGB : int/*GLenum*/,
		srcAlpha : int/*GLenum*/,
		dstAlpha : int/*GLenum*/
	) : void;
	function bufferData(
		target : int/*GLenum*/,
		size : number/*GLsizeiptr*/,
		usage : int/*GLenum*/
	) : void;
	function bufferData(
		target : int/*GLenum*/,
		data : ArrayBufferView,
		usage : int/*GLenum*/
	) : void;
	function bufferData(
		target : int/*GLenum*/,
		data : ArrayBuffer,
		usage : int/*GLenum*/
	) : void;
	function bufferSubData(
		target : int/*GLenum*/,
		offset : number/*GLintptr*/,
		data : ArrayBufferView
	) : void;
	function bufferSubData(
		target : int/*GLenum*/,
		offset : number/*GLintptr*/,
		data : ArrayBuffer
	) : void;
	function checkFramebufferStatus(
		target : int/*GLenum*/
	) : int/*GLenum*/;
	function clear(mask : int/*GLbitfield*/) : void;
	function clearColor(
		red : number/*GLclampf*/,
		green : number/*GLclampf*/,
		blue : number/*GLclampf*/,
		alpha : number/*GLclampf*/
	) : void;
	function clearDepth(depth : number/*GLclampf*/) : void;
	function clearStencil(s : int/*GLint*/) : void;
	function colorMask(
		red : boolean/*GLboolean*/,
		green : boolean/*GLboolean*/,
		blue : boolean/*GLboolean*/,
		alpha : boolean/*GLboolean*/
	) : void;
	function compileShader(shader : WebGLShader) : void;
	function compressedTexImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		internalformat : int/*GLenum*/,
		width : int/*GLsizei*/,
		height : int/*GLsizei*/,
		border : int/*GLint*/,
		data : ArrayBufferView
	) : void;
	function compressedTexSubImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		xoffset : int/*GLint*/,
		yoffset : int/*GLint*/,
		width : int/*GLsizei*/,
		height : int/*GLsizei*/,
		format : int/*GLenum*/,
		data : ArrayBufferView
	) : void;
	function copyTexImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		internalformat : int/*GLenum*/,
		x : int/*GLint*/,
		y : int/*GLint*/,
		width : int/*GLsizei*/,
		height : int/*GLsizei*/,
		border : int/*GLint*/
	) : void;
	function copyTexSubImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		xoffset : int/*GLint*/,
		yoffset : int/*GLint*/,
		x : int/*GLint*/,
		y : int/*GLint*/,
		width : int/*GLsizei*/,
		height : int/*GLsizei*/
	) : void;
	function createBuffer() : WebGLBuffer;
	function createFramebuffer() : WebGLFramebuffer;
	function createProgram() : WebGLProgram;
	function createRenderbuffer() : WebGLRenderbuffer;
	function createShader(type : int/*GLenum*/) : WebGLShader;
	function createTexture() : WebGLTexture;
	function cullFace(mode : int/*GLenum*/) : void;
	function deleteBuffer(buffer : WebGLBuffer) : void;
	function deleteFramebuffer(framebuffer : WebGLFramebuffer) : void;
	function deleteProgram(program : WebGLProgram) : void;
	function deleteRenderbuffer(
		renderbuffer : WebGLRenderbuffer
	) : void;
	function deleteShader(shader : WebGLShader) : void;
	function deleteTexture(texture : WebGLTexture) : void;
	function depthFunc(func : int/*GLenum*/) : void;
	function depthMask(flag : boolean/*GLboolean*/) : void;
	function depthRange(
		zNear : number/*GLclampf*/,
		zFar : number/*GLclampf*/
	) : void;
	function detachShader(
		program : WebGLProgram,
		shader : WebGLShader
	) : void;
	function disable(cap : int/*GLenum*/) : void;
	function disableVertexAttribArray(index : int/*GLuint*/) : void;
	function drawArrays(
		mode : int/*GLenum*/,
		first : int/*GLint*/,
		count : int/*GLsizei*/
	) : void;
	function drawElements(
		mode : int/*GLenum*/,
		count : int/*GLsizei*/,
		type : int/*GLenum*/,
		offset : number/*GLintptr*/
	) : void;
	function enable(cap : int/*GLenum*/) : void;
	function enableVertexAttribArray(index : int/*GLuint*/) : void;
	function finish() : void;
	function flush() : void;
	function framebufferRenderbuffer(
		target : int/*GLenum*/,
		attachment : int/*GLenum*/,
		renderbuffertarget : int/*GLenum*/,
		renderbuffer : WebGLRenderbuffer
	) : void;
	function framebufferTexture2D(
		target : int/*GLenum*/,
		attachment : int/*GLenum*/,
		textarget : int/*GLenum*/,
		texture : WebGLTexture,
		level : int/*GLint*/
	) : void;
	function frontFace(mode : int/*GLenum*/) : void;
	function generateMipmap(target : int/*GLenum*/) : void;
	function getActiveAttrib(
		program : WebGLProgram,
		index : int/*GLuint*/
	) : WebGLActiveInfo;
	function getActiveUniform(
		program : WebGLProgram,
		index : int/*GLuint*/
	) : WebGLActiveInfo;
	function getAttachedShaders(program : WebGLProgram) : WebGLShader[];
	function getAttribLocation(
		program : WebGLProgram,
		name : string/*DOMString*/
	) : int/*GLint*/;
	function getBufferParameter(
		target : int/*GLenum*/,
		pname : int/*GLenum*/
	) : variant/*any*/;
	function getParameter(pname : int/*GLenum*/) : variant/*any*/;
	function getError() : int/*GLenum*/;
	function getFramebufferAttachmentParameter(
		target : int/*GLenum*/,
		attachment : int/*GLenum*/,
		pname : int/*GLenum*/
	) : variant/*any*/;
	function getProgramParameter(
		program : WebGLProgram,
		pname : int/*GLenum*/
	) : variant/*any*/;
	function getProgramInfoLog(
		program : WebGLProgram
	) : Nullable.<string>/*DOMString?*/;
	function getRenderbufferParameter(
		target : int/*GLenum*/,
		pname : int/*GLenum*/
	) : variant/*any*/;
	function getShaderParameter(
		shader : WebGLShader,
		pname : int/*GLenum*/
	) : variant/*any*/;
	function getShaderPrecisionFormat(
		shadertype : int/*GLenum*/,
		precisiontype : int/*GLenum*/
	) : WebGLShaderPrecisionFormat;
	function getShaderInfoLog(
		shader : WebGLShader
	) : Nullable.<string>/*DOMString?*/;
	function getShaderSource(
		shader : WebGLShader
	) : Nullable.<string>/*DOMString?*/;
	function getTexParameter(
		target : int/*GLenum*/,
		pname : int/*GLenum*/
	) : variant/*any*/;
	function getUniform(
		program : WebGLProgram,
		location : WebGLUniformLocation
	) : variant/*any*/;
	function getUniformLocation(
		program : WebGLProgram,
		name : string/*DOMString*/
	) : WebGLUniformLocation;
	function getVertexAttrib(
		index : int/*GLuint*/,
		pname : int/*GLenum*/
	) : variant/*any*/;
	function getVertexAttribOffset(
		index : int/*GLuint*/,
		pname : int/*GLenum*/
	) : number/*GLsizeiptr*/;
	function hint(target : int/*GLenum*/, mode : int/*GLenum*/) : void;
	function isBuffer(buffer : WebGLBuffer) : boolean/*GLboolean*/;
	function isEnabled(cap : int/*GLenum*/) : boolean/*GLboolean*/;
	function isFramebuffer(
		framebuffer : WebGLFramebuffer
	) : boolean/*GLboolean*/;
	function isProgram(program : WebGLProgram) : boolean/*GLboolean*/;
	function isRenderbuffer(
		renderbuffer : WebGLRenderbuffer
	) : boolean/*GLboolean*/;
	function isShader(shader : WebGLShader) : boolean/*GLboolean*/;
	function isTexture(texture : WebGLTexture) : boolean/*GLboolean*/;
	function lineWidth(width : number/*GLfloat*/) : void;
	function linkProgram(program : WebGLProgram) : void;
	function pixelStorei(
		pname : int/*GLenum*/,
		param : int/*GLint*/
	) : void;
	function polygonOffset(
		factor : number/*GLfloat*/,
		units : number/*GLfloat*/
	) : void;
	function readPixels(
		x : int/*GLint*/,
		y : int/*GLint*/,
		width : int/*GLsizei*/,
		height : int/*GLsizei*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		pixels : ArrayBufferView
	) : void;
	function renderbufferStorage(
		target : int/*GLenum*/,
		internalformat : int/*GLenum*/,
		width : int/*GLsizei*/,
		height : int/*GLsizei*/
	) : void;
	function sampleCoverage(
		value : number/*GLclampf*/,
		invert : boolean/*GLboolean*/
	) : void;
	function scissor(
		x : int/*GLint*/,
		y : int/*GLint*/,
		width : int/*GLsizei*/,
		height : int/*GLsizei*/
	) : void;
	function shaderSource(
		shader : WebGLShader,
		source : string/*DOMString*/
	) : void;
	function stencilFunc(
		func : int/*GLenum*/,
		ref : int/*GLint*/,
		mask : int/*GLuint*/
	) : void;
	function stencilFuncSeparate(
		face : int/*GLenum*/,
		func : int/*GLenum*/,
		ref : int/*GLint*/,
		mask : int/*GLuint*/
	) : void;
	function stencilMask(mask : int/*GLuint*/) : void;
	function stencilMaskSeparate(
		face : int/*GLenum*/,
		mask : int/*GLuint*/
	) : void;
	function stencilOp(
		fail : int/*GLenum*/,
		zfail : int/*GLenum*/,
		zpass : int/*GLenum*/
	) : void;
	function stencilOpSeparate(
		face : int/*GLenum*/,
		fail : int/*GLenum*/,
		zfail : int/*GLenum*/,
		zpass : int/*GLenum*/
	) : void;
	function texImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		internalformat : int/*GLenum*/,
		width : int/*GLsizei*/,
		height : int/*GLsizei*/,
		border : int/*GLint*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		pixels : ArrayBufferView
	) : void;
	function texImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		internalformat : int/*GLenum*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		pixels : ImageData
	) : void;
	function texImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		internalformat : int/*GLenum*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		image : HTMLImageElement
	) : void;
	// May throw DOMException
	function texImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		internalformat : int/*GLenum*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		canvas : HTMLCanvasElement
	) : void;
	// May throw DOMException
	function texImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		internalformat : int/*GLenum*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		video : HTMLVideoElement
	) : void;
	// May throw DOMException

	function texParameterf(
		target : int/*GLenum*/,
		pname : int/*GLenum*/,
		param : number/*GLfloat*/
	) : void;
	function texParameteri(
		target : int/*GLenum*/,
		pname : int/*GLenum*/,
		param : int/*GLint*/
	) : void;
	function texSubImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		xoffset : int/*GLint*/,
		yoffset : int/*GLint*/,
		width : int/*GLsizei*/,
		height : int/*GLsizei*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		pixels : ArrayBufferView
	) : void;
	function texSubImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		xoffset : int/*GLint*/,
		yoffset : int/*GLint*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		pixels : ImageData
	) : void;
	function texSubImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		xoffset : int/*GLint*/,
		yoffset : int/*GLint*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		image : HTMLImageElement
	) : void;
	// May throw DOMException
	function texSubImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		xoffset : int/*GLint*/,
		yoffset : int/*GLint*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		canvas : HTMLCanvasElement
	) : void;
	// May throw DOMException
	function texSubImage2D(
		target : int/*GLenum*/,
		level : int/*GLint*/,
		xoffset : int/*GLint*/,
		yoffset : int/*GLint*/,
		format : int/*GLenum*/,
		type : int/*GLenum*/,
		video : HTMLVideoElement
	) : void;
	// May throw DOMException

	function uniform1f(
		location : WebGLUniformLocation,
		x : number/*GLfloat*/
	) : void;
	function uniform1fv(
		location : WebGLUniformLocation,
		v : Float32Array
	) : void;
	function uniform1fv(
		location : WebGLUniformLocation,
		v : number[]/*sequence<float>*/
	) : void;
	function uniform1i(
		location : WebGLUniformLocation,
		x : int/*GLint*/
	) : void;
	function uniform1iv(
		location : WebGLUniformLocation,
		v : Int32Array
	) : void;
	function uniform1iv(
		location : WebGLUniformLocation,
		v : int[]/*sequence<long>*/
	) : void;
	function uniform1iv(
		location : WebGLUniformLocation,
		v : number[]
	) : void;
	function uniform2f(
		location : WebGLUniformLocation,
		x : number/*GLfloat*/,
		y : number/*GLfloat*/
	) : void;
	function uniform2fv(
		location : WebGLUniformLocation,
		v : Float32Array
	) : void;
	function uniform2fv(
		location : WebGLUniformLocation,
		v : number[]/*sequence<float>*/
	) : void;
	function uniform2i(
		location : WebGLUniformLocation,
		x : int/*GLint*/,
		y : int/*GLint*/
	) : void;
	function uniform2iv(
		location : WebGLUniformLocation,
		v : Int32Array
	) : void;
	function uniform2iv(
		location : WebGLUniformLocation,
		v : int[]/*sequence<long>*/
	) : void;
	function uniform2iv(
		location : WebGLUniformLocation,
		v : number[]
	) : void;
	function uniform3f(
		location : WebGLUniformLocation,
		x : number/*GLfloat*/,
		y : number/*GLfloat*/,
		z : number/*GLfloat*/
	) : void;
	function uniform3fv(
		location : WebGLUniformLocation,
		v : Float32Array
	) : void;
	function uniform3fv(
		location : WebGLUniformLocation,
		v : number[]/*sequence<float>*/
	) : void;
	function uniform3i(
		location : WebGLUniformLocation,
		x : int/*GLint*/,
		y : int/*GLint*/,
		z : int/*GLint*/
	) : void;
	function uniform3iv(
		location : WebGLUniformLocation,
		v : Int32Array
	) : void;
	function uniform3iv(
		location : WebGLUniformLocation,
		v : int[]/*sequence<long>*/
	) : void;
	function uniform3iv(
		location : WebGLUniformLocation,
		v : number[]
	) : void;
	function uniform4f(
		location : WebGLUniformLocation,
		x : number/*GLfloat*/,
		y : number/*GLfloat*/,
		z : number/*GLfloat*/,
		w : number/*GLfloat*/
	) : void;
	function uniform4fv(
		location : WebGLUniformLocation,
		v : Float32Array
	) : void;
	function uniform4fv(
		location : WebGLUniformLocation,
		v : number[]/*sequence<float>*/
	) : void;
	function uniform4i(
		location : WebGLUniformLocation,
		x : int/*GLint*/,
		y : int/*GLint*/,
		z : int/*GLint*/,
		w : int/*GLint*/
	) : void;
	function uniform4iv(
		location : WebGLUniformLocation,
		v : Int32Array
	) : void;
	function uniform4iv(
		location : WebGLUniformLocation,
		v : int[]/*sequence<long>*/
	) : void;
	function uniform4iv(
		location : WebGLUniformLocation,
		v : number[]
	) : void;
	function uniformMatrix2fv(
		location : WebGLUniformLocation,
		transpose : boolean/*GLboolean*/,
		value : Float32Array
	) : void;
	function uniformMatrix2fv(
		location : WebGLUniformLocation,
		transpose : boolean/*GLboolean*/,
		value : number[]/*sequence<float>*/
	) : void;
	function uniformMatrix3fv(
		location : WebGLUniformLocation,
		transpose : boolean/*GLboolean*/,
		value : Float32Array
	) : void;
	function uniformMatrix3fv(
		location : WebGLUniformLocation,
		transpose : boolean/*GLboolean*/,
		value : number[]/*sequence<float>*/
	) : void;
	function uniformMatrix4fv(
		location : WebGLUniformLocation,
		transpose : boolean/*GLboolean*/,
		value : Float32Array
	) : void;
	function uniformMatrix4fv(
		location : WebGLUniformLocation,
		transpose : boolean/*GLboolean*/,
		value : number[]/*sequence<float>*/
	) : void;
	function useProgram(program : WebGLProgram) : void;
	function validateProgram(program : WebGLProgram) : void;
	function vertexAttrib1f(
		indx : int/*GLuint*/,
		x : number/*GLfloat*/
	) : void;
	function vertexAttrib1fv(
		indx : int/*GLuint*/,
		values : Float32Array
	) : void;
	function vertexAttrib1fv(
		indx : int/*GLuint*/,
		values : number[]/*sequence<float>*/
	) : void;
	function vertexAttrib2f(
		indx : int/*GLuint*/,
		x : number/*GLfloat*/,
		y : number/*GLfloat*/
	) : void;
	function vertexAttrib2fv(
		indx : int/*GLuint*/,
		values : Float32Array
	) : void;
	function vertexAttrib2fv(
		indx : int/*GLuint*/,
		values : number[]/*sequence<float>*/
	) : void;
	function vertexAttrib3f(
		indx : int/*GLuint*/,
		x : number/*GLfloat*/,
		y : number/*GLfloat*/,
		z : number/*GLfloat*/
	) : void;
	function vertexAttrib3fv(
		indx : int/*GLuint*/,
		values : Float32Array
	) : void;
	function vertexAttrib3fv(
		indx : int/*GLuint*/,
		values : number[]/*sequence<float>*/
	) : void;
	function vertexAttrib4f(
		indx : int/*GLuint*/,
		x : number/*GLfloat*/,
		y : number/*GLfloat*/,
		z : number/*GLfloat*/,
		w : number/*GLfloat*/
	) : void;
	function vertexAttrib4fv(
		indx : int/*GLuint*/,
		values : Float32Array
	) : void;
	function vertexAttrib4fv(
		indx : int/*GLuint*/,
		values : number[]/*sequence<float>*/
	) : void;
	function vertexAttribPointer(
		indx : int/*GLuint*/,
		size : int/*GLint*/,
		type : int/*GLenum*/,
		normalized : boolean/*GLboolean*/,
		stride : int/*GLsizei*/,
		offset : number/*GLintptr*/
	) : void;
	function viewport(
		x : int/*GLint*/,
		y : int/*GLint*/,
		width : int/*GLsizei*/,
		height : int/*GLsizei*/
	) : void;

} // end of WebGLRenderingContext

native final class WebGLContextEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(
		type : string/*DOMString*/,
		eventInit : WebGLContextEventInit
	);

	__readonly__ var statusMessage : string/*DOMString*/;

} // end of WebGLContextEvent

native final class WebGLContextEventInit extends EventInit {

	var statusMessage : string/*DOMString*/;

} // end of WebGLContextEventInit

// alias TimerHandler = function():void

// alias FrameRequestCallback = function(time:number/*DOMTimeStamp*/):void

native __fake__ class WindowAnimationTiming {

	function requestAnimationFrame(
		callback : function(time:number/*DOMTimeStamp*/):void/*FrameRequestCallback*/
	) : int/*long*/;
	function cancelAnimationFrame(handle : int/*long*/) : void;
	// vender's extension
	function webkitRequestAnimationFrame(
		callback : function(time:number/*DOMTimeStamp*/):void/*FrameRequestCallback*/
	) : int/*long*/;
	function webkitCancelAnimationFrame(handle : int/*long*/) : void;
	function mozRequestAnimationFrame(
		callback : function(time:number/*DOMTimeStamp*/):void/*FrameRequestCallback*/
	) : int/*long*/;
	function mozCancelAnimationFrame(handle : int/*long*/) : void;

} // end of WindowAnimationTiming

native final __fake__ class CanvasPixelArray {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : Nullable.<int>/*octet*/;

} // end of CanvasPixelArray

/*
end of generated files from:
	http://www.w3.org/TR/dom/
	http://www.w3.org/TR/DOM-Level-2-Views/idl/views.idl
	http://www.w3.org/TR/DOM-Level-3-Events/
	idl2jsx/extra/events.idl
	http://www.w3.org/TR/XMLHttpRequest/
	http://dev.w3.org/csswg/cssom/
	http://dev.w3.org/csswg/cssom-view/
	idl2jsx/extra/chrome.idl
	idl2jsx/extra/firefox.idl
	http://www.w3.org/TR/html5/single-page.html
	http://www.w3.org/TR/FileAPI/
	idl2jsx/extra/file.idl
	http://www.w3.org/TR/touch-events/
	http://www.w3.org/TR/websockets/
	http://dev.w3.org/geo/api/spec-source.html
	http://dev.w3.org/html5/webstorage/
	http://www.w3.org/TR/selectors-api/
	http://www.w3.org/TR/webmessaging/
	http://www.w3.org/TR/workers/
	http://www.w3.org/TR/eventsource/
	http://html5.org/specs/dom-parsing.html
	https://www.khronos.org/registry/typedarray/specs/latest/typedarray.idl
	http://dev.w3.org/html5/2dcontext/
	https://www.khronos.org/registry/webgl/specs/latest/webgl.idl
	idl2jsx/extra/timers.idl
	idl2jsx/extra/animation-timing.idl
	idl2jsx/extra/legacy.idl
*/

